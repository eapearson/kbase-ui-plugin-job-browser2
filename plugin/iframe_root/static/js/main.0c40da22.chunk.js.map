{"version":3,"sources":["../../../kbase-ui-lib/lib/lib/comm/GenericClient.js","../../../kbase-ui-lib/lib/lib/comm/ServiceClient.js","../../../kbase-ui-lib/lib/lib/coreServices/auth.js","../../../kbase-ui-lib/lib/lib/windowChannel.js","../../../kbase-ui-lib/lib/lib/comm/DynamicServiceClient.js","../../../kbase-ui-lib/lib/lib/coreServices/ServiceWizard.js","../../../kbase-ui-lib/lib/lib/coreServices/NarrativeJobService.js","../../../kbase-ui-lib/lib/lib/coreServices/Catalog.js","../../../kbase-ui-lib/lib/lib/time.js","../../../kbase-ui-lib/lib/lib/Auth.js","../../../kbase-ui-lib/lib/index.js","redux/actions/index.ts","redux/reducers/myJobs.ts","redux/reducers/userJobs.ts","redux/reducers/app.ts","redux/reducers/publicAppStats.ts","redux/reducers/userRunSummary.ts","redux/store.ts","redux/reducers/index.ts","components/JobStatus.tsx","components/JobLog/view.tsx","components/JobDetail/FlexTabs.tsx","components/JobInfo.tsx","components/JobDetail/view.tsx","lib/MetricsServiceClient.ts","redux/actions/utils.ts","components/JobDetail/state.tsx","components/JobDetail/index.ts","lib/Poller.ts","lib/PubSub.ts","components/Monitor.tsx","components/UserJobs/view.tsx","lib/CancelableRequest.ts","redux/actions/userJobs.ts","components/UserJobs/index.tsx","components/MyJobs/view.tsx","redux/actions/myJobs.ts","components/MyJobs/index.tsx","components/PublicAppStats/view.tsx","redux/actions/publicAppStats.ts","components/PublicAppStats/index.tsx","components/UserRunSummary/view.tsx","redux/actions/userRunSummary.ts","components/UserRunSummary/index.tsx","components/Main/view.tsx","components/Main/state.ts","redux/actions/app.ts","components/Main/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["_regeneratorRuntime","_createClass","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_inherits","_wrapNativeSuper","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","axios_1","DEFAULT_TIMEOUT","JSONRPCException","_Error","_ref","_this","name","code","message","error","call","Error","classJSONRPCServerException","_Error2","arguments","GenericClient","_ref2","url","token","module","timeout","key","method","param","version","id","String","Math","random","slice","params","func","mark","_callee","headers","response","wrap","_context","prev","makePayload","default","post","sent","abrupt","data","stop","AuthorizedGenericClient","_GenericClient","_this2","_callee2","_context2","ServiceClient","constructor","AuthorizedServiceClient","_ServiceClient","Authorization","Accept","catch","err","endpoints","AuthClient","path","concat","join","get","makePath","_callee3","_ref3","_context3","_slicedToArray","uuid_1","Listener","onSuccess","onError","WaitingListener","_Listener","started","Date","Envelope","from","to","v4","created","Message","payload","envelope","toJSON","Channel","window","debug","document","location","host","origin","debugLog","partnerId","awaitingResponse","Map","waitingListeners","listeners","lastId","sentCount","receivedCount","unwelcomeReceivedCount","unwelcomeReceivedCountThreshhold","unwelcomeReceiptWarning","unwelcomeReceiptWarningCount","currentListener","console","log","toChannelId","messageEvent","warn","has","delete","handler","ex","awaiting","forEach","listener","set","push","messageId","success","listen","postMessage","JSON","stringify","sendMessage","sendRequest","_this3","setTimeout","now","getTime","_loop","_ref4","_Array$from","_i","_ref5","filter","elapsed","length","Array","entries","size","startMonitor","listenOnce","_this4","received","_this5","receiveMessage","addEventListener","removeEventListener","ServiceWizard_1","GenericClient_1","Cache","itemLifetime","monitoringFrequency","waiterTimeout","waiterFrequency","cache","cacheLifetime","isMonitoring","newCache","cacheRenewed","keys","item","isExpired","runMonitor","cacheItem","createdAt","undefined","cached","fetcher","waiter","reserved","reserveAndFetch","reserveItem","setItem","finally","reserveWaiter","moduleCache","DynamicServiceClient","rpcContext","authorization","moduleId","getModule","getItemWithWait","getCached","client","ServiceWizardClient","getServiceStatus","module_name","funcName","moduleInfo","lookupModule","callFunc","isString","x","p","Reflect","isGetServiceStatusResult","subType","every","arrayElement","isArray","isNumber","_ServiceClient_1$Auth","theResult","NarrativeJobServiceClient","_GenericClient_1$Gene","CatalogClient","t0","_ref6","TimeUnit","timeUnits","unit","MILLISECOND","long","short","single","SECOND","MINUTE","HOUR","DAY","makeUnit","format","label","niceRelativeTime","someDate","measure","measureAbs","options","nowDate","round","elapsedAbs","abs","absoluteAfter","prefix","suffix","getFullYear","Intl","DateTimeFormat","month","day","year","niceDuration","minimized","temp","parts","map","unitValue","reverse","pop","keep","i","precision","niceElapsed","__importStar","k","hasOwnProperty","AuthState","Cookies","auth_1","Auth","auth","status","UNAUTHENTICATED","userAuthorization","all","getTokenInfo","getMe","account","roles","desc","AUTHENTICATED","username","user","realname","display","windowChannel_1","ServiceClient_1","DynamicServiceClient_1","NarrativeJobService_1","Catalog_1","time_1","Auth_1","ActionType","reducer","state","action","type","MY_JOBS_SEARCH_SUCCESS","views","myJobsView","searchState","SearchState","SEARCHED","rawJobs","jobs","jobsFetchedAt","searchExpression","myJobsSearchSuccess","MY_JOBS_SEARCH_START","SEARCHING","myJobsSearchStart","MY_JOBS_CANCEL_SUCCESS","myJobsCancelJobSuccess","USER_JOBS_SEARCH_START","userJobsView","userJobsSearchStart","USER_JOBS_SEARCH_SUCCESS","userJobsSearchSuccess","USER_JOBS_CANCEL_START","USER_JOBS_CANCEL_SUCCESS","cancelJobSuccess","MAIN_LOAD_SUCCESS","mainView","loadingState","ComponentLoadingState","SUCCESS","isAdmin","mainLoadSuccess","MAIN_UNLOAD","NONE","unload","PUBLIC_APP_STATS_SEARCH_START","publicAppStatsView","searchStart","PUBLIC_APP_STATS_SEARCH_SUCCESS","appStats","searchSuccess","JobStatus","USER_RUN_SUMMARY_SEARCH_START","userRunSummaryView","USER_RUN_SUMMARY_SEARCH_SUCCESS","userRunSummary","baseState","baseReducer","appReducer","myJobsReducer","userJobsReducer","publicAppStatsReducer","makeInitialStoreState","makeBaseStoreState","rawAppStats","query","jobColor","QUEUED","RUNNING","CANCELED","FINISHED","ERRORED","PlayState","JobStatusComponent","spin","jobStatusLabel","props","jobStatus","color","React","Component","Tabs","selectedTabIndex","tabIndex","setState","tabs","tab","index","classNames","className","onClick","selectTab","title","component","renderTabs","renderTabBody","JobLogs","playLogTimer","bodyRef","currentJobStatus","createRef","playState","isPaused","job","current","isActive","scrollTop","clientHeight","lastJobStatus","style","textAlign","fontStyle","backgroundColor","data-end","lines","rows","line","rowStyle","isError","lineNumber","renderLastLine","ref","dataSource","rowKey","logLine","pagination","scroll","y","rowClassName","Column","dataIndex","width","render","numberDisplay","NumberFormat","useGrouping","sorter","a","b","row","contentType","content","Papa","unparse","delimiter","logToTSV","logToJSON","logToCSV","filename","downloadLink","createElement","downloadContent","Blob","href","URL","createObjectURL","download","visibility","body","appendChild","click","removeChild","revokeObjectURL","downloadLog","PLAYING","PAUSED","irrelevant","spinning","icon","disabled","onPlayLog","bind","onPauseLog","menu","onMenuClick","Item","overlay","renderPlayPause","renderToolbar","renderJobLog","JobInfo","date","queuedAt","time","useClock","runAt","finishAt","narrativeID","target","rel","narrativeTitle","appID","appTitle","renderSubmitted","renderQueuedFor","renderStateSpinner","renderRunFor","JobDetail","view","JobLogState","JOB_QUEUED","renderQueued","INITIAL_LOADING","renderLoading","ERROR","renderError","ACTIVE_LOADED","ACTIVE_LOADING","FINISHED_LOADED","flex","flexDirection","borderBottom","padding","overflowWrap","wordWrap","minHeight","overflowY","renderJobInfo","MetricsServiceClient","epoch_range","user_ids","job_id","serviceJobToUIJob","getJobStatus","wsid","parseInt","app_id","narrative_name","creation_time","queuedElapsed","clientGroups","client_groups","makeJobQueued","exec_start_time","runElapsed","makeJobRunning","finish_time","makeJobFinished","makeJobErrored","makeJobCanceled","compareStatus","some","extractTimeRange","timeRange","kind","preset","endDate","hourInMilliseconds","getTimeRange","start","end","JobLogsState","metricsClient","serviceWizardURL","jobID","getJob","job_state","skipLines","njsClient","njsURL","getJobLogs","skip_lines","jobLog","is_error","poller","startingLines","getJobLog","newLog","startQueuedPolling","loop","getInitialJobLog","connect","PollerState","app","config","services","NarrativeJobService","ServiceWizard","dispatch","ownProps","PubSubProxy","pubsub","subscriptions","messageID","on","off","PubSub","sendQueue","messageListeners","allListeners","queue","messageListener","sendMessages","processQueue","uuid","l","Poller","statusTimer","statusCount","watchStartAt","watcherTimer","waitTimer","pubsubProxy","STOPPED","clearInterval","clearTimeout","updateOnProgress","startWaiting","STARTED","pollWatch","stopPolling","POLLING","pollWatcherLoop","WAITING","watchInterval","pollWaitProgressLoop","setInterval","pollInterval","progressSteps","runPoll","onPoll","startWatching","is","pause","play","startListeningForPollingEvent","onProgress","stopListeningForPollingEvent","MONITORING_INTERVAL","MONITORING_FEEDBACK_STEPS","WATCH_INTERVAL","Monitor","monitoringTimer","monitoringStatusTimer","pollWatcherTimer","searchListenerID","pollWaitProgress","isPollingInitiated","pollingStartedAt","isPolling","isOpen","startOpen","progress","startPolling","startMonitoring","stopMonitoring","showControls","monitoringStatus","monitor","buttonType","opener","defaultChecked","checkedChildren","unCheckedChildren","onChange","onToggleOpen","percent","showInfo","strokeWidth","strokeColor","toggleMonitoring","fontSize","jobStatusFilterOptions","UserJobs","currentQuery","showDates","currentJobStatusFilter","defaultTimeRange","isFilterOpen","selectedJob","doSearch","send","event","preventDefault","forceSearch","jobStatusFilter","jobStatuses","jobStatusFilterOptionsToJobStatus","search","dateString","existingTimeRange","valueOf","Infinity","onConfirm","cancelJob","okText","cancelText","dateControls","Fragment","showTime","allowClear","moment","onRangeFromChange","onRangeToChange","layout","onSubmit","defaultValue","placeholder","onChangeQuery","onChangeTimeRange","dropdownMatchSelectWidth","Option","htmlType","onToggleFilterArea","isPollerRunning","showMonitoringControls","filters","checked","fontWeight","marginRight","onClickAny","onClickActive","onClickFinished","Group","onFilterChange","filterRow","filterRowStyle","margin","renderFilterInput","renderSearchInput","footer","onCloseModal","fontFamily","onCancel","visible","loading","position","showSizeChanger","onClickDetail","localeCompare","defaultSortOrder","duration","_","renderJobAction","data-k-b-testhook-component","renderControlBar","renderJobsTable","renderJobDetail","CancelableRequest","pendingTasks","isCanceled","task","cancel","cancelPending","request","userJobsSearchError","USER_JOBS_SEARCH_ERROR","userJobsSearchRequest","promise","getJobs","metrics","job_states","jobState","newID","userJobsCancelJobError","USER_JOBS_CANCEL_ERROR","UserJobsReduxAdapter","getState","searchTerms","split","term","RegExp","timeRangeStart","timeRangeEnd","spawn","newJobs","test","userJobsSearch","userJobsCancelJob","MyJobs","defaultTimeRangePreset","data-k-b-testhook-button","onJobCancel","myJobsSearchError","MY_JOBS_SEARCH_ERROR","myJobsSearchRequests","myJobsRefreshSearch","myJobsCancelJobError","MY_JOBS_CANCEL_ERROR","myJobsSearch","MY_JOBS_CANCEL_START","myJobsCancelJob","refreshSearch","PublicAppStats","onSearch","onSubmitSearch","stat","appId","onTableChange","moduleTitle","functionId","functionTitle","align","runCount","errorCount","successRate","averageRunTime","averageQueueTime","totalRunTime","renderAppStatsTable","calcAverage","total","count","searchError","PUBLIC_APP_STATS_SEARCH_ERROR","catalogUrl","Catalog","catalogClient","getExecAggrStats","rawStats","stats","full_app_id","part","whole","number_of_calls","number_of_errors","total_exec_time","total_queue_time","expression","filtered","UserRunSummary","renderTable","USER_RUN_SUMMARY_SEARCH_ERROR","begin","getExecAggrTable","func_mod","n","Main","defaultTabKey","activeTabKey","defaultActiveTabKey","setTitle","activeKey","userRunTab","userJobsTab","tabLabel","TabPane","userJobsTabLabel","animated","onTabsChange","destroyInactiveTabPane","runtime","navigation","sendTitle","setView","setParams","mainLoadError","MAIN_LOAD_ERROR","Loader","LOADING","onLoad","MAIN_LOAD_START","catalogURL","store","createStore","compose","applyMiddleware","thunk","App","required","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kHAEA,IAAIA,EAAsB,EAAQ,IAE9BC,EAAe,EAAQ,IAEvBC,EAAkB,EAAQ,IAE1BC,EAA6B,EAAQ,IAErCC,EAAkB,EAAQ,IAE1BC,EAAY,EAAQ,IAEpBC,EAAmB,EAAQ,KAE3BC,EAAYC,MAAQA,KAAKD,WAAa,SAAUE,EAASC,EAAYC,EAAGC,GAO1E,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GACjD,SAASC,EAAUC,GACjB,IACEC,EAAKN,EAAUO,KAAKF,IACpB,MAAOG,GACPL,EAAOK,IAIX,SAASC,EAASJ,GAChB,IACEC,EAAKN,EAAiB,MAAEK,IACxB,MAAOG,GACPL,EAAOK,IAIX,SAASF,EAAKI,GAvBhB,IAAeL,EAwBXK,EAAOC,KAAOT,EAAQQ,EAAOL,QAxBlBA,EAwBiCK,EAAOL,MAvB9CA,aAAiBN,EAAIM,EAAQ,IAAIN,EAAE,SAAUG,GAClDA,EAAQG,MAsBkDO,KAAKR,EAAWK,GAG5EH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,WAI9DO,EAAkBlB,MAAQA,KAAKkB,iBAAmB,SAAUC,GAC9D,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CACnC,QAAWA,IAIfE,OAAOC,eAAeC,EAAS,aAAc,CAC3Cd,OAAO,IAGT,IAAIe,EAAUN,EAAgB,EAAQ,MAElCO,EAAkB,IAElBC,EAEJ,SAAUC,GAGR,SAASD,EAAiBE,GACxB,IAAIC,EAEAC,EAAOF,EAAKE,KACZC,EAAOH,EAAKG,KACZC,EAAUJ,EAAKI,QACfC,EAAQL,EAAKK,MAQjB,OANAvC,EAAgBM,KAAM0B,IAEtBG,EAAQlC,EAA2BK,KAAMJ,EAAgB8B,GAAkBQ,KAAKlC,KAAMgC,KAChFF,KAAOA,EACbD,EAAME,KAAOA,EACbF,EAAMI,MAAQA,EACPJ,EAGT,OAnBAhC,EAAU6B,EAAkBC,GAmBrBD,EApBT,CAqBE5B,EAAiBqC,QAEnBZ,EAAQG,iBAAmBA,EAE3B,IAAIU,EAEJ,SAAUC,GAGR,SAASD,IAGP,OAFA1C,EAAgBM,KAAMoC,GAEfzC,EAA2BK,KAAMJ,EAAgBwC,GAA6BnB,MAAMjB,KAAMsC,YAGnG,OARAzC,EAAUuC,EAA6BC,GAQhCD,EATT,CAUEtC,EAAiBqC,QAEnBZ,EAAQa,4BAA8BA,EAEtC,IAAIG,EAEJ,WACE,SAASA,EAAcC,GACrB,IAAIC,EAAMD,EAAMC,IACZC,EAAQF,EAAME,MACdC,EAASH,EAAMG,OACfC,EAAUJ,EAAMI,QAEpBlD,EAAgBM,KAAMuC,GAEtBvC,KAAKyC,IAAMA,EACXzC,KAAK0C,MAAQA,GAAS,KACtB1C,KAAK2C,OAASA,EACd3C,KAAK4C,QAAUA,GAAWnB,EAsD5B,OAnDAhC,EAAa8C,EAAe,CAAC,CAC3BM,IAAK,cACLpC,MAAO,SAAqBqC,EAAQC,GAClC,MAAO,CACLC,QAAS,MACTF,OAAQ9C,KAAK2C,OAAS,IAAMG,EAC5BG,GAAIC,OAAOC,KAAKC,UAAUC,MAAM,GAChCC,OAAQP,KAGX,CACDF,IAAK,WACLpC,MAAO,SAAkB8C,EAAMR,GAC7B,OAAOhD,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASC,IAChC,IAAIC,EAASJ,EAAQK,EACrB,OAAOnE,EAAoBoE,KAAK,SAAkBC,GAChD,OACE,OAAQA,EAASC,KAAOD,EAASlD,MAC/B,KAAK,EAYH,OAXA+C,EAAU,CACR,eAAgB,mBAChB,OAAU,oBAGR1D,KAAK0C,QACPgB,EAAuB,cAAI1D,KAAK0C,OAGlCY,EAAStD,KAAK+D,YAAYR,EAAMR,GAChCc,EAASlD,KAAO,EACTa,EAAQwC,QAAQC,KAAKjE,KAAKyC,IAAKa,EAAQ,CAC5CI,QAASA,EACTd,QAAS5C,KAAK4C,UAGlB,KAAK,EAEH,OADAe,EAAWE,EAASK,KACbL,EAASM,OAAO,SAAUR,EAASS,KAAKtD,QAEjD,KAAK,EACL,IAAK,MACH,OAAO+C,EAASQ,SAGrBZ,EAASzD,aAKXuC,EAlET,GAqEAhB,EAAQgB,cAAgBA,EAExB,IAAI+B,EAEJ,SAAUC,GAGR,SAASD,EAAwBhB,GAC/B,IAAIkB,EAMJ,GAJA9E,EAAgBM,KAAMsE,GAEtBE,EAAS7E,EAA2BK,KAAMJ,EAAgB0E,GAAyBpC,KAAKlC,KAAMsD,KAEzFA,EAAOZ,MACV,MAAM,IAAIP,MAAM,oCAIlB,OADAqC,EAAO9B,MAAQY,EAAOZ,MACf8B,EAwCT,OAtDA3E,EAAUyE,EAuDV/B,GAtCA9C,EAAa6E,EAAyB,CAAC,CACrCzB,IAAK,WACLpC,MAAO,SAAkB8C,EAAMR,GAC7B,OAAOhD,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASiB,IAChC,IAAInB,EAAQI,EAASC,EACrB,OAAOnE,EAAoBoE,KAAK,SAAmBc,GACjD,OACE,OAAQA,EAAUZ,KAAOY,EAAU/D,MACjC,KAAK,EAQH,OAPA2C,EAAStD,KAAK+D,YAAYR,EAAMR,GAChCW,EAAU,CACR,eAAgB,mBAChB,OAAU,mBACV,cAAiB1D,KAAK0C,OAExBgC,EAAU/D,KAAO,EACVa,EAAQwC,QAAQC,KAAKjE,KAAKyC,IAAKa,EAAQ,CAC5CI,QAASA,EACTd,QAAS5C,KAAK4C,UAGlB,KAAK,EAEH,OADAe,EAAWe,EAAUR,KACdQ,EAAUP,OAAO,SAAUR,EAASS,KAAKtD,QAElD,KAAK,EACL,IAAK,MACH,OAAO4D,EAAUL,SAGtBI,EAAUzE,aAKZsE,EAvDT,GA0DA/C,EAAQ+C,wBAA0BA,G,iCC5OlC,IAAI3E,EAA6B,EAAQ,IAErCC,EAAkB,EAAQ,IAE1BC,EAAY,EAAQ,IAEpBH,EAAkB,EAAQ,IAE1BD,EAAe,EAAQ,IAEvByB,EAAkBlB,MAAQA,KAAKkB,iBAAmB,SAAUC,GAC9D,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CACnC,QAAWA,IAIfE,OAAOC,eAAeC,EAAS,aAAc,CAC3Cd,OAAO,IAGT,IAAIe,EAAUN,EAAgB,EAAQ,MAElCyD,EAEJ,WACE,SAASA,EAAc/C,GACrB,IAAIa,EAAMb,EAAKa,IACXC,EAAQd,EAAKc,MACbE,EAAUhB,EAAKgB,QAEnBlD,EAAgBM,KAAM2E,GAEtB3E,KAAKyC,IAAMA,EACXzC,KAAK0C,MAAQA,GAAS,KACtB1C,KAAK4C,QAAUA,EAyBjB,OAtBAnD,EAAakF,EAAe,CAAC,CAC3B9B,IAAK,cACLpC,MAAO,SAAqBqC,EAAQC,GAClC,MAAO,CACLC,QAAS,MACTF,OAAQ9C,KAAK4E,YAAYjC,OAAS,IAAMG,EACxCG,GAAIC,OAAOC,KAAKC,UAAUC,MAAM,GAChCC,OAAQ,CAACP,MAGZ,CACDF,IAAK,mBACLpC,MAAO,SAA0BqC,GAC/B,MAAO,CACLE,QAAS,MACTF,OAAQ9C,KAAK4E,YAAYjC,OAAS,IAAMG,EACxCG,GAAIC,OAAOC,KAAKC,UAAUC,MAAM,GAChCC,OAAQ,QAKPqB,EAnCT,GAsCApD,EAAQoD,cAAgBA,EAExB,IAAIE,EAEJ,SAAUC,GAGR,SAASD,EAAwBvB,GAC/B,IAAIzB,EAMJ,GAJAnC,EAAgBM,KAAM6E,GAEtBhD,EAAQlC,EAA2BK,KAAMJ,EAAgBiF,GAAyB3C,KAAKlC,KAAMsD,KAExFA,EAAOZ,MACV,MAAM,IAAIP,MAAM,oCAIlB,OADAN,EAAMa,MAAQY,EAAOZ,MACdb,EA0BT,OAxCAhC,EAAUgF,EAyCVF,GAxBAlF,EAAaoF,EAAyB,CAAC,CACrChC,IAAK,WACLpC,MAAO,SAAkB8C,EAAMR,GAC7B,IAAIyB,EAASxE,KAEb,OAAO,IAAIK,QAAQ,SAAUC,EAASC,GACnBiB,EAAQwC,QAAQC,KAAKO,EAAO/B,IAAK+B,EAAOT,YAAYR,EAAMR,GAAQ,CACjFW,QAAS,CACPqB,cAAeP,EAAO9B,MACtB,eAAgB,mBAChBsC,OAAQ,oBAEVpC,QAAS4B,EAAO5B,UAEP5B,KAAK,SAAU2C,GACxBrD,EAAQqD,EAASS,QAChBa,MAAM,SAAUC,GACjB3E,EAAO2E,WAMRL,EAzCT,GA4CAtD,EAAQsD,wBAA0BA,G,iCC9GlC,IAAIrF,EAAsB,EAAQ,IAE9BE,EAAkB,EAAQ,IAE1BD,EAAe,EAAQ,IAEvBM,EAAYC,MAAQA,KAAKD,WAAa,SAAUE,EAASC,EAAYC,EAAGC,GAO1E,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GACjD,SAASC,EAAUC,GACjB,IACEC,EAAKN,EAAUO,KAAKF,IACpB,MAAOG,GACPL,EAAOK,IAIX,SAASC,EAASJ,GAChB,IACEC,EAAKN,EAAiB,MAAEK,IACxB,MAAOG,GACPL,EAAOK,IAIX,SAASF,EAAKI,GAvBhB,IAAeL,EAwBXK,EAAOC,KAAOT,EAAQQ,EAAOL,QAxBlBA,EAwBiCK,EAAOL,MAvB9CA,aAAiBN,EAAIM,EAAQ,IAAIN,EAAE,SAAUG,GAClDA,EAAQG,MAsBkDO,KAAKR,EAAWK,GAG5EH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,WAI9DO,EAAkBlB,MAAQA,KAAKkB,iBAAmB,SAAUC,GAC9D,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CACnC,QAAWA,IAIfE,OAAOC,eAAeC,EAAS,aAAc,CAC3Cd,OAAO,IAGT,IAAIe,EAAUN,EAAgB,EAAQ,MAElCiE,EACI,GADJA,EAES,eAFTA,EAGK,YAsBLC,EAEJ,WACE,SAASA,EAAWxD,GAClB,IAAIa,EAAMb,EAAKa,IAEf/C,EAAgBM,KAAMoF,GAEtBpF,KAAKyC,IAAMA,EA8Gb,OA3GAhD,EAAa2F,EAAY,CAAC,CACxBvC,IAAK,WACLpC,MAAO,SAAkB4E,GACvB,MAAoB,kBAATA,EACF,CAACrF,KAAKyC,KAAK6C,OAAO,CAACD,IAAOE,KAAK,KAGjC,CAACvF,KAAKyC,KAAK6C,OAAOD,GAAME,KAAK,OAErC,CACD1C,IAAK,OACLpC,MAAO,WACL,OAAOV,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASC,IAChC,IAAIE,EACJ,OAAOnE,EAAoBoE,KAAK,SAAkBC,GAChD,OACE,OAAQA,EAASC,KAAOD,EAASlD,MAC/B,KAAK,EAEH,OADAkD,EAASlD,KAAO,EACTa,EAAQwC,QAAQwB,IAAIxF,KAAKyF,SAAS,CAACN,IAAkB,CAC1DzB,QAAS,CACPsB,OAAQ,sBAId,KAAK,EAEH,OADArB,EAAWE,EAASK,KACbL,EAASM,OAAO,SAAUR,EAASS,MAE5C,KAAK,EACL,IAAK,MACH,OAAOP,EAASQ,SAGrBZ,EAASzD,WAGf,CACD6C,IAAK,eACLpC,MAAO,SAAsBiC,GAC3B,OAAO3C,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASiB,IAChC,IAAIjC,EAAO4B,EAEX,OAAO5E,EAAoBoE,KAAK,SAAmBc,GACjD,OACE,OAAQA,EAAUZ,KAAOY,EAAU/D,MACjC,KAAK,EAEH,OADA+D,EAAU/D,KAAO,EACVa,EAAQwC,QAAQwB,IAAIxF,KAAKyF,SAAS,CAACN,IAAuB,CAC/DzB,QAAS,CACPsB,OAAQ,mBACRD,cAAerC,KAIrB,KAAK,EAGH,OAFAF,EAAQkC,EAAUR,KAClBE,EAAO5B,EAAM4B,KACNM,EAAUP,OAAO,SAAUC,GAEpC,KAAK,EACL,IAAK,MACH,OAAOM,EAAUL,SAGtBI,EAAUzE,WAGhB,CACD6C,IAAK,QACLpC,MAAO,SAAeiC,GACpB,OAAO3C,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASkC,IAChC,IAAIC,EAAOvB,EAEX,OAAO5E,EAAoBoE,KAAK,SAAmBgC,GACjD,OACE,OAAQA,EAAU9B,KAAO8B,EAAUjF,MACjC,KAAK,EAEH,OADAiF,EAAUjF,KAAO,EACVa,EAAQwC,QAAQwB,IAAIxF,KAAKyF,SAAS,CAACN,IAAmB,CAC3DzB,QAAS,CACPsB,OAAQ,mBACRD,cAAerC,KAIrB,KAAK,EAGH,OAFAiD,EAAQC,EAAU1B,KAClBE,EAAOuB,EAAMvB,KACNwB,EAAUzB,OAAO,SAAUC,GAEpC,KAAK,EACL,IAAK,MACH,OAAOwB,EAAUvB,SAGtBqB,EAAU1F,aAKZoF,EApHT,GAuHA7D,EAAQyC,QAAUoB,G,6FCpMlB,IAAIS,EAAiB,EAAQ,KAEzBpG,EAAe,EAAQ,IAEvBE,EAA6B,EAAQ,IAErCC,EAAkB,EAAQ,IAE1BC,EAAY,EAAQ,IAEpBH,EAAkB,EAAQ,IAE1BwB,EAAkBlB,MAAQA,KAAKkB,iBAAmB,SAAUC,GAC9D,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CACnC,QAAWA,IAIfE,OAAOC,eAAeC,EAAS,aAAc,CAC3Cd,OAAO,IAGT,IAAIqF,EAAS5E,EAAgB,EAAQ,MAEjC6E,EAAW,SAASA,EAASnE,GAC/B,IAAIE,EAAOF,EAAKE,KACZkE,EAAYpE,EAAKoE,UACjBC,EAAUrE,EAAKqE,QAEnBvG,EAAgBM,KAAM+F,GAEtB/F,KAAK8B,KAAOA,EACZ9B,KAAKgG,UAAYA,EACjBhG,KAAKiG,QAAUA,GAGbC,EAEJ,SAAUC,GAGR,SAASD,EAAgB5C,GACvB,IAAIzB,EAOJ,OALAnC,EAAgBM,KAAMkG,IAEtBrE,EAAQlC,EAA2BK,KAAMJ,EAAgBsG,GAAiBhE,KAAKlC,KAAMsD,KAC/E8C,QAAU,IAAIC,KACpBxE,EAAMe,QAAUU,EAAOV,SAAW,IAC3Bf,EAGT,OAbAhC,EAAUqG,EAcVH,GADOG,EAdT,GAiBII,EAEJ,WACE,SAASA,EAAS9D,GAChB,IAAI+D,EAAO/D,EAAM+D,KACbC,EAAKhE,EAAMgE,GAEf9G,EAAgBM,KAAMsG,GAEtBtG,KAAKuG,KAAOA,EACZvG,KAAKwG,GAAKA,EACVxG,KAAKiD,GAAK6C,EAAO9B,QAAQyC,KACzBzG,KAAK0G,QAAU,IAAIL,KAerB,OAZA5G,EAAa6G,EAAU,CAAC,CACtBzD,IAAK,SACLpC,MAAO,WACL,MAAO,CACL8F,KAAMvG,KAAKuG,KACXC,GAAIxG,KAAKwG,GACTvD,GAAIjD,KAAKiD,GACTyD,QAAS1G,KAAK0G,aAKbJ,EAzBT,GA4BIK,EAEJ,WACE,SAASA,EAAQhB,GACf,IAAI7D,EAAO6D,EAAM7D,KACb8E,EAAUjB,EAAMiB,QAChBL,EAAOZ,EAAMY,KACbC,EAAKb,EAAMa,GAEf9G,EAAgBM,KAAM2G,GAEtB3G,KAAK8B,KAAOA,EACZ9B,KAAK4G,QAAUA,EACf5G,KAAKiD,GAAK6C,EAAO9B,QAAQyC,KACzBzG,KAAK0G,QAAU,IAAIL,KACnBrG,KAAK6G,SAAW,IAAIP,EAAS,CAC3BC,KAAMA,EACNC,GAAIA,IAeR,OAXA/G,EAAakH,EAAS,CAAC,CACrB9D,IAAK,SACLpC,MAAO,WACL,MAAO,CACLoG,SAAU7G,KAAK6G,SAASC,SACxBhF,KAAM9B,KAAK8B,KACX8E,QAAS5G,KAAK4G,aAKbD,EA9BT,GAiCII,EAEJ,WACE,SAASA,EAAQzD,GAMf,GALA5D,EAAgBM,KAAM+G,GAEtB/G,KAAKgH,OAAS1D,EAAO0D,QAAUA,OAC/BhH,KAAKiH,MAAQ3D,EAAO2D,QAAS,EAEA,OAAzBjH,KAAKgH,OAAOE,SACd,MAAM,IAAI/E,MAAM,eAGlB,GAAsC,OAAlCnC,KAAKgH,OAAOE,SAASC,SACvB,MAAM,IAAIhF,MAAM,eAGlBnC,KAAKoH,KAAO9D,EAAO8D,MAAQpH,KAAKgH,OAAOE,SAASC,SAASE,OACzDrH,KAAKiD,GAAKK,EAAOL,IAAM6C,EAAO9B,QAAQyC,KACtCzG,KAAKsH,SAAS,yBAA2BhE,EAAOkD,IAChDxG,KAAKuH,UAAYjE,EAAOkD,IAAM,KAC9BxG,KAAKwH,iBAAmB,IAAIC,IAC5BzH,KAAK0H,iBAAmB,IAAID,IAC5BzH,KAAK2H,UAAY,IAAIF,IACrBzH,KAAK4H,OAAS,EACd5H,KAAK6H,UAAY,EACjB7H,KAAK8H,cAAgB,EACrB9H,KAAK+H,uBAAyB,EAC9B/H,KAAKgI,iCAAmC,IACxChI,KAAKiI,yBAA0B,EAC/BjI,KAAKkI,6BAA+B,EACpClI,KAAKmI,gBAAkB,KA8TzB,OA3TA1I,EAAasH,EAAS,CAAC,CACrBlE,IAAK,WACLpC,MAAO,SAAkBuB,GACnBhC,KAAKiH,OACPmB,QAAQC,IAAI,mBAAqBrI,KAAKiD,GAAK,KAAOjB,KAGrD,CACDa,IAAK,QACLpC,MAAO,SAAe6H,GACpBtI,KAAKuH,UAAYe,IAElB,CACDzF,IAAK,QACLpC,MAAO,WAEL,OADAT,KAAK4H,QAAU,EACR,OAAS1E,OAAOlD,KAAK4H,UAE7B,CACD/E,IAAK,iBACLpC,MAAO,SAAwB8H,GAC7B,IAAIvG,EAAUuG,EAAanE,KAE3B,IAAKpC,EAOH,OANAhC,KAAK+H,8BAED/H,KAAKiI,yBACPG,QAAQI,KAAK,sCAAuCD,IAMxD,IAAKvG,EAAQ6E,SAOX,OANA7G,KAAK+H,8BAED/H,KAAKiI,yBACPG,QAAQI,KAAK,uDAAwDD,IAUzE,GAJIvI,KAAKiH,OACPmB,QAAQnB,MAAM,yBAA0BjH,KAAKiD,GAAIjB,EAAQ6E,SAASL,GAAIxG,KAAKuH,UAAWvF,EAAQ6E,SAASN,KAAMvE,GAG3GA,EAAQ6E,SAASL,KAAOxG,KAAKiD,GAO/B,OANAjD,KAAK+H,8BAED/H,KAAKiI,yBACPG,QAAQI,KAAK,oDAAqD,UAAWxG,EAAS,aAAchC,KAAKiD,GAAI,aAAcjD,KAAKuH,YAWpI,GALIvH,KAAKkI,6BAA+BlI,KAAKgI,mCAC3ChI,KAAKiI,yBAA0B,EAC/BG,QAAQI,KAAK,4CAA8CxI,KAAKkI,6BAA+B,gBAG7FlG,EAAQ6E,SAAS5D,IAAMjD,KAAKwH,iBAAiBiB,IAAIzG,EAAQ6E,SAAS5D,IACpE,IACE,IAAIU,EAAW3D,KAAKwH,iBAAiBhC,IAAIxD,EAAQ6E,SAAS5D,IAC1DjD,KAAKwH,iBAAiBkB,OAAO1G,EAAQ6E,SAAS5D,IAE1CU,GACFA,EAASgF,QAAQ3G,EAAQ4E,SAE3B,MAAOgC,GACPR,QAAQnG,MAAM,uCAAwCD,EAAS4G,GAInE,GAAI5I,KAAK0H,iBAAiBe,IAAIzG,EAAQF,MAAO,CAC3C,IAAI+G,EAAW7I,KAAK0H,iBAAiBlC,IAAIxD,EAAQF,MACjD9B,KAAK0H,iBAAiBgB,OAAO1G,EAAQF,MACrC+G,EAASC,QAAQ,SAAUC,GACzB,IACEA,EAAS/C,UAAUhE,EAAQ4E,SAC3B,MAAOgC,GACHG,EAAS9C,QACX8C,EAAS9C,QAAQ2C,GAEjBR,QAAQnG,MAAM,sCAAuCD,EAAS4G,MAMlE5I,KAAK2H,UAAUc,IAAIzG,EAAQF,OAC7B9B,KAAK2H,UAAUnC,IAAIxD,EAAQF,MAAMgH,QAAQ,SAAUC,GAC5CA,EAAS/C,WACZoC,QAAQI,KAAK,2BAA4BO,GAG3C,IACEA,EAAS/C,UAAUhE,EAAQ4E,SAC3B,MAAOgC,GACHG,EAAS9C,QACX8C,EAAS9C,QAAQ2C,GAEjBR,QAAQnG,MAAM,sCAAuCD,EAAS4G,QAMvE,CACD/F,IAAK,SACLpC,MAAO,SAAgBsI,GAChB/I,KAAK2H,UAAUc,IAAIM,EAASjH,OAC/B9B,KAAK2H,UAAUqB,IAAID,EAASjH,KAAM,IAGpC9B,KAAK2H,UAAUnC,IAAIuD,EAASjH,MAAMmH,KAAKF,KAExC,CACDlG,IAAK,KACLpC,MAAO,SAAYyI,EAAWC,EAASlH,GACrCjC,KAAKoJ,OAAO,IAAIrD,EAAS,CACvBjE,KAAMoH,EACNlD,UAAWmD,EACXlD,QAAShE,OAGZ,CACDY,IAAK,cACLpC,MAAO,SAAqBuB,GAC1BhC,KAAKgH,OAAOqC,YAAYrH,EAAQ8E,SAAU9G,KAAKoH,QAEhD,CACDvE,IAAK,OACLpC,MAAO,SAAcqB,EAAM8E,GAGzB,GAFA5G,KAAKsH,SAAS,qBAAuBxF,EAAO,mBAAqBwH,KAAKC,UAAU3C,IAEzD,OAAnB5G,KAAKuH,UACP,MAAM,IAAIpF,MAAM,mDAGlB,IAAIH,EAAU,IAAI2E,EAAQ,CACxB7E,KAAMA,EACN8E,QAASA,EACTL,KAAMvG,KAAKiD,GACXuD,GAAIxG,KAAKuH,YAEXvH,KAAKwJ,YAAYxH,KAElB,CACDa,IAAK,cACLpC,MAAO,SAAqBuB,EAAS2G,GACnC3I,KAAKwH,iBAAiBwB,IAAI,aAAc,CACtC5C,QAAS,IAAIC,KACbsC,QAASA,IAEX3I,KAAKwJ,YAAYxH,KAElB,CACDa,IAAK,UACLpC,MAAO,SAAiBqB,EAAM8E,GAC5B,IAAIpC,EAASxE,KAEb,OAAO,IAAIK,QAAQ,SAAUC,EAASC,GACpC,IACE,GAAyB,OAArBiE,EAAO+C,UACT,MAAM,IAAIpF,MAAM,oDAGlBqC,EAAOiF,YAAY,IAAI9C,EAAQ,CAC7B7E,KAAMA,EACN8E,QAASA,EACTL,KAAM/B,EAAOvB,GACbuD,GAAIhC,EAAO+C,YACT,SAAU5D,GACZrD,EAAQqD,KAEV,MAAOiF,GACPrI,EAAOqI,QAIZ,CACD/F,IAAK,eACLpC,MAAO,WACL,IAAIiJ,EAAS1J,KAEbgH,OAAO2C,WAAW,WAmChB,IAlCA,IAAIC,GAAM,IAAIvD,MAAOwD,UAEjBC,EAAQ,WACV,IAAIC,EAAQC,EAAYC,GAEpBhH,GADJiH,EAAQrE,EAAekE,EAAO,IACf,GAwBa,IAvBZG,EAAM,GACOC,OAAO,SAAUpB,GAC5C,GAAIA,aAAoB7C,EAAiB,CACvC,IAAIkE,EAAUR,EAAMb,EAAS3C,QAAQyD,UAErC,GAAIO,EAAUrB,EAASnG,QAAS,CAC9B,IACMmG,EAAS9C,SACX8C,EAAS9C,QAAQ,IAAI9D,MAAM,gBAAkBiI,IAE/C,MAAOxB,GACPR,QAAQnG,MAAM,8BAA+BgB,EAAI2F,GAGnD,OAAO,EAEP,OAAO,EAGT,OAAO,IAIMyB,QACfX,EAAOhC,iBAAiBgB,OAAOzF,IAI1BgH,EAAK,EAAGD,EAAcM,MAAM/D,KAAKmD,EAAOhC,iBAAiB6C,WAAYN,EAAKD,EAAYK,OAAQJ,IAAM,CAC3G,IAAIC,EAEJJ,IAGEJ,EAAOhC,iBAAiB8C,KAAO,GACjCd,EAAOe,gBAER,OAEJ,CACD5H,IAAK,aACLpC,MAAO,SAAoBsI,GACpB/I,KAAK0H,iBAAiBe,IAAIM,EAASjH,OACtC9B,KAAK0H,iBAAiBsB,IAAID,EAASjH,KAAM,IAG3C9B,KAAK0H,iBAAiBlC,IAAIuD,EAASjH,MAAMmH,KAAKF,GAE1CA,EAASnG,SACX5C,KAAKyK,iBAGR,CACD5H,IAAK,OACLpC,MAAO,SAAcqB,EAAMqH,EAASlH,GAClCjC,KAAK0K,WAAW,IAAIxE,EAAgB,CAClCpE,KAAMA,EACNkE,UAAWmD,EACXlD,QAAShE,OAGZ,CACDY,IAAK,OACLpC,MAAO,SAAcqB,EAAMc,GACzB,IAAI+H,EAAS3K,KAEb,OAAO,IAAIK,QAAQ,SAAUC,EAASC,GACpC,OAAOoK,EAAOD,WAAW,IAAIxE,EAAgB,CAC3CpE,KAAMA,EACNc,QAASA,EACToD,UAAW,SAAmBY,GAC5BtG,EAAQsG,IAEVX,QAAS,SAAiBhE,GACxB1B,EAAO0B,WAKd,CACDY,IAAK,QACLpC,MAAO,WACL,MAAO,CACLyD,KAAMlE,KAAK6H,UACX+C,SAAU5K,KAAK8H,iBAGlB,CACDjF,IAAK,aACLpC,MAAO,SAAoBwC,GACzBjD,KAAKuH,UAAYtE,IAElB,CACDJ,IAAK,SACLpC,MAAO,SAAgBuG,GACrBhH,KAAKgH,OAASA,IAEf,CACDnE,IAAK,QACLpC,MAAO,WACL,IAAIoK,EAAS7K,KAETA,KAAKiH,OACPmB,QAAQC,IAAI,mBAAqBrI,KAAKiD,GAAK,cAG7CjD,KAAKmI,gBAAkB,SAAUnG,GAC/B6I,EAAOC,eAAe9I,IAGxBhC,KAAKgH,OAAO+D,iBAAiB,UAAW/K,KAAKmI,iBAAiB,KAE/D,CACDtF,IAAK,OACLpC,MAAO,WACDT,KAAKmI,iBACPnI,KAAKgH,OAAOgE,oBAAoB,UAAWhL,KAAKmI,iBAAiB,OAKhEpB,EA3VT,GA8VAxF,EAAQwF,QAAUA,G,iCCxdlB,IAAIvH,EAAsB,EAAQ,IAE9BE,EAAkB,EAAQ,IAE1BD,EAAe,EAAQ,IAEvBM,EAAYC,MAAQA,KAAKD,WAAa,SAAUE,EAASC,EAAYC,EAAGC,GAO1E,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GACjD,SAASC,EAAUC,GACjB,IACEC,EAAKN,EAAUO,KAAKF,IACpB,MAAOG,GACPL,EAAOK,IAIX,SAASC,EAASJ,GAChB,IACEC,EAAKN,EAAiB,MAAEK,IACxB,MAAOG,GACPL,EAAOK,IAIX,SAASF,EAAKI,GAvBhB,IAAeL,EAwBXK,EAAOC,KAAOT,EAAQQ,EAAOL,QAxBlBA,EAwBiCK,EAAOL,MAvB9CA,aAAiBN,EAAIM,EAAQ,IAAIN,EAAE,SAAUG,GAClDA,EAAQG,MAsBkDO,KAAKR,EAAWK,GAG5EH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,WAIlEU,OAAOC,eAAeC,EAAS,aAAc,CAC3Cd,OAAO,IAGT,IAAIwK,EAAkB,EAAQ,KAE1BC,EAAkB,EAAQ,KAE1BC,EAEJ,WACE,SAASA,EAAMvJ,GACb,IAAIwJ,EAAexJ,EAAKwJ,aACpBC,EAAsBzJ,EAAKyJ,oBAC3BC,EAAgB1J,EAAK0J,cACrBC,EAAkB3J,EAAK2J,gBAE3B7L,EAAgBM,KAAMmL,GAEtBnL,KAAKwL,MAAQ,IAAI/D,IACjBzH,KAAKyL,cAAgBL,GAAgB,KACrCpL,KAAKqL,oBAAsBA,GAAuB,IAClDrL,KAAKsL,cAAgBA,GAAiB,IACtCtL,KAAKuL,gBAAkBA,GAAmB,IAC1CvL,KAAK0L,cAAe,EA+KtB,OA5KAjM,EAAa0L,EAAO,CAAC,CACnBtI,IAAK,aACLpC,MAAO,WACL,IAAIoB,EAAQ7B,KAERA,KAAK0L,eAIT1L,KAAK0L,cAAe,EACpB/B,WAAW,WACT,IAAIgC,EAAW,IAAIlE,IACfmE,GAAe,EACnBvK,OAAOwK,KAAKhK,EAAM2J,OAAO1C,QAAQ,SAAU7F,GACzC,IAAI6I,EAAOjK,EAAM2J,MAAMhG,IAAIvC,GAEtBpB,EAAMkK,UAAUD,KACnBH,EAAS3C,IAAI/F,EAAI6I,GACjBF,GAAe,KAGnB/J,EAAM2J,MAAQG,EACd9J,EAAM6J,cAAe,EAEjBE,GACF/J,EAAMmK,cAEPhM,KAAKqL,wBAET,CACDxI,IAAK,YACLpC,MAAO,SAAmBwL,GAGxB,OAFU,IAAI5F,MAAOwD,UACDoC,EAAUC,UACblM,KAAKyL,gBAEvB,CACD5I,IAAK,UACLpC,MAAO,SAAiBwC,GACtB,QAA2BkJ,IAAvBnM,KAAKwL,MAAMhG,IAAIvC,GACjB,OAAO,KAGT,IAAImJ,EAASpM,KAAKwL,MAAMhG,IAAIvC,GAE5B,IAAIjD,KAAK+L,UAAUK,GAKnB,OAAOA,EAJLpM,KAAKwL,MAAM9C,OAAOzF,KAMrB,CACDJ,IAAK,gBACLpC,MAAO,SAAuBwC,EAAIoJ,GAChC,IAAI7H,EAASxE,KAEb,OAAO,IAAIK,QAAQ,SAAUC,EAASC,GACpC,IAAI6F,GAAU,IAAIC,MAAOwD,WAGZ,SAASyC,IAKpB3C,WAAW,WACT,IAAImC,EAAOtH,EAAOgH,MAAMhG,IAAIvC,GAE5B,GAAK6I,EAME,IAAIA,EAAKS,SAAU,CACxB,IAAInC,GAAU,IAAI/D,MAAOwD,UAAYzD,EAErC,OAAIgE,EAAU5F,EAAO8G,mBACnBgB,SAGA/L,EAAO,IAAI4B,MAAM,iEAAmEqC,EAAO8G,cAAgB,YAAclB,IAI3H9J,EAAQwL,QAhBRtH,EAAOgI,gBAAgBvJ,EAAIoJ,GAASrL,KAAK,WACvCV,EAAQkE,EAAOgH,MAAMhG,IAAIvC,MACxBgC,MAAM,SAAUC,GACjB3E,EAAO2E,MAeVV,EAAO+G,iBAGZe,OAGH,CACDzJ,IAAK,kBACLpC,MAAO,SAAyBwC,EAAIoJ,GAClC,IAAI3C,EAAS1J,KAQb,OANAA,KAAKyM,YAAYxJ,EAAIoJ,GACFA,IAAUrL,KAAK,SAAUF,GAG1C,OAFA4I,EAAOgD,QAAQzJ,EAAInC,EAAQuL,GAEpBvL,IACN6L,QAAQ,gBAGZ,CACD9J,IAAK,kBACLpC,MAAO,SAAyB+B,GAC9B,IAAIS,EAAKT,EAAMS,GACXoJ,EAAU7J,EAAM6J,QAChBD,EAASpM,KAAKwL,MAAMhG,IAAIvC,GAE5B,GAAImJ,EAAQ,CACV,IAAIpM,KAAK+L,UAAUK,GAEZ,OAAIA,EAAOG,SACTvM,KAAK4M,cAAc3J,EAAIoJ,GAASrL,KAAK,SAAUoL,GACpD,OAAOA,EAAO3L,QAGTJ,QAAQC,QAAQ8L,EAAO3L,OAN9BT,KAAKwL,MAAM9C,OAAOzF,GAUtB,OAAOjD,KAAKwM,gBAAgBvJ,EAAIoJ,KAEjC,CACDxJ,IAAK,cACLpC,MAAO,SAAqBwC,EAAIoJ,GAC9BrM,KAAKwL,MAAMxC,IAAI/F,EAAI,CACjBA,GAAIA,EACJiJ,WAAW,IAAI7F,MAAOwD,UACtB0C,UAAU,EACV9L,MAAO,KACP4L,QAASA,MAGZ,CACDxJ,IAAK,UACLpC,MAAO,SAAiBwC,EAAIxC,EAAO4L,GACjC,GAAIrM,KAAKwL,MAAM/C,IAAIxF,GAAK,CACtB,IAAI6I,EAAO9L,KAAKwL,MAAMhG,IAAIvC,GAEtB6I,GAAQA,EAAKS,UACfT,EAAKS,UAAW,EAChBT,EAAKrL,MAAQA,EACbqL,EAAKO,QAAUA,GAEfrM,KAAKwL,MAAMxC,IAAI/F,EAAI,CACjBA,GAAIA,EACJiJ,WAAW,IAAI7F,MAAOwD,UACtBwC,QAASA,EACTE,UAAU,EACV9L,MAAOA,SAIXT,KAAKwL,MAAMxC,IAAI/F,EAAI,CACjBA,GAAIA,EACJiJ,WAAW,IAAI7F,MAAOwD,UACtBwC,QAASA,EACTE,UAAU,EACV9L,MAAOA,IAIXT,KAAKgM,iBAIFb,EA7LT,GAgMA5J,EAAQ4J,MAAQA,EAChB,IAAI0B,EAAc,IAAI1B,EAAM,CAC1BC,aAAc,KACdC,oBAAqB,IACrBC,cAAe,IACfC,gBAAiB,MAEf9J,EAAkB,IAElBqL,EAEJ,WACE,SAASA,EAAqBnH,GAC5B,IAAIjD,EAAQiD,EAAMjD,MACdD,EAAMkD,EAAMlD,IACZO,EAAU2C,EAAM3C,QAChBJ,EAAU+C,EAAM/C,QAChBmK,EAAapH,EAAMoH,WAQvB,GANArN,EAAgBM,KAAM8M,GAEtB9M,KAAK0C,MAAQA,EACb1C,KAAK4C,QAAUA,GAAWnB,EAC1BzB,KAAK+M,WAAaA,GAAc,MAE3BtK,EACH,MAAM,IAAIN,MAAM,8CAGlBnC,KAAKyC,IAAMA,EACXzC,KAAKgD,QAAUA,GAAW,KAEV,SAAZA,IACFhD,KAAKgD,QAAU,MA4GnB,OAxGAvD,EAAaqN,EAAsB,CAAC,CAClCjK,IAAK,UACLpC,MAAO,WACL,MAAO,CACLmC,QAAS5C,KAAK4C,QACdoK,cAAehN,KAAK0C,MACpBqK,WAAY/M,KAAK+M,cAGpB,CACDlK,IAAK,YACLpC,MAAO,WACL,OAAOT,KAAK4E,YAAYjC,SAEzB,CACDE,IAAK,WACLpC,MAAO,WACL,IAAIwM,EAQJ,OAHEA,EAHGjN,KAAKgD,QAGGhD,KAAKkN,YAAc,IAAMlN,KAAKgD,QAF9BhD,KAAKkN,YAAc,QAKzBD,IAER,CACDpK,IAAK,YACLpC,MAAO,SAAmB4L,GACxB,OAAOQ,EAAYM,gBAAgB,CACjClK,GAAIjD,KAAKiN,WACTZ,QAASA,MAGZ,CACDxJ,IAAK,eACLpC,MAAO,WACL,OAAOV,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASC,IAChC,IAAIkH,EAAS3K,KAEb,OAAOR,EAAoBoE,KAAK,SAAkBC,GAChD,OACE,OAAQA,EAASC,KAAOD,EAASlD,MAC/B,KAAK,EACH,OAAOkD,EAASM,OAAO,SAAUnE,KAAKoN,UAAU,WAC9C,IAAIC,EAAS,IAAIpC,EAAgBqC,oBAAoB,CACnD7K,IAAKkI,EAAOlI,IACZC,MAAOiI,EAAOjI,MACdE,QAAS+H,EAAO/H,UAElB,OAAOvC,QAAQC,QAAQ+M,EAAOE,iBAAiB,CAC7CC,YAAa7C,EAAOuC,YACpBlK,QAAS2H,EAAO3H,cAItB,KAAK,EACL,IAAK,MACH,OAAOa,EAASQ,SAGrBZ,EAASzD,WAGf,CACD6C,IAAK,WACLpC,MAAO,SAAkBgN,EAAUnK,GACjC,OAAOvD,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASiB,IAChC,IAAIiJ,EAAYL,EAChB,OAAO7N,EAAoBoE,KAAK,SAAmBc,GACjD,OACE,OAAQA,EAAUZ,KAAOY,EAAU/D,MACjC,KAAK,EAEH,OADA+D,EAAU/D,KAAO,EACVX,KAAK2N,eAEd,KAAK,EAQH,OAPAD,EAAahJ,EAAUR,KACvBmJ,EAAS,IAAInC,EAAgB5G,wBAAwB,CACnD3B,OAAQ+K,EAAWF,YACnB/K,IAAKiL,EAAWjL,IAChBC,MAAO1C,KAAK0C,QAEdgC,EAAU/D,KAAO,EACV0M,EAAOO,SAASH,EAAUnK,GAEnC,KAAK,EACH,OAAOoB,EAAUP,OAAO,SAAUO,EAAUR,MAE9C,KAAK,EACL,IAAK,MACH,OAAOQ,EAAUL,SAGtBI,EAAUzE,aAKZ8M,EAlIT,GAqIAvL,EAAQuL,qBAAuBA,G,iCChY/B,IAAItN,EAAsB,EAAQ,IAE9BE,EAAkB,EAAQ,IAE1BD,EAAe,EAAQ,IAEvBE,EAA6B,EAAQ,IAErCC,EAAkB,EAAQ,IAE1BC,EAAY,EAAQ,IAEpBE,EAAYC,MAAQA,KAAKD,WAAa,SAAUE,EAASC,EAAYC,EAAGC,GAO1E,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GACjD,SAASC,EAAUC,GACjB,IACEC,EAAKN,EAAUO,KAAKF,IACpB,MAAOG,GACPL,EAAOK,IAIX,SAASC,EAASJ,GAChB,IACEC,EAAKN,EAAiB,MAAEK,IACxB,MAAOG,GACPL,EAAOK,IAIX,SAASF,EAAKI,GAvBhB,IAAeL,EAwBXK,EAAOC,KAAOT,EAAQQ,EAAOL,QAxBlBA,EAwBiCK,EAAOL,MAvB9CA,aAAiBN,EAAIM,EAAQ,IAAIN,EAAE,SAAUG,GAClDA,EAAQG,MAsBkDO,KAAKR,EAAWK,GAG5EH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,WAUlE,SAASkN,EAASC,EAAGC,GACnB,QAAiB,kBAAND,IAAkBE,QAAQvF,IAAIqF,EAAGC,IACT,kBAAtBC,QAAQxI,IAAIsI,EAAGC,IAoC9B,SAASE,EAAyBH,GAChC,SAAID,EAASC,EAAG,gBAAkBD,EAASC,EAAG,YAAcD,EAASC,EAAG,oBAnB1E,SAAiBA,EAAGC,EAAGG,GACrB,GAAiB,kBAANJ,GAAkBE,QAAQvF,IAAIqF,EAAGC,GAAI,CAC9C,IAAItN,EAAQuN,QAAQxI,IAAIsI,EAAGC,GAE3B,GAAqB,kBAAVtN,GAAsBA,aAAiB6J,MAChD,OAAqB,IAAjB7J,EAAM4J,QAIH5J,EAAM0N,MAAM,SAAUC,GAC3B,MAA+B,kBAAjBA,IAKpB,OAAO,EAIuFC,CAAQP,EAAG,iBAA6BD,EAASC,EAAG,QA7BpJ,SAAkBA,EAAGC,GACnB,QAAiB,kBAAND,IAAkBE,QAAQvF,IAAIqF,EAAGC,IACT,kBAAtBC,QAAQxI,IAAIsI,EAAGC,IA2BgIO,CAASR,EAAG,OAASD,EAASC,EAAG,WAAaD,EAASC,EAAG,WA7CxNzM,OAAOC,eAAeC,EAAS,aAAc,CAC3Cd,OAAO,IAmDT,IAAI6M,EAEJ,SAAUiB,GAGR,SAASjB,IAGP,OAFA5N,EAAgBM,KAAMsN,GAEf3N,EAA2BK,KAAMJ,EAAgB0N,GAAqBrM,MAAMjB,KAAMsC,YA8D3F,OAnEAzC,EAAUyN,EAAqBiB,GAQ/B9O,EAAa6N,EAAqB,CAAC,CACjCzK,IAAK,mBACLpC,MAAO,SAA0B6C,GAC/B,OAAOvD,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASC,IAChC,IAAI3C,EAAQ0N,EACZ,OAAOhP,EAAoBoE,KAAK,SAAkBC,GAChD,OACE,OAAQA,EAASC,KAAOD,EAASlD,MAC/B,KAAK,EAEH,OADAkD,EAASlD,KAAO,EACTX,KAAK4N,SAAS,qBAAsBtK,GAE7C,KAAK,EAGH,MAFAxC,EAAS+C,EAASK,MAELpD,QAAUA,EAAOA,OAAOuJ,OAAS,GAAI,CAChDxG,EAASlD,KAAO,GAChB,MAKF,GAFA6N,EAAY1N,EAAOA,OAAO,GAEX,CACb+C,EAASlD,KAAO,EAChB,MAGF,MAAM,IAAIwB,MAAM,sCAElB,KAAK,EACH,IAAK8L,EAAyBO,GAAY,CACxC3K,EAASlD,KAAO,GAChB,MAGF,OAAOkD,EAASM,OAAO,SAAUqK,GAEnC,KAAK,GACH,MAAM,IAAIrM,MAAM,8DAElB,KAAK,GACH0B,EAASlD,KAAO,GAChB,MAEF,KAAK,GACH,MAAM,IAAIwB,MAAM,gCAElB,KAAK,GACL,IAAK,MACH,OAAO0B,EAASQ,SAGrBZ,EAASzD,aAKXsN,EApET,CAlDsB,EAAQ,KAuHZzI,yBAElBtD,EAAQ+L,oBAAsBA,EAC9BA,EAAoB3K,OAAS,iB,iCC1K7B,IAAInD,EAAsB,EAAQ,IAE9BE,EAAkB,EAAQ,IAE1BD,EAAe,EAAQ,IAEvBE,EAA6B,EAAQ,IAErCC,EAAkB,EAAQ,IAE1BC,EAAY,EAAQ,IAEpBE,EAAYC,MAAQA,KAAKD,WAAa,SAAUE,EAASC,EAAYC,EAAGC,GAO1E,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GACjD,SAASC,EAAUC,GACjB,IACEC,EAAKN,EAAUO,KAAKF,IACpB,MAAOG,GACPL,EAAOK,IAIX,SAASC,EAASJ,GAChB,IACEC,EAAKN,EAAiB,MAAEK,IACxB,MAAOG,GACPL,EAAOK,IAIX,SAASF,EAAKI,GAvBhB,IAAeL,EAwBXK,EAAOC,KAAOT,EAAQQ,EAAOL,QAxBlBA,EAwBiCK,EAAOL,MAvB9CA,aAAiBN,EAAIM,EAAQ,IAAIN,EAAE,SAAUG,GAClDA,EAAQG,MAsBkDO,KAAKR,EAAWK,GAG5EH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,WAIlEU,OAAOC,eAAeC,EAAS,aAAc,CAC3Cd,OAAO,IAGT,IAEIgO,EAEJ,SAAUC,GAGR,SAASD,IAGP,OAFA/O,EAAgBM,KAAMyO,GAEf9O,EAA2BK,KAAMJ,EAAgB6O,GAA2BxN,MAAMjB,KAAMsC,YA0EjG,OA/EAzC,EAAU4O,EAA2BC,GAQrCjP,EAAagP,EAA2B,CAAC,CACvC5L,IAAK,YACLpC,MAAO,SAAmBsC,GACxB,OAAOhD,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASC,IAChC,OAAOjE,EAAoBoE,KAAK,SAAkBC,GAChD,OACE,OAAQA,EAASC,KAAOD,EAASlD,MAC/B,KAAK,EAEH,OADAkD,EAASlD,KAAO,EACTX,KAAK4N,SAAS,aAAc,CAAC7K,IAEtC,KAAK,EACL,IAAK,MACH,OAAOc,EAASQ,SAGrBZ,EAASzD,WAGf,CACD6C,IAAK,aACLpC,MAAO,SAAoBsC,GACzB,OAAOhD,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASiB,IAChC,OAAOjF,EAAoBoE,KAAK,SAAmBc,GACjD,OACE,OAAQA,EAAUZ,KAAOY,EAAU/D,MACjC,KAAK,EAEH,OADA+D,EAAU/D,KAAO,EACVX,KAAK4N,SAAS,eAAgB,CAAC7K,IAExC,KAAK,EACH,OAAO2B,EAAUP,OAAO,SAAUO,EAAUR,MAE9C,KAAK,EACL,IAAK,MACH,OAAOQ,EAAUL,SAGtBI,EAAUzE,WAGhB,CACD6C,IAAK,WACLpC,MAAO,SAAkBsC,GACvB,OAAOhD,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASkC,IAChC,OAAOlG,EAAoBoE,KAAK,SAAmBgC,GACjD,OACE,OAAQA,EAAU9B,KAAO8B,EAAUjF,MACjC,KAAK,EAEH,OADAiF,EAAUjF,KAAO,EACVX,KAAK4N,SAAS,YAAa,CAAC7K,IAErC,KAAK,EACH,OAAO6C,EAAUzB,OAAO,SAAUyB,EAAU1B,MAE9C,KAAK,EACL,IAAK,MACH,OAAO0B,EAAUvB,SAGtBqB,EAAU1F,aAKZyO,EAhFT,CAJsB,EAAQ,KAqFZlM,eAElBhB,EAAQyC,QAAUyK,EAClBA,EAA0B9L,OAAS,uB,iCCxInC,IAAInD,EAAsB,EAAQ,IAE9BqG,EAAiB,EAAQ,KAEzBnG,EAAkB,EAAQ,IAE1BD,EAAe,EAAQ,IAEvBE,EAA6B,EAAQ,IAErCC,EAAkB,EAAQ,IAE1BC,EAAY,EAAQ,IAEpBE,EAAYC,MAAQA,KAAKD,WAAa,SAAUE,EAASC,EAAYC,EAAGC,GAO1E,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GACjD,SAASC,EAAUC,GACjB,IACEC,EAAKN,EAAUO,KAAKF,IACpB,MAAOG,GACPL,EAAOK,IAIX,SAASC,EAASJ,GAChB,IACEC,EAAKN,EAAiB,MAAEK,IACxB,MAAOG,GACPL,EAAOK,IAIX,SAASF,EAAKI,GAvBhB,IAAeL,EAwBXK,EAAOC,KAAOT,EAAQQ,EAAOL,QAxBlBA,EAwBiCK,EAAOL,MAvB9CA,aAAiBN,EAAIM,EAAQ,IAAIN,EAAE,SAAUG,GAClDA,EAAQG,MAsBkDO,KAAKR,EAAWK,GAG5EH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,WAIlEU,OAAOC,eAAeC,EAAS,aAAc,CAC3Cd,OAAO,IAGT,IAEIkO,EAEJ,SAAUD,GAGR,SAASC,IAGP,OAFAjP,EAAgBM,KAAM2O,GAEfhP,EAA2BK,KAAMJ,EAAgB+O,GAAe1N,MAAMjB,KAAMsC,YAmGrF,OAxGAzC,EAAU8O,EAAeD,GAQzBjP,EAAakP,EAAe,CAAC,CAC3B9L,IAAK,UACLpC,MAAO,WACL,OAAOV,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASC,IAChC,IAAI7B,EAAMY,EAAO1B,EAEjB,OAAOtB,EAAoBoE,KAAK,SAAkBC,GAChD,OACE,OAAQA,EAASC,KAAOD,EAASlD,MAC/B,KAAK,EAGH,OAFAkD,EAASC,KAAO,EAChBD,EAASlD,KAAO,EACTX,KAAK4N,SAAS,WAAY,CAAC,OAEpC,KAAK,EAIH,OAHAhM,EAAOiC,EAASK,KAChB1B,EAAQqD,EAAejE,EAAM,GAC7Bd,EAAS0B,EAAM,GACRqB,EAASM,OAAO,SAAUrD,GAEnC,KAAK,EAIH,MAHA+C,EAASC,KAAO,EAChBD,EAAS+K,GAAK/K,EAAgB,MAAE,GAChCuE,QAAQnG,MAAM,QAAS4B,EAAS+K,IAC1B/K,EAAS+K,GAEjB,KAAK,GACL,IAAK,MACH,OAAO/K,EAASQ,SAGrBZ,EAASzD,KAAM,CAAC,CAAC,EAAG,UAG1B,CACD6C,IAAK,mBACLpC,MAAO,SAA0BsC,GAC/B,OAAOhD,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASiB,IAChC,IAAIkB,EAAOoE,EAAOjJ,EAElB,OAAOtB,EAAoBoE,KAAK,SAAmBc,GACjD,OACE,OAAQA,EAAUZ,KAAOY,EAAU/D,MACjC,KAAK,EAEH,OADA+D,EAAU/D,KAAO,EACVX,KAAK4N,SAAS,sBAAuB,CAAC7K,IAE/C,KAAK,EAIH,OAHA4C,EAAQjB,EAAUR,KAClB6F,EAAQlE,EAAeF,EAAO,GAC9B7E,EAASiJ,EAAM,GACRrF,EAAUP,OAAO,SAAUrD,GAEpC,KAAK,EACL,IAAK,MACH,OAAO4D,EAAUL,SAGtBI,EAAUzE,WAGhB,CACD6C,IAAK,mBACLpC,MAAO,SAA0BsC,GAC/B,OAAOhD,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASkC,IAChC,IAAIwE,EAAO2E,EAAO/N,EAElB,OAAOtB,EAAoBoE,KAAK,SAAmBgC,GACjD,OACE,OAAQA,EAAU9B,KAAO8B,EAAUjF,MACjC,KAAK,EAEH,OADAiF,EAAUjF,KAAO,EACVX,KAAK4N,SAAS,sBAAuB,CAAC7K,IAE/C,KAAK,EAIH,OAHAmH,EAAQtE,EAAU1B,KAClB2K,EAAQhJ,EAAeqE,EAAO,GAC9BpJ,EAAS+N,EAAM,GACRjJ,EAAUzB,OAAO,SAAUrD,GAEpC,KAAK,EACL,IAAK,MACH,OAAO8E,EAAUvB,SAGtBqB,EAAU1F,aAKZ2O,EAzGT,CAJsB,EAAQ,KA8GZpM,eAElBhB,EAAQyC,QAAU2K,EAClBA,EAAchM,OAAS,W,iCCnKvB,IAKImM,EALAjJ,EAAiB,EAAQ,KAE7BxE,OAAOC,eAAeC,EAAS,aAAc,CAC3Cd,OAAO,IAIT,SAAWqO,GACTA,EAASA,EAAsB,YAAI,GAAK,cACxCA,EAASA,EAAiB,OAAI,GAAK,SACnCA,EAASA,EAAiB,OAAI,GAAK,SACnCA,EAASA,EAAe,KAAI,GAAK,OACjCA,EAASA,EAAc,IAAI,GAAK,MALlC,CAMGA,EAAWvN,EAAQuN,WAAavN,EAAQuN,SAAW,KAEtD,IAAIC,EAAY,CAAC,CACfC,KAAMF,EAASG,YACfC,KAAM,cACNC,MAAO,KACPC,OAAQ,IACR5E,KAAM,KACL,CACDwE,KAAMF,EAASO,OACfH,KAAM,SACNC,MAAO,MACPC,OAAQ,IACR5E,KAAM,IACL,CACDwE,KAAMF,EAASQ,OACfJ,KAAM,SACNC,MAAO,MACPC,OAAQ,IACR5E,KAAM,IACL,CACDwE,KAAMF,EAASS,KACfL,KAAM,OACNC,MAAO,KACPC,OAAQ,IACR5E,KAAM,IACL,CACDwE,KAAMF,EAASU,IACfN,KAAM,MACNC,MAAO,MACPC,OAAQ,IACR5E,KAAM,KAyDR,SAASiF,EAAST,EAAMU,EAAQjP,GAC9B,OAAQiP,GACN,IAAK,OACH,IAAIC,EAAQ,IAAMX,EAAKE,KAEvB,OAAc,IAAVzO,EACKkP,EAAQ,IAGVA,EAET,IAAK,QACH,MAAO,IAAMX,EAAKG,MAEpB,IAAK,UACH,OAAOH,EAAKI,QAjBlB7N,EAAQqO,iBApDR,SAA0BC,GACxB,IAKIC,EAASC,EAAYf,EALrBgB,EAAU1N,UAAU+H,OAAS,QAAsB8B,IAAjB7J,UAAU,GAAmBA,UAAU,GAAK,GAC9E2N,EAAUD,EAAQpG,KAAO,IAAIvD,KAC7B+D,EAAUjH,KAAK+M,OAAOD,EAAQpG,UAAYgG,EAAShG,WAAa,KAChEsG,EAAahN,KAAKiN,IAAIhG,GACtBsF,EAASM,EAAQN,QAAU,UAI/B,GAAIS,EAAa,OAFHH,EAAQK,eAAiB,IAEE,CACvC,GAAmB,IAAfF,EACF,MAAO,MACEA,EAAa,IACtBL,EAAU1F,EACV2F,EAAaI,EACbnB,EAAOS,EAASV,EAAU,GAAIW,EAAQK,IAC7BI,EAAa,MACtBL,EAAU3M,KAAK+M,MAAM9F,EAAU,IAC/B2F,EAAa5M,KAAK+M,MAAMC,EAAa,IACrCnB,EAAOS,EAASV,EAAU,GAAIW,EAAQK,IAC7BI,EAAa,OACtBL,EAAU3M,KAAK+M,MAAM9F,EAAU,MAC/B2F,EAAa5M,KAAK+M,MAAMC,EAAa,MACrCnB,EAAOS,EAASV,EAAU,GAAIW,EAAQK,KAEtCD,EAAU3M,KAAK+M,MAAM9F,EAAU,OAC/B2F,EAAa5M,KAAK+M,MAAMC,EAAa,OACrCnB,EAAOS,EAASV,EAAU,GAAIW,EAAQK,IAGxC,IACIvN,EAAQqD,EADDiK,EAAU,EAAI,CAAC,KAAM,MAAQ,CAAC,KAAM,OACd,GAC7BQ,EAAS9N,EAAM,GACf+N,EAAS/N,EAAM,GAEnB,OAAQ8N,EAASA,EAAS,IAAM,IAAMP,EAAaf,GAAQuB,EAAS,IAAMA,EAAS,IAEnF,MAAuB,YAAnBP,EAAQN,QAAwBO,EAAQO,gBAAkBX,EAASW,cAC9DC,KAAKC,eAAe,QAAS,CAClCC,MAAO,QACPC,IAAK,YACJlB,OAAOG,GAEHY,KAAKC,eAAe,QAAS,CAClCC,MAAO,QACPC,IAAK,UACLC,KAAM,YACLnB,OAAOG,IAoEhBtO,EAAQuP,aA1CR,SAAsBrQ,GACpB,IAAIuP,EAAU1N,UAAU+H,OAAS,QAAsB8B,IAAjB7J,UAAU,GAAmBA,UAAU,GAAK,GAC9EyO,EAAY,GACZrB,EAASM,EAAQN,QAAU,UAC3BsB,EAAO7N,KAAKiN,IAAI3P,GAChBwQ,EAAQlC,EAAUmC,IAAI,SAAUlC,GAClC,IAAImC,EAAYH,EAAOhC,EAAKxE,KAG5B,OAFAwG,GAAQA,EAAOG,GAAanC,EAAKxE,KAE1B,CACLmF,MAFcF,EAAST,EAAMU,EAAQyB,GAGrC1Q,MAAO0Q,KAERC,UACHH,EAAMI,MAGN,IAFA,IAAIC,GAAO,EAEFC,EAAI,EAAGA,EAAIN,EAAM5G,OAAQkH,GAAK,EAAG,CACxC,IAAKD,EAAM,CACT,KAAIL,EAAMM,GAAG9Q,MAAQ,GAGnB,SAFA6Q,GAAO,EAMX,GAAItB,EAAQwB,WAAaxB,EAAQwB,YAAcT,EAAU1G,OACvD,MAGF0G,EAAU9H,KAAKgI,EAAMM,IAGvB,OAAyB,IAArBR,EAAU1G,OACL,KAAkB,YAAXqF,EAAuB,IAAM,IAAM,IAAMD,EAASV,EAAU,GAAIW,EAAQ,GAE/EqB,EAAUG,IAAI,SAAUpF,GAC7B,OAAO5I,OAAO4I,EAAKrL,OAASqL,EAAK6D,QAChCpK,KAAK,MAgDZhE,EAAQkQ,YA1CR,SAAqBhR,GACnB,IAAIuP,EAAU1N,UAAU+H,OAAS,QAAsB8B,IAAjB7J,UAAU,GAAmBA,UAAU,GAAK,GAC9EyO,EAAY,GACZrB,EAASM,EAAQN,QAAU,UAC3BsB,EAAO7N,KAAKiN,IAAI3P,GAChBwQ,EAAQlC,EAAUmC,IAAI,SAAUlC,GAClC,IAAImC,EAAYH,EAAOhC,EAAKxE,KAG5B,OAFAwG,GAAQA,EAAOG,GAAanC,EAAKxE,KAE1B,CACLmF,MAFcF,EAAST,EAAMU,EAAQyB,GAGrC1Q,MAAO0Q,KAERC,UACHH,EAAMI,MAGN,IAFA,IAAIC,GAAO,EAEFC,EAAI,EAAGA,EAAIN,EAAM5G,OAAQkH,GAAK,EAAG,CACxC,IAAKD,EAAM,CACT,KAAIL,EAAMM,GAAG9Q,MAAQ,GAGnB,SAFA6Q,GAAO,EAMX,GAAItB,EAAQwB,WAAaxB,EAAQwB,YAAcT,EAAU1G,OACvD,MAGF0G,EAAU9H,KAAKgI,EAAMM,IAGvB,OAAyB,IAArBR,EAAU1G,OACL,CAAC,KAAkB,YAAXqF,EAAuB,IAAM,IAAM,IAAMD,EAASV,EAAU,GAAIW,EAAQ,GAAIqB,GAEpF,CAACA,EAAUG,IAAI,SAAUpF,GAC9B,OAAO5I,OAAO4I,EAAKrL,OAASqL,EAAK6D,QAChCpK,KAAK,KAAMwL,K,iCC1MlB,IAAIvR,EAAsB,EAAQ,IAE9BqG,EAAiB,EAAQ,KAEzBnG,EAAkB,EAAQ,IAE1BD,EAAe,EAAQ,IAEvBM,EAAYC,MAAQA,KAAKD,WAAa,SAAUE,EAASC,EAAYC,EAAGC,GAO1E,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GACjD,SAASC,EAAUC,GACjB,IACEC,EAAKN,EAAUO,KAAKF,IACpB,MAAOG,GACPL,EAAOK,IAIX,SAASC,EAASJ,GAChB,IACEC,EAAKN,EAAiB,MAAEK,IACxB,MAAOG,GACPL,EAAOK,IAIX,SAASF,EAAKI,GAvBhB,IAAeL,EAwBXK,EAAOC,KAAOT,EAAQQ,EAAOL,QAxBlBA,EAwBiCK,EAAOL,MAvB9CA,aAAiBN,EAAIM,EAAQ,IAAIN,EAAE,SAAUG,GAClDA,EAAQG,MAsBkDO,KAAKR,EAAWK,GAG5EH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,WAI9D+Q,EAAe1R,MAAQA,KAAK0R,cAAgB,SAAUvQ,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIL,EAAS,GACb,GAAW,MAAPK,EAAa,IAAK,IAAIwQ,KAAKxQ,EACzBE,OAAOuQ,eAAe1P,KAAKf,EAAKwQ,KAAI7Q,EAAO6Q,GAAKxQ,EAAIwQ,IAG1D,OADA7Q,EAAgB,QAAIK,EACbL,GAGLI,EAAkBlB,MAAQA,KAAKkB,iBAAmB,SAAUC,GAC9D,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CACnC,QAAWA,IAIfE,OAAOC,eAAeC,EAAS,aAAc,CAC3Cd,OAAO,IAGT,IAIIoR,EAJAC,EAAUJ,EAAa,EAAQ,MAE/BK,EAAS7Q,EAAgB,EAAQ,OAIrC,SAAW2Q,GACTA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAyB,cAAI,GAAK,gBAC5CA,EAAUA,EAA2B,gBAAI,GAAK,kBAC9CA,EAAUA,EAAiB,MAAI,GAAK,QAJtC,CAKGA,EAAYtQ,EAAQsQ,YAActQ,EAAQsQ,UAAY,KAEzD,IAAIG,EAEJ,WACE,SAASA,EAAKvP,GACZ/C,EAAgBM,KAAMgS,GAEtBhS,KAAKyC,IAAMA,EAkEb,OA/DAhD,EAAauS,EAAM,CAAC,CAClBnP,IAAK,YACLpC,MAAO,WACL,OAAOV,EAAUC,UAAM,OAAQ,EAE/BR,EAAoBgE,KAAK,SAASC,IAChC,IAAIf,EAAOuP,EACX,OAAOzS,EAAoBoE,KAAK,SAAkBC,GAChD,OACE,OAAQA,EAASC,KAAOD,EAASlD,MAC/B,KAAK,EAGH,GAFA+B,EAAQoP,EAAQtM,IAAI,iBAET,CACT3B,EAASlD,KAAO,EAChB,MAGF,OAAOkD,EAASM,OAAO,SAAU9D,QAAQC,QAAQ,CAC/C4R,OAAQL,EAAUM,gBAClBC,kBAAmB,QAGvB,KAAK,EAIH,OAHAH,EAAO,IAAIF,EAAO/N,QAAQ,CACxBvB,IAAKzC,KAAKyC,MAELoB,EAASM,OAAO,SAAU9D,QAAQgS,IAAI,CAACJ,EAAKK,aAAa5P,GAAQuP,EAAKM,MAAM7P,KAAS1B,KAAK,SAAUY,GACzG,IAAIY,EAAQqD,EAAejE,EAAM,GAE7B4Q,GADYhQ,EAAM,GACRA,EAAM,IAEhBiQ,EAAQD,EAAQC,MAAMvB,IAAI,SAAUvL,GACtC,IAAI1C,EAAK0C,EAAM1C,GACJ0C,EAAM+M,KACjB,OAAOzP,IAET,MAAO,CACLiP,OAAQL,EAAUc,cAClBP,kBAAmB,CACjB1P,MAAOA,EACPkQ,SAAUJ,EAAQK,KAClBC,SAAUN,EAAQO,QAClBN,MAAOA,MAGVxN,MAAM,SAAUC,GACjB,MAAO,CACLgN,OAAQL,EAAUM,gBAClBC,kBAAmB,SAIzB,KAAK,EACL,IAAK,MACH,OAAOvO,EAASQ,SAGrBZ,EAASzD,aAKXgS,EAtET,GAyEAzQ,EAAQyC,QAAUgO,G,gCCpJlB3Q,OAAOC,eAAeC,EAAS,aAAc,CAC3Cd,OAAO,IAGT,IAAIuS,EAAkB,EAAQ,KAE9BzR,EAAQwF,QAAUiM,EAAgBjM,QAElC,IAAImE,EAAkB,EAAQ,KAE9B3J,EAAQgB,cAAgB2I,EAAgB3I,cACxChB,EAAQ+C,wBAA0B4G,EAAgB5G,wBAElD,IAAI2O,EAAkB,EAAQ,KAE9B1R,EAAQoD,cAAgBsO,EAAgBtO,cACxCpD,EAAQsD,wBAA0BoO,EAAgBpO,wBAElD,IAAIqO,EAAyB,EAAQ,KAErC3R,EAAQuL,qBAAuBoG,EAAuBpG,qBAEtD,IAAIqG,EAAwB,EAAQ,KAEpC5R,EAAQkN,0BAA4B0E,EAAsBnP,QAE1D,IAAIoP,EAAY,EAAQ,KAExB7R,EAAQoN,cAAgByE,EAAUpP,QAElC,IAAI+N,EAAS,EAAQ,KAErBxQ,EAAQ6D,WAAa2M,EAAO/N,QAE5B,IAAIqP,EAAS,EAAQ,KAErB9R,EAAQuP,aAAeuC,EAAOvC,aAC9BvP,EAAQkQ,YAAc4B,EAAO5B,YAC7BlQ,EAAQqO,iBAAmByD,EAAOzD,iBAElC,IAAI0D,EAAS,EAAQ,KAErB/R,EAAQyQ,KAAOsB,EAAOtP,QACtBzC,EAAQsQ,UAAYyB,EAAOzB,W,sMC7Cf0B,E,+pBAAAA,K,sBAAAA,E,kCAAAA,E,sCAAAA,E,kCAAAA,E,0BAAAA,E,gCAAAA,E,4CAAAA,E,gDAAAA,E,4CAAAA,E,gDAAAA,E,gCAAAA,E,4CAAAA,E,gDAAAA,E,4CAAAA,E,oCAAAA,E,gDAAAA,E,oDAAAA,E,gDAAAA,E,oCAAAA,E,gDAAAA,E,oDAAAA,E,gDAAAA,E,gDAAAA,E,4DAAAA,E,4DAAAA,E,gEAAAA,E,gDAAAA,E,4DAAAA,E,4DAAAA,E,iEAAAA,M,KCkDZ,IAceC,EAd0C,SAACC,EAA+BC,GACrF,IAAKD,EACD,OAAOA,EAEX,OAAQC,EAAOC,MACX,KAAKJ,EAAWK,uBACZ,OArCZ,SAA6BH,EAAmBC,GAe5C,OAdc,KACPD,EADO,CAEVI,MAAM,EAAD,GACEJ,EAAMI,MADR,CAEDC,WAAW,EAAD,GACHL,EAAMI,MAAMC,WADT,CAENC,YAAaC,EAAYC,SACzBC,QAASR,EAAOQ,QAChBC,KAAMT,EAAOS,KACbC,cAAeV,EAAOU,cACtBC,iBAAkBX,EAAOW,uBA0BtBC,CAAoBb,EAAOC,GACtC,KAAKH,EAAWgB,qBACZ,OApDZ,SAA2Bd,EAAmBC,GAC1C,OAAO,EAAP,GACOD,EADP,CAEII,MAAM,EAAD,GACEJ,EAAMI,MADR,CAEDC,WAAW,EAAD,GACHL,EAAMI,MAAMC,WADT,CAENC,YAAaC,EAAYQ,gBA6CtBC,CAAkBhB,GAC7B,KAAKF,EAAWmB,uBACZ,OAvBZ,SAAgCjB,EAAmBC,GAC/C,OAAO,EAAP,GACOD,EADP,CAEII,MAAM,EAAD,GACEJ,EAAMI,MADR,CAEDC,WAAW,EAAD,GACHL,EAAMI,MAAMC,gBAiBZa,CAAuBlB,K,mjBCQ1C,IAgBeD,EAhB0C,SAACC,EAA+BC,GACrF,IAAKD,EACD,OAAOA,EAEX,OAAQC,EAAOC,MACX,KAAKJ,EAAWqB,uBACZ,OA/DZ,SAA6BnB,EAAmBC,GAC5C,OAAO,KACAD,EADP,CAEII,MAAM,KACCJ,EAAMI,MADR,CAEDgB,aAAa,KACNpB,EAAMI,MAAMgB,aADP,CAERd,YAAaC,EAAYQ,gBAwDtBM,CAAoBrB,GAC/B,KAAKF,EAAWwB,yBACZ,OApDZ,SAA+BtB,EAAmBC,GAe9C,OAdc,KACPD,EADO,CAEVI,MAAM,KACCJ,EAAMI,MADR,CAEDgB,aAAa,KACNpB,EAAMI,MAAMgB,aADP,CAERd,YAAaC,EAAYC,SACzBC,QAASR,EAAOQ,QAChBC,KAAMT,EAAOS,KACbC,cAAeV,EAAOU,cACtBC,iBAAkBX,EAAOW,uBAyCtBW,CAAsBvB,EAAOC,GACxC,KAAKH,EAAW0B,uBAEhB,KAAK1B,EAAW2B,yBACZ,OAzBZ,SAA0BzB,EAAmBC,GACzC,OAAO,KACAD,EADP,CAEII,MAAM,KACCJ,EAAMI,MADR,CAEDgB,aAAa,KACNpB,EAAMI,MAAMgB,kBAmBZM,CAAiB1B,K,mjBC9CpC,IAYeD,EAZ0C,SAACC,EAA+BC,GACrF,IAAKD,EACD,OAAOA,EAEX,OAAQC,EAAOC,MACX,KAAKJ,EAAW6B,kBACZ,OAlCZ,SAAyB3B,EAAmBC,GACxC,OAAO,KACAD,EADP,CAEII,MAAM,KACCJ,EAAMI,MADR,CAEDwB,SAAS,KACF5B,EAAMI,MAAMwB,SADX,CAEJC,aAAcC,EAAsBC,QACpCC,QAAS/B,EAAO+B,cA0BbC,CAAgBjC,EAAOC,GAClC,KAAKH,EAAWoC,YACZ,OAtBZ,SAAgBlC,EAAmBC,GAC/B,OAAO,KACAD,EADP,CAEII,MAAM,KACCJ,EAAMI,MADR,CAEDwB,SAAU,CACNC,aAAcC,EAAsBK,KACpCH,SAAS,EACTxT,MAAO,UAcJ4T,CAAOpC,K,mjBCT1B,IAYeD,EAZ0C,SAACC,EAA+BC,GACrF,IAAKD,EACD,OAAOA,EAEX,OAAQC,EAAOC,MACX,KAAKJ,EAAWuC,8BACZ,OAnBZ,SAAqBrC,EAAmBC,GACpC,OAAO,KACAD,EADP,CAEII,MAAM,KACCJ,EAAMI,MADR,CAEDkC,mBAAmB,KACZtC,EAAMI,MAAMkC,mBADD,CAEdhC,YAAaC,EAAYQ,gBAYtBwB,CAAYvC,GACvB,KAAKF,EAAW0C,gCACZ,OAnCZ,SAAuBxC,EAAmBC,GACtC,OAAO,KACAD,EADP,CAEII,MAAM,KACCJ,EAAMI,MADR,CAEDkC,mBAAmB,KACZtC,EAAMI,MAAMkC,mBADD,CAEdhC,YAAaC,EAAYC,SACzBiC,SAAUxC,EAAOwC,eA2BdC,CAAc1C,EAAOC,K,mjBCRxC,IC1BY0C,EAsJApC,EAOAuB,EDvHG/B,EAZ0C,SAACC,EAA+BC,GACrF,IAAKD,EACD,OAAOA,EAEX,OAAQC,EAAOC,MACX,KAAKJ,EAAW8C,8BACZ,OAnBZ,SAAqB5C,EAAmBC,GACpC,OAAO,KACAD,EADP,CAEII,MAAM,KACCJ,EAAMI,MADR,CAEDyC,mBAAmB,KACZ7C,EAAMI,MAAMyC,mBADD,CAEdvC,YAAaC,EAAYQ,gBAYtBwB,CAAYvC,GACvB,KAAKF,EAAWgD,gCACZ,OAnCZ,SAAuB9C,EAAmBC,GACtC,OAAO,KACAD,EADP,CAEII,MAAM,KACCJ,EAAMI,MADR,CAEDyC,mBAAmB,KACZ7C,EAAMI,MAAMyC,mBADD,CAEdvC,YAAaC,EAAYC,SACzBuC,eAAgB9C,EAAO8C,qBA2BpBL,CAAc1C,EAAOC,KENzBF,EApB0C,SAACC,EAA+BC,GAMrF,IAAM+C,EAAYC,sBAAYjD,EAAyBC,GACvD,OAAI+C,IAIAE,EAAWlD,EAAOC,IAClBkD,EAAcnD,EAAOC,IACrBmD,EAAgBpD,EAAOC,IACvBoD,EAAsBrD,EAAOC,IAC7B8C,EAAe/C,EAAOC,IACtBD,I,8ODwOD,SAASsD,IACZ,IAAM5C,EAAmB,GAEzB,O,qVAAO,IADW6C,+BAClB,CAEInD,MAAO,CACHwB,SAAU,CACNC,aAAcC,EAAsBK,KACpC3T,MAAO,KACPwT,SAAS,GAEb3B,WAAY,CACRC,YAAaC,EAAY4B,KACzBvB,iBAAkB,KAClBD,cAAe,KACfF,QAASC,EACTA,QAEJU,aAAc,CACVd,YAAaC,EAAY4B,KACzBvB,iBAAkB,KAClBD,cAAe,KACfF,QAASC,EACTA,QAEJ4B,mBAAoB,CAChBhC,YAAaC,EAAY4B,KACzBqB,YAAa,GACbf,SAAU,GACVgB,MAAO,CACHA,MAAO,KAGfZ,mBAAoB,CAChBvC,YAAaC,EAAY4B,KACzBY,eAAgB,GAChBU,MAAO,CACHA,MAAO,S,SArSfd,K,gBAAAA,E,kBAAAA,E,oBAAAA,E,kBAAAA,E,qBAAAA,M,cAsJApC,O,eAAAA,I,yBAAAA,I,uBAAAA,I,kBAAAA,M,cAOAuB,O,eAAAA,I,qBAAAA,I,qBAAAA,I,kBAAAA,M,gUEzHL,SAAS4B,GAASjF,GACrB,OAAQA,GACJ,KAAKkE,EAAUgB,OACX,MAAO,SACX,KAAKhB,EAAUiB,QACX,MAAO,OACX,KAAKjB,EAAUkB,SACX,MAAO,OACX,KAAKlB,EAAUmB,SACX,MAAO,QACX,KAAKnB,EAAUoB,QACX,MAAO,MACX,QACI,MAAM,IAAIrV,MAAM,uB,IC/CvBsV,GD2DgBC,G,iLAEb,IAAM/H,EA1Dd,SAAwBuC,GACpB,OAAQA,GACJ,KAAKkE,EAAUgB,OACX,OACI,8BACI,uBAAMzD,KAAK,UAAUgE,MAAI,IAD7B,WAIR,KAAKvB,EAAUiB,QACX,OACI,8BACI,uBAAM1D,KAAK,qBAAqBgE,MAAI,IADxC,YAIR,KAAKvB,EAAUkB,SACX,MAAO,WACX,KAAKlB,EAAUmB,SACX,MAAO,UACX,KAAKnB,EAAUoB,QACX,MAAO,UACX,QACI,MAAM,IAAIrV,MAAM,uBAqCNyV,CAAe5X,KAAK6X,MAAMC,WAClCC,EAAQZ,GAASnX,KAAK6X,MAAMC,WAClC,OAAO,wBAAKC,MAAOA,GAAQpI,O,GAJaqI,IAAMC,W,sCElDjCC,I,mBACjB,WAAYL,GAAmB,IAAD,8BAC1B,4CAAMA,KACDpE,MAAQ,CACT0E,iBAAkB,GAHI,E,uEAOpBC,GACNpY,KAAKqY,SAAS,CAAEF,iBAAkBC,M,mCAGxB,IAAD,OACT,OAAOpY,KAAK6X,MAAMS,KAAKpH,IAAI,SAACqH,EAAKC,GAC7B,IAAMC,EAAa,CAAC,gBAIpB,OAHID,IAAU,EAAK/E,MAAM0E,kBACrBM,EAAWxP,KAAK,uBAGhB,0BAAMpG,IAAKK,OAAOsV,GAAQE,UAAWD,EAAWlT,KAAK,MACjD,uBAAQoO,KAAK,OAAOgF,QAAS,WAAQ,EAAKC,UAAUJ,KAAWD,EAAIM,Y,sCAO/E,OAAO7Y,KAAK6X,MAAMS,KAAKtY,KAAKyT,MAAM0E,kBAAkBW,Y,+BAIpD,OAAO,yBAAKJ,UAAU,YAClB,yBAAKA,UAAU,mBACV1Y,KAAK+Y,cAEV,yBAAKL,UAAU,iBACV1Y,KAAKgZ,sB,GApCYhB,IAAMC,Y,oHDTnCR,O,eAAAA,I,qBAAAA,I,mBAAAA,I,wBAAAA,Q,SAiBgBwB,G,YAMjB,WAAY3V,GAAsB,IAAD,8BAC7B,4CAAMA,KANV4V,kBAKiC,IAJjCC,aAIiC,IAFjCC,sBAEiC,EAE7B,EAAKF,aAAe,EACpB,EAAKC,QAAUnB,IAAMqB,YACrB,EAAKD,iBAAmB,KACxB,EAAK3F,MAAQ,CACT6F,UAAW7B,GAAU7B,KACrB2D,UAAU,GAPe,E,iFAW7BvZ,KAAKoZ,iBAAmBpZ,KAAK6X,MAAM2B,IAAItH,OACV,OAAzBlS,KAAKmZ,QAAQM,UAMbzZ,KAAKyT,MAAM8F,UAGVvZ,KAAK0Z,aAGV1Z,KAAKmZ,QAAQM,QAAQE,UAAY3Z,KAAKmZ,QAAQM,QAAQG,iB,2CAItD,IAAMC,EAAgB7Z,KAAKoZ,iBAC3BpZ,KAAKoZ,iBAAmBpZ,KAAK6X,MAAM2B,IAAItH,OACV,OAAzBlS,KAAKmZ,QAAQM,UAMbzZ,KAAKyT,MAAM8F,WAGVvZ,KAAK0Z,YACFG,IAAkBzD,EAAUiB,SAC5BrX,KAAK6X,MAAM2B,IAAItH,SAAWkE,EAAUiB,WAI5CrX,KAAKmZ,QAAQM,QAAQE,UAAY3Z,KAAKmZ,QAAQM,QAAQG,iB,iCAGtD,OAAO5Z,KAAK6X,MAAM2B,IAAItH,SAAWkE,EAAUgB,QACvCpX,KAAK6X,MAAM2B,IAAItH,SAAWkE,EAAUiB,U,uCAGxC,IAAIrV,EAOJ,OAJIA,EADAhC,KAAK0Z,WACK,uBAAMlP,KAAK,UAEX,yBAAKsP,MAAO,CAAEC,UAAW,SAAUC,UAAW,WAA9C,gBAGV,yBAAKtB,UAAU,gBAAgB7V,IAAI,MAAMiX,MAAO,CAAEG,gBAAiB,4BAA8BC,WAAS,OACtG,yBAAKxB,UAAU,kBACf,yBAAKA,UAAU,iBAAiB1W,M,qCAKxC,IAAMmY,EAAQna,KAAK6X,MAAMxP,IACzB,GAAqB,IAAjB8R,EAAM9P,OACN,OACI,6BAGR,IAAM+P,EAAOD,EAAMjJ,IAAI,SAACmJ,GACpB,IAAMC,EAAgC,GAItC,OAHID,EAAKE,UACLD,EAASvC,MAAQ,OAEd,yBAAKW,UAAU,gBAAgBoB,MAAOQ,EAAUzX,IAAKwX,EAAKG,YAC7D,yBAAK9B,UAAU,iBACV2B,EAAKG,YAEV,yBAAK9B,UAAU,iBACV2B,EAAKA,SAOlB,OAHAD,EAAKnR,KACDjJ,KAAKya,kBAGL,yBAAK/B,UAAU,YAAY7V,IAAI,OAC3B,yBAAK6V,UAAU,oBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iBAAf,UACA,yBAAKA,UAAU,iBAAf,cAGR,yBAAKA,UAAU,iBAAiBgC,IAAK1a,KAAKmZ,SACrCiB,M,qFAUb,OACI,uBACIO,WAAY3a,KAAK6X,MAAMxP,IACvBmC,KAAK,QAELoQ,OAAQ,SAACC,GACL,OAAO3X,OAAO2X,EAAQL,aAG1BM,YAAY,EACZC,OAAQ,CAAEC,EAAG,QACbC,aAAc,SAACZ,GACX,OAAIA,EAAKE,QACE,kBAEA,qBAIf,sBAAOW,OAAP,CACIrC,MAAM,MACNsC,UAAU,aACVtY,IAAI,aACJuY,MAAM,KACNC,OAAQ,SAACb,EAAoBK,GACzB,IAAMS,EAAgB,IAAI7K,KAAK8K,aAAa,QAAS,CAAEC,aAAa,IAAQ9L,OAAO8K,GACnF,OAAIK,EAAQN,QACD,0BAAM7B,UAAU,oBAAoB4C,GAExCA,GAEXG,OAAQ,SAACC,EAAeC,GACpB,OAAOD,EAAElB,WAAamB,EAAEnB,cAGhC,sBAAOU,OAAP,CACIrC,MAAM,WACNsC,UAAU,OACVtY,IAAI,OACJuY,MAAM,MACNC,OAAQ,SAAChB,EAAcQ,GACnB,IAAIe,EAMJ,OAJIA,EADAf,EAAQN,QACF,0BAAM7B,UAAU,oBAAoB2B,GAEpC,8BAAOA,GAEV,uBAASxB,MAAOwB,GAAOuB,S,kCAMtCjI,EAActL,GAyBtB,IAAIwT,EACAC,EACJ,OAAQnI,GACJ,IAAK,MACDkI,EAAc,2BACdC,EAdR,SAAkBzT,GACd,OAAO0T,KAAKC,QAAQ3T,EAAK,CACrB4T,UAAW,OAYDC,CAAS7T,GACnB,MACJ,IAAK,OACDwT,EAAc,2BACdC,EAbR,SAAmBzT,GACf,OAAOiB,KAAKC,UAAUlB,GAYR8T,CAAU9T,GACpB,MACJ,QACA,IAAK,MACDwT,EAAc,2BACdC,EA1BR,SAAkBzT,GACd,OAAO0T,KAAKC,QAAQ3T,GAyBN+T,CAAS/T,IAtC3B,SAAkBgU,EAAkBR,EAAqBC,GACrD,IAAMQ,EAAepV,SAASqV,cAAc,KACtCC,EAAkB,IAAIC,KAAK,CAACX,IAClCQ,EAAaI,KAAOC,IAAIC,gBAAgBJ,GACxCF,EAAaO,SAAWR,EACxBC,EAAaxC,MAAMgD,WAAa,OAChCR,EAAa3I,KAAOkI,EACpB3U,SAAS6V,KAAKC,YAAYV,GAC1BA,EAAaW,QACb/V,SAAS6V,KAAKG,YAAYZ,GAC1BK,IAAIQ,gBAAgBb,EAAaI,MAgCrCG,CAAS,WAAalJ,EAAMkI,EAAaC,K,kCAGjC/Y,GACHA,GAGL/C,KAAKod,YAAYra,EAAMF,IAAK7C,KAAK6X,MAAMxP,O,kCAIvCrI,KAAKqY,SAAS,CACViB,UAAW7B,GAAU4F,QACrB9D,UAAU,M,mCAIdvZ,KAAKqY,SAAS,CACViB,UAAW7B,GAAU6F,OACrB/D,UAAU,M,wCAId,IAAIgE,EAiBAC,EAdJ,OAAQxd,KAAK6X,MAAM2B,IAAItH,QACnB,KAAKkE,EAAUgB,OACXmG,GAAa,EACb,MACJ,KAAKnH,EAAUiB,QACXkG,GAAa,EACb,MACJ,KAAKnH,EAAUmB,SACf,KAAKnB,EAAUoB,QACf,KAAKpB,EAAUkB,SACf,QACIiG,GAAa,EAsBrB,OALIC,IADAxd,KAAKyT,MAAM8F,UAAcvZ,KAAK6X,MAAM2B,IAAItH,SAAWkE,EAAUgB,QAAUpX,KAAK6X,MAAM2B,IAAItH,SAAWkE,EAAUiB,SAO3G,kBAAC,KAAD,KACI,uBAAQoG,KAAK,cAAcC,SAAUH,IAAevd,KAAKyT,MAAM8F,SAAUZ,QAAS3Y,KAAK2d,UAAUC,KAAK5d,QACtG,uBAAQyd,KAAK,QAAQC,SAAUH,GAAcvd,KAAKyT,MAAM8F,SAAUZ,QAAS3Y,KAAK6d,WAAWD,KAAK5d,QAC/F,IACD,uBAAMwd,SAAUA,O,sCAKxB,IAAME,EAAqC,IAA1B1d,KAAK6X,MAAMxP,IAAIgC,OAC1ByT,EACF,wBAAMnF,QAAS3Y,KAAK+d,YAAYH,KAAK5d,OACjC,uBAAMge,KAAN,CAAWnb,IAAI,MAAM6a,SAAUA,GAA/B,OACA,uBAAMM,KAAN,CAAWnb,IAAI,MAAM6a,SAAUA,GAA/B,OACA,uBAAMM,KAAN,CAAWnb,IAAI,OAAO6a,SAAUA,GAAhC,SAGR,OACI,yBAAK7a,IAAI,WACL,wBAAUob,QAASH,GACf,uBAAQL,KAAK,cAEhB,IACAzd,KAAKke,qB,+BAKd,OAAO,yBAAKxF,UAAU,UACjB1Y,KAAKme,gBACLne,KAAKoe,oB,GA7SmBpG,IAAMC,WEZtBoG,G,0LAEb,IAAMC,EAAOte,KAAK6X,MAAM2B,IAAI+E,SAC5B,OAAKD,EAGE,kBAAC,mBAAD,CAAkBE,KAAM,IAAInY,KAAKiY,KAF7B,+C,wCAKX,IAAM9E,EAAMxZ,KAAK6X,MAAM2B,IACvB,OAAQA,EAAItH,QACR,KAAKkE,EAAUgB,OACX,OAAO,kBAAC,kBAAD,CAAiB7Q,KAAMiT,EAAI+E,SAAU/M,UAAW,EAAGiN,UAAU,IACxE,KAAKrI,EAAUiB,QAEf,KAAKjB,EAAUmB,SAEf,KAAKnB,EAAUkB,SAEf,KAAKlB,EAAUoB,QACX,OAAO,kBAAC,kBAAD,CAAiBjR,KAAMiT,EAAI+E,SAAU/X,GAAIgT,EAAIkF,MAAOlN,UAAW,O,qCAI9E,IAAMgI,EAAMxZ,KAAK6X,MAAM2B,IACvB,OAAQA,EAAItH,QACR,KAAKkE,EAAUgB,OACX,OAAO,mCACX,KAAKhB,EAAUiB,QACX,OAAO,kBAAC,kBAAD,CAAiB9Q,KAAMiT,EAAIkF,MAAOlN,UAAW,EAAGiN,UAAU,IACrE,KAAKrI,EAAUmB,SAEf,KAAKnB,EAAUkB,SAEf,KAAKlB,EAAUoB,QACX,OAAO,kBAAC,kBAAD,CAAiBjR,KAAMiT,EAAIkF,MAAOlY,GAAIgT,EAAImF,SAAUnN,UAAW,O,yCAS/DsG,GACf,GAAI9X,KAAK6X,MAAM2B,IAAItH,SAAW4F,EAC1B,OAAO,8BACF,IACD,uBAAMtN,KAAK,QAAQsP,MAAO,CAAE/B,MAAOZ,GAASW,S,+BAMpD,OACI,yBAAKY,UAAU,qBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,sBAAf,UAGA,yBAAKA,UAAU,qBACV1Y,KAAK6X,MAAM2B,IAAIvW,KAGxB,yBAAKyV,UAAU,iBACX,yBAAKA,UAAU,sBAAf,UAGA,yBAAKA,UAAU,qBACX,kBAAC,GAAD,CAAgBZ,UAAW9X,KAAK6X,MAAM2B,IAAItH,WAGlD,yBAAKwG,UAAU,iBACX,yBAAKA,UAAU,sBAAf,aAGA,yBAAKA,UAAU,qBACX,uBACIgE,KAAI,qBAAgB1c,KAAK6X,MAAM2B,IAAIoF,aACnCC,OAAO,SACPC,IAAI,uBAEH9e,KAAK6X,MAAM2B,IAAIuF,kBAI5B,yBAAKrG,UAAU,iBACX,yBAAKA,UAAU,sBAAf,OAGA,yBAAKA,UAAU,qBACX,uBAAGgE,KAAI,yBAAoB1c,KAAK6X,MAAM2B,IAAIwF,QAAUhf,KAAK6X,MAAM2B,IAAIyF,YAG3E,yBAAKvG,UAAU,iBACX,yBAAKA,UAAU,sBAAf,aAGA,yBAAKA,UAAU,qBACV1Y,KAAKkf,oBAGd,yBAAKxG,UAAU,iBACX,yBAAKA,UAAU,sBAAf,cAGA,yBAAKA,UAAU,qBACV1Y,KAAKmf,kBACLnf,KAAKof,mBAAmBhJ,EAAUgB,UAG3C,yBAAKsB,UAAU,iBACX,yBAAKA,UAAU,sBAAf,WAGA,yBAAKA,UAAU,qBACV1Y,KAAKqf,eACLrf,KAAKof,mBAAmBhJ,EAAUiB,gB,GArHtBW,IAAMC,WCEtBqH,I,+LAEb,OACI,yBAAK5G,UAAU,oBACX,6CAAkB,gC,qCAM1B,OACI,yBAAKA,UAAU,oBACX,4CACe,qCADf,+DACwF,gC,kCAMxF6G,GACR,OACI,uBAAO5L,KAAK,QAAQ3R,QAASud,EAAKtd,U,qCAKtC,OAAQjC,KAAK6X,MAAM0H,KAAKrN,QACpB,KAAKsN,GAAY5J,KACjB,KAAK4J,GAAYC,WACb,OAAOzf,KAAK0f,eAChB,KAAKF,GAAYG,gBACb,OAAO3f,KAAK4f,gBAChB,KAAKJ,GAAYK,MACb,OAAO7f,KAAK8f,YAAY9f,KAAK6X,MAAM0H,MACvC,KAAKC,GAAYO,cACjB,KAAKP,GAAYQ,eAEjB,KAAKR,GAAYS,gBACb,OAAO,kBAAC,GAAD,CAAQzG,IAAKxZ,KAAK6X,MAAM0H,KAAK/F,IAAKnR,IAAKrI,KAAK6X,MAAM0H,KAAKlX,S,sCAItE,OAAQrI,KAAK6X,MAAM0H,KAAKrN,QACpB,KAAKsN,GAAY5J,KACb,OAAO5V,KAAK4f,gBAChB,KAAKJ,GAAYC,WACb,OAAO,kBAAC,GAAD,CAASjG,IAAKxZ,KAAK6X,MAAM0H,KAAK/F,MACzC,KAAKgG,GAAYG,gBACb,OAAO3f,KAAK4f,gBAChB,KAAKJ,GAAYK,MACb,OAAO7f,KAAK8f,YAAY9f,KAAK6X,MAAM0H,MACvC,KAAKC,GAAYO,cACjB,KAAKP,GAAYQ,eAEjB,KAAKR,GAAYS,gBACb,OAAO,kBAAC,GAAD,CAASzG,IAAKxZ,KAAK6X,MAAM0H,KAAK/F,S,mCAI7C,IAAMsC,EAAUxR,MAAM/D,KAAK+D,MAAM,KAAKuB,QAAQqF,IAAI,SAACK,GAC/C,OAAO,yBAAKuI,MAAO,CAAEoG,KAAM,WAAYnN,QAAS,OAAQoN,cAAe,MAAOC,aAAc,oBAAsBvd,IAAKK,OAAOqO,IAC1H,yBAAKuI,MAAO,CAAEoG,KAAM,WAAYG,QAAS,MAAOC,aAAc,aAAcC,SAAU,eACjFhP,MAIb,OACI,yBAAKuI,MAAO,CAAEoG,KAAM,UAAWnN,QAAS,OAAQoN,cAAe,SAAUK,UAAW,IAChF,4CACA,yBAAK1G,MAAO,CAAEoG,KAAM,UAAWnN,QAAS,OAAQoN,cAAe,SAAUK,UAAW,EAAGC,UAAW,SAC7F3E,M,oCAMb,IAAMA,EAAUxR,MAAM/D,KAAK+D,MAAM,KAAKuB,QAAQqF,IAAI,SAACK,GAC/C,OAAO,yBAAKmH,UAAU,gBAAgB7V,IAAKK,OAAOqO,IAC9C,yBAAKmH,UAAU,iBAAiBnH,GAChC,yBAAKmH,UAAU,iBAAf,eAA4CnH,MAGpD,OACI,yBAAKmH,UAAU,aACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iBAAf,KACA,yBAAKA,UAAU,iBAAf,UAGR,yBAAKA,UAAU,kBACVoD,M,+BAMb,IAAMxD,EAAO,CACT,CACIC,IAAK,MACLM,MAAO,MACPC,UAAW9Y,KAAKoe,gBAEpB,CACI7F,IAAK,SACLM,MAAO,SACPC,UAAW9Y,KAAK0gB,kBAaxB,OACI,kBAAC,GAAD,CAAUpI,KAAMA,Q,GAxHWN,IAAMC,Y,SC2CxB0I,G,+SAGDC,E,EAAAA,YAAaC,E,EAAAA,S,SACJ7gB,KAAK4N,SAA0C,WAAY,CAC5E,CACIgT,cACAC,c,cAHF/f,E,yBAMCA,EAAO,I,+PAGHggB,E,EAAAA,O,SACU9gB,KAAK4N,SAAwC,UAAW,CACzE,CACIkT,Y,cAFFhgB,E,yBAKCA,EAAO,I,wQAGI8f,E,EAAAA,YAAaC,E,EAAAA,S,SACV7gB,KAAK4N,SAAsD,UAAW,CACvF,CACIgT,cACAC,c,cAHF/f,E,yBAMCA,EAAO,I,0GA7B4BgM,yBCqJ3C,SAASiU,GAAkBvH,EAAe5G,GAE7C,OA/MJ,SAAsB4G,GAClB,OAAQA,EAAI/F,OACR,IAAK,SAAU,OAAO2C,EAAUgB,OAChC,IAAK,UAAW,OAAOhB,EAAUiB,QACjC,IAAK,WAAY,OAAOjB,EAAUmB,SAClC,IAAK,WAAY,OAAOnB,EAAUkB,SAClC,IAAK,UAAW,OAAOlB,EAAUoB,QACjC,IAAK,gBAED,OADApP,QAAQI,KAAK,gBAAiBgR,GACvBpD,EAAUoB,QACrB,QACI,MAAM,IAAIrV,MAAM,sBAAwBqX,EAAI/F,QAmMrCuN,CAAaxH,IAExB,KAAKpD,EAAUgB,OACX,OA9JZ,SAAuBoC,EAAe5G,GAClC,IAAIgM,EAMJ,OAJIA,EADApF,EAAIyH,KACUC,SAAS1H,EAAIyH,KAAM,IAEnB,KAEX,CACHpe,IAAK2W,EAAIsH,OACT7d,GAAIuW,EAAIsH,OACR5O,OAAQkE,EAAUgB,OAClB4H,MAAOxF,EAAI2H,OACXlC,SAAUzF,EAAI2H,OACdvC,cACAG,eAAgBvF,EAAI4H,eACpB7C,SAAU/E,EAAI6H,cAEdC,cAAejb,KAAKuD,MAAQ4P,EAAI6H,cAChCE,aAAc/H,EAAIgI,cAGlB5O,SAAU4G,EAAI3G,MAAQD,GAyIX6O,CAAcjI,EAAK5G,GAC9B,KAAKwD,EAAUiB,QACX,OAvIZ,SAAwBmC,EAAe5G,GACnC,IAAIgM,EAMJ,GAJIA,EADApF,EAAIyH,KACUC,SAAS1H,EAAIyH,KAAM,IAEnB,MAEbzH,EAAIkI,gBACL,MAAM,IAAIvf,MAAM,wCAEpB,MAAO,CACHU,IAAK2W,EAAIsH,OACT7d,GAAIuW,EAAIsH,OACR5O,OAAQkE,EAAUiB,QAClB2H,MAAOxF,EAAI2H,OACXlC,SAAUzF,EAAI2H,OACdvC,cACAG,eAAgBvF,EAAI4H,eACpB7C,SAAU/E,EAAI6H,cACd3C,MAAOlF,EAAIkI,gBACXC,WAAYtb,KAAKuD,MAAQ4P,EAAIkI,gBAC7BJ,cAAejb,KAAKuD,MAAQ4P,EAAI6H,cAChCE,aAAc/H,EAAIgI,cAGlB5O,SAAU4G,EAAI3G,MAAQD,GA8GXgP,CAAepI,EAAK5G,GAC/B,KAAKwD,EAAUmB,SACX,OA5GZ,SAAyBiC,EAAe5G,GACpC,IAAIgM,EAMJ,GAJIA,EADApF,EAAIyH,KACUC,SAAS1H,EAAIyH,KAAM,IAEnB,MAEbzH,EAAIkI,gBACL,MAAM,IAAIvf,MAAM,wCAEpB,IAAKqX,EAAIqI,YACL,MAAM,IAAI1f,MAAM,oCAEpB,MAAO,CACHU,IAAK2W,EAAIsH,OACT7d,GAAIuW,EAAIsH,OACR5O,OAAQkE,EAAUmB,SAClByH,MAAOxF,EAAI2H,OACXlC,SAAUzF,EAAI2H,OACdvC,cACAG,eAAgBvF,EAAI4H,eACpB7C,SAAU/E,EAAI6H,cACd3C,MAAOlF,EAAIkI,gBACXC,WAAYnI,EAAIqI,YAAcrI,EAAIkI,gBAClC/C,SAAUnF,EAAIqI,YACdP,cAAejb,KAAKuD,MAAQ4P,EAAI6H,cAChCE,aAAc/H,EAAIgI,cAGlB5O,SAAU4G,EAAI3G,MAAQD,GA+EXkP,CAAgBtI,EAAK5G,GAChC,KAAKwD,EAAUoB,QACX,OA5CZ,SAAwBgC,EAAe5G,GACnC,IAAIgM,EAMJ,GAJIA,EADApF,EAAIyH,KACUC,SAAS1H,EAAIyH,KAAM,IAEnB,MAEbzH,EAAIkI,gBACL,MAAM,IAAIvf,MAAM,wCAEpB,IAAKqX,EAAIqI,YACL,MAAM,IAAI1f,MAAM,oCAEpB,MAAO,CACHU,IAAK2W,EAAIsH,OACT7d,GAAIuW,EAAIsH,OACR5O,OAAQkE,EAAUoB,QAClBwH,MAAOxF,EAAI2H,OACXlC,SAAUzF,EAAI2H,OACdvC,cACAG,eAAgBvF,EAAI4H,eACpB7C,SAAU/E,EAAI6H,cACd3C,MAAOlF,EAAIkI,gBACXC,WAAYnI,EAAIqI,YAAcrI,EAAIkI,gBAClC/C,SAAUnF,EAAIqI,YACdP,cAAejb,KAAKuD,MAAQ4P,EAAI6H,cAChCE,aAAc/H,EAAIgI,cAClBxf,QAASwX,EAAItH,OAGbU,SAAU4G,EAAI3G,MAAQD,GAcXmP,CAAevI,EAAK5G,GAC/B,KAAKwD,EAAUkB,SACX,OA/EZ,SAAyBkC,EAAe5G,GACpC,IAAIgM,EAMJ,GAJIA,EADApF,EAAIyH,KACUC,SAAS1H,EAAIyH,KAAM,IAEnB,MAEbzH,EAAIkI,gBACL,MAAM,IAAIvf,MAAM,yCAEpB,IAAKqX,EAAIqI,YACL,MAAM,IAAI1f,MAAM,qCAEpB,MAAO,CACHU,IAAK2W,EAAIsH,OACT7d,GAAIuW,EAAIsH,OACR5O,OAAQkE,EAAUkB,SAClB0H,MAAOxF,EAAI2H,OACXlC,SAAUzF,EAAI2H,OACdvC,cACAG,eAAgBvF,EAAI4H,eACpB7C,SAAU/E,EAAI6H,cACd3C,MAAOlF,EAAIkI,gBACXC,WAAYnI,EAAIqI,YAAcrI,EAAIkI,gBAClC/C,SAAUnF,EAAIqI,YACdP,cAAejb,KAAKuD,MAAQ4P,EAAI6H,cAChCE,aAAc/H,EAAIgI,cAGlB5O,SAAU4G,EAAI3G,MAAQD,GAkDXoP,CAAgBxI,EAAK5G,GAChC,QACI,MAAM,IAAIzQ,MAAM,uBAAyBqX,EAAItH,SA0DlD,SAAS+P,GAAczI,EAAU1B,GACpC,OAAKA,GAGEA,EAAUoK,KAAK,SAAChQ,GACnB,OAAOsH,EAAItH,SAAWA,IAmDvB,SAASiQ,GAAiBC,GAC7B,OAAQA,EAAUC,MACd,IAAK,SACD,OAlBL,SAAsBC,GACzB,IACMC,GAAU,IAAIlc,MAAOwD,UAC3B,OAAQyY,GACJ,IAAK,WACD,MAAO,CAACC,EAJW,KAImBA,GAC1C,IAAK,cACD,MAAO,CAACA,EAAUC,OAA6BD,GACnD,IAAK,WACD,MAAO,CAACA,EAAUC,OAA6BD,GACnD,IAAK,YACD,MAAO,CAACA,EAAUC,OAA8BD,IAOzCE,CAAaL,EAAUE,QAClC,IAAK,UACD,MAAO,CAACF,EAAUM,MAAON,EAAUO,KACvC,QACI,MAAM,IAAIxgB,MAAM,wDD5RPwe,GACVhe,OAAiB,aEpD5B,IAWY6c,I,SAAAA,O,eAAAA,I,2BAAAA,I,qCAAAA,I,iCAAAA,I,mCAAAA,I,qCAAAA,I,kBAAAA,Q,SA0DSoD,G,YACjB,WAAY/K,GAA2B,IAAD,8BAClC,4CAAMA,KAEDpE,MAAQ,CACTvB,OAAQsN,GAAY5J,MAJU,E,kMAS5BiN,EAAgB,IAAIlC,GAAqB,CAC3Cje,MAAO1C,KAAK6X,MAAMnV,MAClBD,IAAKzC,KAAK6X,MAAMiL,mBAGdhC,EAAS9gB,KAAK6X,MAAMkL,M,SAERF,EAAcG,OAAO,CAAElC,W,cAAnCtH,E,yBACCuH,GAAkBvH,EAAIyJ,UAAW,Y,8KAG5BC,G,oFACNC,EAAY,IAAI1U,6BAA0B,CAC5C/L,MAAO1C,KAAK6X,MAAMnV,MAClBD,IAAKzC,KAAK6X,MAAMuL,OAChBzgB,OAAQ,wB,SAGWwgB,EAAUE,WAAW,CAAEvC,OAAQ9gB,KAAK6X,MAAMkL,MAAOO,WAAYJ,I,2CAA7EK,E,uBAEAA,EAAOpJ,MAAMjJ,IAAI,SAACmJ,EAAM7B,GAC3B,MAAO,CACHgC,WAAY0I,EAAY1K,EAAQ,EAChC6B,KAAMA,EAAKA,KACXE,UAASF,EAAKmJ,a,0IAgBV,IAAD,OACLC,EAAM,wCAAG,qCAAA/H,EAAA,yDACLjI,EAAQ,EAAKA,OACTvB,SAAWsN,GAAYO,cAFtB,uBAGP,EAAK1H,SAAS,CACVnG,OAAQsN,GAAYK,MACpB5d,MAAO,8BAAgCwR,EAAMvB,SAL1C,iCASH7J,EAAQoL,EAARpL,IACR,EAAKgQ,SAAS,CACVnG,OAAQsN,GAAYQ,eACpB3X,QAZO,SAcO,EAAK2a,SAdZ,cAcLxJ,EAdK,OAeLkK,EAAgBrb,EAAIgC,OAff,UAgBU,EAAKsZ,UAAUD,GAhBzB,QAgBLE,EAhBK,YAkBHpK,EAAItH,OAlBD,cAmBFkE,EAAUgB,OAnBR,UAuBFhB,EAAUiB,QAvBR,UA+BFjB,EAAUmB,SA/BR,UAsCFnB,EAAUoB,QAtCR,UA6CFpB,EAAUkB,SA7CR,2BAqBH,EAAKuM,qBArBF,oCAwBH,EAAKxL,SAAS,CACVnG,OAAQsN,GAAYO,cACpB1X,IAAKA,EAAI/C,OAAOse,GAChBpK,QAEJsK,IA7BG,4CAuCH,EAAKzL,SAAS,CACVnG,OAAQsN,GAAYS,gBACpB5X,IAAKA,EAAI/C,OAAOse,GAChBpK,QA1CD,6BA8CH,EAAKnB,SAAS,CACVnG,OAAQsN,GAAYS,gBACpB5X,IAAKA,EAAI/C,OAAOse,GAChBpK,QAjDD,0CAAH,qDAqDNsK,EAAO,WACTna,WAAW8Z,EA9KE,MAgLjBK,M,2CAGkB,IAAD,OACXL,EAAM,wCAAG,+BAAA/H,EAAA,qEACO,EAAKsH,SADZ,OACLxJ,EADK,YAEHA,EAAItH,OAFD,cAGFkE,EAAUgB,OAHR,wBAKH0M,IALG,2CAQe,EAAKH,UAAU,GAR9B,QAQGtb,EARH,YASKmR,EAAItH,OATT,cAUMkE,EAAUiB,QAVhB,UAkBMjB,EAAUmB,SAlBhB,UAyBMnB,EAAUoB,QAzBhB,UAgCMpB,EAAUkB,SAhChB,2BAWK,EAAKe,SAAS,CACVnG,OAAQsN,GAAYO,cACpB1X,MACAmR,QAEJsK,IAhBL,oDAiCK,EAAKzL,SAAS,CACVnG,OAAQsN,GAAYS,gBACpB5X,MACAmR,QApCT,+DAAH,qDA2CNsK,EAAO,WACTna,WAAW8Z,EAhOE,MAmOjBK,M,mKAIA9jB,KAAKqY,SAAS,CACVnG,OAAQsN,GAAYG,kB,SAEN3f,KAAKgjB,S,OAAjBxJ,E,YAIEA,EAAItH,O,cACHkE,EAAUgB,O,SAQVhB,EAAUiB,Q,UAQVjB,EAAUmB,S,UAQVnB,EAAUoB,Q,UAQVpB,EAAUkB,S,0BA9BXtX,KAAKqY,SAAS,CACVnG,OAAQsN,GAAYC,WACpBjG,QAEJxZ,KAAK6jB,qB,4CAGO7jB,KAAK2jB,UAAU,G,eAA3Btb,E,OACArI,KAAKqY,SAAS,CACVnG,OAAQsN,GAAYO,cACpB1X,MACAmR,Q,4CAIQxZ,KAAK2jB,UAAU,G,eAA3Btb,E,OACArI,KAAKqY,SAAS,CACVnG,OAAQsN,GAAYS,gBACpB5X,MACAmR,Q,4CAIQxZ,KAAK2jB,UAAU,G,eAA3Btb,E,OACArI,KAAKqY,SAAS,CACVnG,OAAQsN,GAAYS,gBACpB5X,MACAmR,Q,4CAIQxZ,KAAK2jB,UAAU,G,eAA3Btb,E,OACArI,KAAKqY,SAAS,CACVnG,OAAQsN,GAAYS,gBACpB5X,MACAmR,Q,kKAOZxZ,KAAK+jB,qB,sCAIL,OACI,4CACgB,+B,qCAMpB,OACI,2CACe,+B,kCAKXxE,GACR,OACI,uBAAO5L,KAAK,QAAQ3R,QAASud,EAAKtd,U,+BAKtC,OAAO,kBAAC,GAAD,CAAoBsd,KAAMvf,KAAKyT,Y,GAhPJuE,IAAMC,WClCjC+L,ICxBHC,GDwBGD,qBA3Bf,SAAyBvQ,EAAmBoE,GAA8B,IAE1DzF,EASRqB,EATAxB,KAAQG,kBAFyD,EAWjEqB,EARAyQ,IACIC,OACIC,SACgChB,EANyB,EAMrDiB,oBAAuB5hB,IACDqgB,EAP+B,EAOrDwB,cAAiB7hB,IAOjC,IAAK2P,EACD,MAAM,IAAIjQ,MAAM,iCAKpB,MAAO,CAAEO,MAHG0P,EAAkB1P,MAGd0gB,SAAQN,qBAG5B,SAA4ByB,EAA4BC,GACpD,MAAO,IAGIR,CAGbxE,I,wDEGWiF,GAAb,WAII,WAAYC,GAAiB,yBAH7BC,mBAG4B,OAF5BD,YAE4B,EACxB1kB,KAAK2kB,cAAgB,GACrB3kB,KAAK0kB,OAASA,EANtB,+CASOE,EAAmBjc,GAClB,IAAM1F,EAAKjD,KAAK0kB,OAAOG,GAAGD,EAAWjc,GACrC3I,KAAK2kB,cAAc1b,KAAKhG,KAXhC,4BAcW,IAAD,OACFjD,KAAK2kB,cAAc7b,QAAQ,SAAC7F,GACxB,EAAKyhB,OAAOI,IAAI7hB,SAhB5B,KAqBqB8hB,G,WAIjB,aAAe,yBAHfC,eAGc,OAFdC,sBAEc,OADdC,kBACc,EACVllB,KAAKglB,UAAY,GACjBhlB,KAAKilB,iBAAmB,IAAIxd,IAC5BzH,KAAKklB,aAAe,IAAIzd,I,2DAGJ,IAAD,OACb0d,EAAQnlB,KAAKglB,UACnBhlB,KAAKglB,UAAY,GACjBG,EAAMrc,QAAQ,SAAC9G,GACX,IAAMojB,EAAkB,EAAKH,iBAAiBzf,IAAIxD,EAAQiB,IACrDmiB,GAGLA,EAAgBzd,UAAUmB,QAAQ,SAACC,GAC/B,IACIA,EAASJ,QAAQ3G,EAAQ4E,SAC3B,MAAOgC,GACLR,QAAQnG,MAAM,QAAS2G,U,qCAMf,IAAD,OACW,IAA1B5I,KAAKglB,UAAU3a,QAGnBrD,OAAO2C,WAAW,WACd,EAAK0b,gBArEG,IAAO,M,2BAyEfT,EAAmBhe,GACvB,IAAM5E,EAAmB,CACrBiB,GAAI2hB,EACJhe,WAEJ5G,KAAKglB,UAAU/b,KAAKjH,GACpBhC,KAAKslB,iB,yBAGNV,EAAmBjc,GAClB,IAAIyc,EAAkBplB,KAAKilB,iBAAiBzf,IAAIof,GAC3CQ,IACDA,EAAkB,CACdzd,UAAW,IAEf3H,KAAKilB,iBAAiBjc,IAAI4b,EAAWQ,IAEzC,IAAMniB,EAAKsiB,KAAK9e,KACVsC,EAAW,CACb9F,KAAI2hB,YAAWjc,WAInB,OAFAyc,EAAgBzd,UAAUsB,KAAKF,GAC/B/I,KAAKklB,aAAalc,IAAI/F,EAAI8F,GACnB9F,I,0BAGPA,GACA,IAAM8F,EAAW/I,KAAKklB,aAAa1f,IAAIvC,GACvC,GAAK8F,EAAL,CAGA,IAAMqc,EAAkBplB,KAAKilB,iBAAiBzf,IAAIuD,EAAS6b,WACtDQ,IAGLA,EAAgBzd,UAAYyd,EAAgBzd,UAAUwC,OAAO,SAACqb,GAC1D,OAAOA,EAAEviB,KAAO8F,EAAS9F,W,eD5HzBghB,O,qBAAAA,I,qBAAAA,I,qBAAAA,I,mBAAAA,I,qBAAAA,I,kBAAAA,Q,KASL,IAAMwB,GAAb,WAiBI,WAAYniB,GAAuB,yBAhBnCA,YAgBkC,OAdlCoiB,iBAckC,OAblCC,iBAakC,OAXlCC,kBAWkC,OAVlC1T,YAUkC,OAPlCjQ,WAOkC,OALlC4jB,kBAKkC,OAJlCC,eAIkC,OAFlCC,iBAEkC,EAC9B/lB,KAAKsD,OAASA,EAEdtD,KAAK0lB,YAAc,KACnB1lB,KAAK2lB,YAAc,EAEnB3lB,KAAK4lB,aAAe,EAGpB5lB,KAAKkS,OAAS+R,GAAY+B,QAE1BhmB,KAAK6lB,aAAe,KAEpB7lB,KAAK8lB,UAAY,KAEjB9lB,KAAK+lB,YAAc,IAAItB,GAAYzkB,KAAKsD,OAAOohB,QAC/C1kB,KAAKiC,MAAQ,GAjCrB,mDAsCQjC,KAAK+lB,YAAYjB,QAtCzB,8BA0CQ9kB,KAAKkS,OAAS+R,GAAY3G,OAEtBtd,KAAK8lB,WACL9e,OAAOif,cAAcjmB,KAAK8lB,WAE1B9lB,KAAK0lB,aACL1e,OAAOif,cAAcjmB,KAAK0lB,aAE1B1lB,KAAK6lB,cACL7e,OAAOkf,aAAalmB,KAAK6lB,cAG7B7lB,KAAK2lB,YAAc,EACnB3lB,KAAKmmB,qBAvDb,6BA2DQnmB,KAAKomB,iBA3Db,sCA8DqB,IAAD,OACZpmB,KAAK4lB,aAAevf,KAAKuD,MACzB5J,KAAKkS,OAAS+R,GAAYoC,QAE1B,IAAMC,EAAY,WACd,IAAMlc,EAAU/D,KAAKuD,MAAQ,EAAKgc,aAClC,GAAIxb,EA1FQ,IA8FR,OAHA,EAAK8H,OAAS+R,GAAYpE,MAC1B,EAAK5d,MAAL,iCAAuCmI,EAAvC,YACA,EAAKmc,cAIT,OAAQ,EAAKrU,QAKT,KAAK+R,GAAYoC,QACjB,KAAKpC,GAAYuC,QAEb,YADAC,IAEJ,KAAKxC,GAAYyC,QACT,EAAKb,cACL7e,OAAOkf,aAAa,EAAKL,cAE7B,EAAK3T,OAAS+R,GAAYyC,QAC1B,EAAKN,eACL,MACJ,KAAKnC,GAAY+B,QACbS,IACA,MACJ,KAAKxC,GAAY3G,OACblV,QAAQI,KAAK,2BAEb,MACJ,KAAKyb,GAAYpE,MACbzX,QAAQI,KAAK,4BAInBie,EAAkB,WACpB,EAAKZ,aAAe7e,OAAO2C,WAAW2c,EAAW,EAAKhjB,OAAOqjB,gBAGjEF,MA3GR,qCA8GoB,IAAD,OACXzmB,KAAKkS,OAAS+R,GAAYyC,QAE1B,IAWME,EAAuB,WACzB,EAAKlB,YAAc1e,OAAO6f,YAAY,WAClC,EAAKlB,aAAe,EACpB,EAAKQ,oBACN,EAAK7iB,OAAOwjB,aAAe,EAAKxjB,OAAOyjB,gBAZ1C,EAAKjB,UAAY9e,OAAO2C,WAAW,EAAKqd,QAAQpJ,KAAK,GAAO,EAAKta,OAAOwjB,cACxE,EAAKnB,YAAc,EACnBiB,MAtHZ,gCAuIY5mB,KAAK0lB,aACL1e,OAAOif,cAAcjmB,KAAK0lB,aAG9B1lB,KAAKsD,OAAO2jB,SACZjnB,KAAK2lB,YAAc,EACnB3lB,KAAKknB,kBA7Ib,sDAgJqC,IAAD,OAC5BlnB,KAAK+lB,YAAYlB,GAAG,YAAa,YAC7B,GADyC,EAATsC,GAE5B,OAAQ,EAAKjV,QAIT,KAAK+R,GAAYoC,QAEb,EAAKnU,OAAS+R,GAAYuC,QAC1B,MACJ,KAAKvC,GAAYuC,QAIb,MACJ,KAAKvC,GAAYyC,QACb,EAAKU,QACL,MACJ,KAAKnD,GAAY+B,QAEjB,KAAK/B,GAAY3G,OAGjB,KAAK2G,GAAYpE,YAIrB,OAAQ,EAAK3N,QAGT,KAAK+R,GAAYoC,QACb,MACJ,KAAKpC,GAAYuC,QACb,EAAKtU,OAAS+R,GAAYyC,QAC1B,MACJ,KAAKzC,GAAYyC,QAEjB,KAAKzC,GAAY+B,QACb,MACJ,KAAK/B,GAAY3G,OAGb,EAAK+J,OACL,MACJ,KAAKpD,GAAYpE,YA7LrC,qDAqMQ7f,KAAK+lB,YAAYjB,QArMzB,qCAyMQ9kB,KAAKsnB,gCACLtnB,KAAKgnB,YA1Mb,yCA8MQhnB,KAAKsD,OAAOikB,WAAW,IAAMvnB,KAAK2lB,YAAc3lB,KAAKsD,OAAOyjB,iBA9MpE,oCAkNY/mB,KAAK8lB,WACL9e,OAAOif,cAAcjmB,KAAK8lB,WAE1B9lB,KAAK0lB,aACL1e,OAAOif,cAAcjmB,KAAK0lB,aAE1B1lB,KAAK6lB,cACL7e,OAAOkf,aAAalmB,KAAK6lB,cAG7B7lB,KAAK2lB,YAAc,EACnB3lB,KAAKmmB,mBACLnmB,KAAKwnB,mCA9Nb,KEvBMC,GAAsB,IACtBC,GAA4B,IAC5BC,GAAiB,IA4BFC,G,YASjB,WAAY/P,GAAsB,IAAD,8BAC7B,4CAAMA,KATVgQ,qBAQiC,IAPjCC,2BAOiC,IANjCC,sBAMiC,IALjCC,sBAKiC,IAJjCjC,iBAIiC,IAFjCtC,YAEiC,EAG7B,EAAKoE,gBAAkB,KACvB,EAAKC,sBAAwB,KAC7B,EAAKC,iBAAmB,KACxB,EAAKC,iBAAmB,KACxB,EAAKjC,YAAc,IAAItB,GAAY,EAAK5M,MAAM6M,QAE9C,EAAKjB,OAAS,IAAIgC,GAAO,CACrBwB,OAAQ,EAAKpP,MAAMoP,OACnBM,WAAY,EAAKA,WAAW3J,KAAhB,iBACZ8G,OAAQ,EAAK7M,MAAM6M,OACnBoC,aAAcW,GACdV,cAAeW,GACff,cAAegB,KAGnB,EAAKlU,MAAQ,CACT/H,cAAc,EAEduc,iBAAkB,EAClBC,oBAAoB,EACpBC,iBAAkB,EAClBC,WAAW,EACXC,OAAQ,EAAKxQ,MAAMyQ,WAzBM,E,wEA6BtBC,GACPvoB,KAAKqY,SAAS,CACV4P,iBAAkBM,M,0CAIL,IAAD,OACZvoB,KAAK6X,MAAM2Q,cACXxoB,KAAKyoB,kBAETzoB,KAAK+lB,YAAYlB,GAAG,YAAa,YAAY,EAATsC,GAE5B,EAAK9O,SAAS,CACV+P,WAAW,IAIf,EAAK/P,SAAS,CACV+P,WAAW,Q,6CAevBpoB,KAAK0oB,iBACL1oB,KAAKyjB,OAAOpf,OACZrE,KAAK+lB,YAAYjB,Q,sFAQjB9kB,KAAKqY,SAAS,CACV3M,cAAc,IAElB1L,KAAKyjB,OAAO+E,iB,uCAuBZxoB,KAAKyjB,OAAO8C,cACZvmB,KAAKqY,SAAS,CACV3M,cAAc,M,yCAKd1L,KAAKyT,MAAM/H,aACX1L,KAAK0oB,iBAEL1oB,KAAKyoB,oB,mCAIAJ,GACTroB,KAAKqY,SAAS,CAAEgQ,a,+BAIhB,IAAKroB,KAAK6X,MAAM8Q,aACZ,OAAO,KAEX,IAAIC,EAoDA/P,EAMAgQ,EAzDAlZ,EAAQ,gBACRmZ,EAAmC,UAgBjCC,EACF,qBACIC,eAAgBhpB,KAAKyT,MAAM4U,OAC3BY,gBAAgB,eAChBC,kBAAkB,eAClBC,SAAUnpB,KAAKopB,aAAaxL,KAAK5d,QA4CzC,OAzCIA,KAAKyT,MAAM/H,eACXiE,EAAQ,eACRmZ,EAAa,SASTF,EARC5oB,KAAKyT,MAAM2U,UASR,4BACK,IAAI,sBAAUzU,KAAK,SAAS0V,QAAS,IAAKjO,MAAO,GAAIkO,UAAU,EAAOC,YAAa,GAAIC,YAAa,YARzG,4BACK,IACD,sBAAU7V,KAAK,SAAS0V,QAASrpB,KAAKyT,MAAMwU,iBAAkB7M,MAAO,GAAImO,YAAa,GAAID,UAAU,MAqBhHzQ,EADA7Y,KAAKyT,MAAM/H,aACN,kDAA8C+b,GAA9C,kBAA2EC,GAA3E,kBAEG,gCAGR1nB,KAAKyT,MAAM4U,SACXQ,EAAU,qBAAShQ,MAAOA,GACtB,qBAAQF,QAAS3Y,KAAKypB,iBAAiB7L,KAAK5d,MAAO2T,KAAMmV,EAAYte,KAAK,QAAQsP,MAAO,CAAE4P,SAAU,QAChG/Z,GAEJiZ,IAIL,4BACKG,EACA,IACAF,O,GAxMoB7Q,aCC/B2R,GAAuD,CACzD,CACIha,MAAO,SACPlP,MAAO,UAEX,CACIkP,MAAO,UACPlP,MAAO,WAEX,CACIkP,MAAO,WACPlP,MAAO,YAEX,CACIkP,MAAO,UACPlP,MAAO,WAEX,CACIkP,MAAO,QACPlP,MAAO,U,IA4CMmpB,G,YAMjB,WAAY/R,GAAuB,IAAD,8BAC9B,4CAAMA,KANVgS,kBAKkC,IAFlCnF,YAEkC,EAG9B,EAAKmF,aAAe,GACpB,EAAKnF,OAAS,IAAIK,GAElB,EAAKtR,MAAQ,CACTqW,WAAW,EACXC,uBAAwB,CAAC,SAAU,UAAW,WAAY,UAAW,SACrE3H,UAAW,CAAEC,KAAM,SAAUC,OAAQsH,EAASI,kBAC9CC,cAAc,EACdC,YAAa,MAXa,E,iFAgB9BlqB,KAAKmqB,UAAS,K,2CAIVnqB,KAAK6X,MAAM9D,cAAgBC,EAAYQ,UACvCxU,KAAK0kB,OAAO0F,KAAK,YAAa,CAAEjD,IAAI,IAEpCnnB,KAAK0kB,OAAO0F,KAAK,YAAa,CAAEjD,IAAI,M,wCAI1B1mB,GAAgB,IAAD,OAEf,gBAAVA,EAQAT,KAAKqY,SACD,CACIyR,WAAW,EACX1H,UAAW,CAAEC,KAAM,SAAUC,OAAQ7hB,IAEzC,WACI,EAAK0pB,UAAS,KAbtBnqB,KAAKqY,SAAS,CACVyR,WAAW,EACX1H,UAAW,CAAEC,KAAM,UAAWK,MAAOrc,KAAKuD,MAAO+Y,IAAKtc,KAAKuD,W,oCAiBzDygB,GACVrqB,KAAK6pB,aAAeQ,EAAMxL,OAAOpe,Q,+BAG5B4pB,GACLA,EAAMC,iBACNtqB,KAAKmqB,UAAS,K,+BAGTI,GACL,GAAiC,qBAAtBvqB,KAAK6pB,aAAhB,CAIA,IAAMW,EA7Gd,SAA2CrgB,GACvC,IAAIsgB,EAAgC,GAoBpC,OAnBAtgB,EAAOrB,QAAQ,SAACoJ,GACZ,OAAQA,GACJ,IAAK,SACDuY,EAAYxhB,KAAKmN,EAAUgB,QAC3B,MACJ,IAAK,UACDqT,EAAYxhB,KAAKmN,EAAUiB,SAC3B,MACJ,IAAK,WACDoT,EAAYxhB,KAAKmN,EAAUkB,UAC3B,MACJ,IAAK,UACDmT,EAAYxhB,KAAKmN,EAAUmB,UAC3B,MACJ,IAAK,QACDkT,EAAYxhB,KAAKmN,EAAUoB,YAIhCiT,EAwFqBC,CAAkC1qB,KAAKyT,MAAMsW,wBAE/D1V,EAAyC,CAC3C6C,MAAOlX,KAAK6pB,aACZzH,UAAWpiB,KAAKyT,MAAM2O,UACtBtK,UAAW0S,EACXD,eAMJ,OAHAvqB,KAAK0kB,OAAO0F,KAAK,SAAU,IAE3BpqB,KAAK6X,MAAM8S,OAAOtW,IACX,K,wCAGOiK,EAAqBsM,GAGnC,GAAa,OAATtM,EAAJ,CAWA,IACI8D,EADAyI,EAAoB7qB,KAAKyT,MAAM2O,UAEnC,OAAQyI,EAAkBxI,MACtB,IAAK,SACDD,EAAY,CACRC,KAAM,UACNK,MAAOpE,EAAKwM,UACZnI,IAAKoI,KAET,MACJ,IAAK,UACD3I,EAAY,CACRC,KAAM,UACNK,MAAOpE,EAAKwM,UACZnI,IAAKkI,EAAkBlI,KAE3B,MACJ,QACI,OAGR3iB,KAAKqY,SAAS,CACV+J,mBAhCApiB,KAAKqY,SAAS,CACV+J,UAAW,CACPC,KAAM,SACNC,OAAQ,gB,sCAiCRhE,EAAqBsM,GAGjC,GAAa,OAATtM,EAAJ,CASA,IACI8D,EADAyI,EAAoB7qB,KAAKyT,MAAM2O,UAEnC,OAAQyI,EAAkBxI,MACtB,IAAK,SACDD,EAAY,CACRC,KAAM,UACNK,MAAOqI,IACPpI,IAAKrE,EAAKwM,WAEd,MACJ,IAAK,UACD1I,EAAY,CACRC,KAAM,UACNK,MAAOmI,EAAkBnI,MACzBC,IAAKrE,EAAKwM,WAEd,MACJ,QACI,OAGR9qB,KAAKqY,SAAS,CACV+J,mBA9BApiB,KAAKqY,SAAS,CACV+J,UAAW,CACPC,KAAM,SACNC,OAAQ,gB,sCA+BR9I,GAAW,IAAD,OACtB,OAAQA,EAAItH,QACR,KAAKkE,EAAUgB,OACf,KAAKhB,EAAUiB,QACX,OACI,uBACIwB,MAAM,mBACNmS,UAAW,WACP,EAAKnT,MAAMoT,UAAUzR,EAAIvW,KAE7BioB,OAAO,MACPC,WAAW,MAEX,uBAAQ1N,KAAK,QAAQ9J,KAAK,YAGtC,QACI,U,0CAIS,IACbyX,EADY,OAEhB,GAAIprB,KAAKyT,MAAMqW,UAAW,CACtB,IAAM1H,EAAYpiB,KAAKyT,MAAM2O,UACN,YAAnBA,EAAUC,OACV+I,EACI,kBAAC,IAAMC,SAAP,KACI,sBAAMrN,KAAN,CAAWrO,MAAM,QACb,uBACI2b,UAAU,EACVC,YAAY,EACZ9qB,MAAO+qB,KAAOpJ,EAAUM,OACxByG,SAAUnpB,KAAKyrB,kBAAkB7N,KAAK5d,SAG9C,sBAAMge,KAAN,CAAWrO,MAAM,MACb,uBACI2b,UAAU,EACVC,YAAY,EACZ9qB,MAAO+qB,KAAOpJ,EAAUO,KACxBwG,SAAUnpB,KAAK0rB,gBAAgB9N,KAAK5d,WAO5D,OACI,uBAAM2rB,OAAO,SAASC,SAAU5rB,KAAK4rB,SAAShO,KAAK5d,OAC/C,sBAAMge,KAAN,KACI,uBACI6N,aAAc7rB,KAAK6pB,aACnBiC,YAAY,cACZhS,MAAO,CAAEsB,MAAO,QAChB+N,SAAUnpB,KAAK+rB,cAAcnO,KAAK5d,SAI1C,sBAAMge,KAAN,CAAWrO,MAAM,cACjB,sBAAMqO,KAAN,KACI,uBACI6N,aAAcjC,EAASI,iBACvBb,SAAUnpB,KAAKgsB,kBAAkBpO,KAAK5d,MACtCisB,0BAA0B,EAC1BnS,MAAO,CAAEsB,MAAO,SAEhB,sBAAQ8Q,OAAR,CAAezrB,MAAM,YAArB,iBACA,sBAAQyrB,OAAR,CAAezrB,MAAM,eAArB,qBACA,sBAAQyrB,OAAR,CAAezrB,MAAM,YAArB,iBACA,sBAAQyrB,OAAR,CAAezrB,MAAM,aAArB,kBACA,sBAAQyrB,OAAR,CAAezrB,MAAM,eAArB,kBAGP2qB,EAED,sBAAMpN,KAAN,KACI,uBAAQP,KAAK,SAAS9J,KAAK,UAAUwY,SAAS,YAGlD,sBAAMnO,KAAN,KACI,uBAAQiL,gBAAgB,eAAeC,kBAAkB,eAAeC,SAAUnpB,KAAKosB,mBAAmBxO,KAAK5d,SAGnH,sBAAMge,KAAN,KACI,kBAAC,GAAD,CACIiJ,OAAQ,WACJ,EAAKkD,UAAS,IAElBzF,OAAQ1kB,KAAK0kB,OACb8D,cAAc,EACd6D,gBAAiBrsB,KAAK6X,MAAM9D,cAAgBC,EAAYQ,UACxDmU,aAAc3oB,KAAK6X,MAAMyU,uBACzBhE,WAAW,Q,yCAOZ2B,GACfjqB,KAAKqY,SAAS,CAAE4R,mB,qCAGLsC,GAAoC,IAAD,OACxCpiB,EAASoiB,EAEfvsB,KAAKqY,SACD,CACI0R,uBAAwB5f,GAE5B,WACI,EAAKggB,UAAS,O,2CAKLE,GAA6B,IAAD,OACzCA,EAAMxL,OAAO2N,SACbxsB,KAAKqY,SACD,CACI0R,uBAAwB,CAAC,SAAU,UAAW,WAAY,UAAW,UAEzE,WACI,EAAKI,UAAS,O,mCAMhB,IAAD,OACTnqB,KAAKqY,SACD,CACI0R,uBAAwB,CAAC,SAAU,UAAW,WAAY,UAAW,UAEzE,WACI,EAAKI,UAAS,O,wCAKP,IAAD,OACdnqB,KAAKqY,SACD,CACI0R,uBAAwB,CAAC,WAAY,UAAW,UAEpD,WACI,EAAKI,UAAS,O,sCAKT,IAAD,OACZnqB,KAAKqY,SACD,CACI0R,uBAAwB,CAAC,SAAU,YAEvC,WACI,EAAKI,UAAS,O,0CAMtB,IAAMna,EAAU2Z,GAChB,OACI,yBAAKjR,UAAU,uBACX,0BAAMoB,MAAO,CAAE/B,MAAO,OAAQ0U,WAAY,OAAQC,YAAa,SAA/D,wBACA,uBAAQliB,KAAK,QAAQmO,QAAS3Y,KAAK2sB,WAAW/O,KAAK5d,OAC/C,mCACM,IACV,uBAAQwK,KAAK,QAAQmO,QAAS3Y,KAAK4sB,cAAchP,KAAK5d,OAClD,sCACM,IACV,uBAAQwK,KAAK,QAAQmO,QAAS3Y,KAAK6sB,gBAAgBjP,KAAK5d,MAAO8Z,MAAO,CAAE4S,YAAa,SACjF,wCAEJ,sBAAUI,MAAV,CACI9c,QAASA,EACTmZ,SAAUnpB,KAAK+sB,eAAenP,KAAK5d,MACnCS,MAAOT,KAAKyT,MAAMsW,4B,yCAO9B,IAIIiD,EAJAC,EAAsC,CAAEC,OAAQ,oBAUpD,OATKltB,KAAKyT,MAAMwW,eACZgD,EAAela,QAAU,QAGzB/S,KAAKyT,MAAMwW,eACX+C,EAAY,yBAAKtU,UAAU,MAAMoB,MAAOmT,GACnCjtB,KAAKmtB,sBAIV,yBAAKzU,UAAU,OACX,yBAAKA,UAAU,OAAO1Y,KAAKotB,qBAC1BJ,K,oCAKCxT,GACVxZ,KAAKqY,SAAS,CACV6R,YAAa1Q,M,qCAKjBxZ,KAAKqY,SAAS,CACV6R,YAAa,S,wCAKjB,GAAKlqB,KAAKyT,MAAMyW,YAAhB,CAGA,IAAMmD,EACF,uBAAQxqB,IAAI,SAAS8V,QAAS3Y,KAAKstB,aAAa1P,KAAK5d,OAArD,SAIE6Y,EACF,gDACmB,0BAAMiB,MAAO,CAAEyT,WAAY,cAA3B,IAA4CvtB,KAAKyT,MAAMyW,YAAYjnB,IACjF,IACD,kBAAC,GAAD,CAAgB6U,UAAW9X,KAAKyT,MAAMyW,YAAYhY,UAG1D,OACI,uBAAOwG,UAAU,kBAAkBG,MAAOA,EACtC2U,SAAUxtB,KAAKstB,aAAa1P,KAAK5d,MAAOytB,SAAS,EACjDJ,OAAQA,GACR,kBAAC,GAAD,CAAWtK,MAAO/iB,KAAKyT,MAAMyW,YAAYjnB,S,wCAKlC,IAAD,OACRyqB,EAAU1tB,KAAK6X,MAAM9D,cAAgBC,EAAYQ,UACvD,OACI,uBACIhK,KAAK,QACLkO,UAAU,iBACViC,WAAY3a,KAAK6X,MAAM1D,KACvBuZ,QAASA,EACT9S,OAAQ,SAACpB,GACL,OAAOA,EAAIvW,IAEf6X,WAAY,CAAE6S,SAAU,SAAUC,iBAAiB,IAGnD,sBAAO1S,OAAP,CACIrC,MAAM,SACNsC,UAAU,KACVtY,IAAI,KACJuY,MAAM,KACNC,OAAQ,SAAC0H,EAAevJ,GACpB,IAAMX,EAAQkK,EACd,OACI,uBAASlK,MAAOA,GACZ,uBAAG6D,KAAK,sBAAsB/D,QAAS,SAAC/X,GACpCA,EAAE0pB,iBACF,EAAKuD,cAAcrU,KACnBuJ,KAIhBtH,OAAQ,SAACC,EAAQC,GACb,OAAOD,EAAEzY,GAAG6qB,cAAcnS,EAAE1Y,OAGpC,sBAAOiY,OAAP,CACIrC,MAAM,OACNsC,UAAU,WACVtY,IAAI,WACJuY,MAAM,MACNC,OAAQ,SAACzI,GACL,OACI,uBAAG8J,KAAI,kBAAa9J,GAAYiM,OAAO,WAClCjM,IAIb6I,OAAQ,SAACC,EAAQC,GACb,OAAOD,EAAE9I,SAASkb,cAAcnS,EAAE/I,aAG1C,sBAAOsI,OAAP,CACIrC,MAAM,YACNsC,UAAU,iBACVtY,IAAI,iBACJuY,MAAM,MAENC,OAAQ,SAACxC,EAAeW,GACpB,IAAKX,IAAUW,EAAIoF,YACf,MAAO,MAEX,IAAMlC,EAAO,CAAC,aAAclD,EAAIoF,aAAarZ,KAAK,KAClD,OACI,uBAAGmX,KAAMA,EAAMmC,OAAO,SAASC,IAAI,uBAC9BjG,IAIb4C,OAAQ,SAACC,EAAQC,GACb,OAAKD,EAAEqD,eAMEpD,EAAEoD,eAGArD,EAAEqD,eAAe+O,cAAcnS,EAAEoD,gBAF7B,EANNpD,EAAEoD,gBAGC,EAFG,KAWvB,sBAAO7D,OAAP,CACIrC,MAAM,MACNsC,UAAU,WACVtY,IAAI,WACJuY,MAAM,MAENC,OAAQ,SAACxC,EAAeW,GACpB,IAAKX,EACD,MAAO,MAEX,IAAM6D,EAAO,kBAAoBlD,EAAIwF,MACrC,OACI,uBAASnG,MAAOA,GACZ,uBAAG6D,KAAMA,EAAMmC,OAAO,WACjBhG,KAKjB4C,OAAQ,SAACC,EAAQC,GACb,OAAKD,EAAEuD,SAMEtD,EAAEsD,SAGAvD,EAAEuD,SAAS6O,cAAcnS,EAAEsD,UAFvB,EANNtD,EAAEsD,UAGC,EAFG,KAWvB,sBAAO/D,OAAP,CACIrC,MAAM,YACNsC,UAAU,WACVtY,IAAI,WACJuY,MAAM,KACNC,OAAQ,SAACiD,EAAc9E,GACnB,OAAK8E,EAGE,kBAAC,mBAAD,CAAkBE,KAAM,IAAInY,KAAKiY,KAF7B,8CAIfyP,iBAAiB,UACjBtS,OAAQ,SAACC,EAAQC,GACb,OAAmB,OAAfD,EAAE6C,SACiB,OAAf5C,EAAE4C,SACK,GAEH,EAEW,OAAf5C,EAAE4C,SACK,EAEJ7C,EAAE6C,SAAW5C,EAAE4C,YAIlC,sBAAOrD,OAAP,CACIrC,MAAM,aACNsC,UAAU,gBACVtY,IAAI,gBACJuY,MAAM,KACNC,OAAQ,SAAC2S,EAAkBxU,GACvB,OAAQA,EAAItH,QACR,KAAKkE,EAAUgB,OACX,OAAO,kBAAC,kBAAD,CAAiB7Q,KAAMiT,EAAI+E,SAAU/M,UAAW,EAAGiN,UAAU,QAkBpF,sBAAOvD,OAAP,CACIrC,MAAM,UAENhW,IAAI,aACJuY,MAAM,MACNC,OAAQ,SAAC4S,EAAGzU,GACR,OAAQA,EAAItH,QACR,KAAKkE,EAAUgB,OACX,MAAO,IACX,KAAKhB,EAAUiB,QACX,OAAO,kBAAC,kBAAD,CAAiB9Q,KAAMiT,EAAIkF,MAAOlN,UAAW,EAAGiN,UAAU,IACrE,KAAKrI,EAAUmB,SACf,KAAKnB,EAAUkB,SACf,KAAKlB,EAAUoB,QACX,OAAO,kBAAC,kBAAD,CAAiBjR,KAAMiT,EAAIkF,MAAOlY,GAAIgT,EAAImF,SAAUnN,UAAW,QAiBtF,sBAAO0J,OAAP,CACIrC,MAAM,SACNsC,UAAU,SACVtY,IAAI,SACJuY,MAAM,KACNC,OAAQ,SAACnJ,GACL,OAAO,kBAAC,GAAD,CAAgB4F,UAAW5F,KAEtCuJ,OAAQ,SAACC,EAAQC,GACb,OAAID,EAAExJ,SAAWyJ,EAAEzJ,OACR,EAEPwJ,EAAExJ,SAAWkE,EAAUgB,QACf,EAERsE,EAAExJ,SAAWkE,EAAUiB,QACnBsE,EAAEzJ,SAAWkE,EAAUgB,OAChB,GAEH,EAERsE,EAAExJ,SAAWkE,EAAUmB,SACnBoE,EAAEzJ,SAAWkE,EAAUgB,QAAUuE,EAAEzJ,SAAWkE,EAAUiB,QACjD,GAEH,EAERqE,EAAExJ,SAAWkE,EAAUoB,SACnBmE,EAAEzJ,SAAWkE,EAAUkB,UACf,EAIT,KAGf,sBAAO4D,OAAP,CACIrC,MAAM,cACNsC,UAAU,eACVtY,IAAI,eACJuY,MAAM,KACNC,OAAQ,SAACkG,GACL,OAAOA,EAAahc,KAAK,MAE7BkW,OAAQ,SAACC,EAAQC,GAEb,OAAOD,EAAE6F,aAAahc,KAAK,KAAKuoB,cAAcnS,EAAE4F,aAAahc,KAAK,SAG1E,sBAAO2V,OAAP,CACIrC,MAAM,SACNsC,UAAU,SACVtY,IAAI,SACJuY,MAAM,KACNC,OAAQ,SAACnJ,EAAmBsH,GACxB,OAAO,EAAK0U,gBAAgB1U,S,+BAQ5C,OACI,yBAAK2U,8BAA4B,UAC7B,6BAAMnuB,KAAKouB,oBACX,6BACKpuB,KAAKquB,mBAETruB,KAAKsuB,uB,GA9pBgBtW,IAAMC,WAAvB2R,GAGVI,iBAAqC,W,IC1FlBuE,G,WAG1B,aAAe,yBAFfC,kBAEc,OADdC,gBACc,EACVzuB,KAAKwuB,aAAe,IAAI/mB,IACxBzH,KAAKyuB,YAAa,E,oDAIlB,OAAOlJ,KAAK9e,O,6BAGTioB,GACHA,EAAKD,YAAa,EAClBzuB,KAAKwuB,aAAa9lB,OAAOgmB,EAAKzrB,M,sCAGjB,IAAD,OACZjD,KAAKwuB,aAAa1lB,QAAQ,SAAC4lB,EAAM7rB,GAC7B,EAAK8rB,OAAOD,O,2BAIfA,GACD1uB,KAAKwuB,aAAa9lB,OAAOgmB,EAAKzrB,M,4BAG5BF,GAEF,OADA/C,KAAK4uB,gBACE5uB,KAAK6uB,QAAQ9rB,O,KCTrB,SAAS+R,KACZ,MAAO,CACHnB,KAAMJ,EAAWqB,wBAIlB,SAASI,GACZd,EACAC,EACAC,EACAC,GAEA,MAAO,CACHV,KAAMJ,EAAWwB,yBACjBV,mBACAH,UACAC,OACAC,iBAID,SAAS0a,GAAoB7sB,GAChC,MAAO,CACH0R,KAAMJ,EAAWwb,uBACjB9sB,S,IAyCF+sB,GAAwB,I,mLA3B2D,IAA3EtsB,EAA0E,EAA1EA,MAAOogB,EAAmE,EAAnEA,iBAAkBvc,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,GAK/ByoB,EAJS,IAAItO,GAAqB,CACpCle,IAAKqgB,EACLpgB,MAAOA,IAGNwsB,QAAQ,CACLtO,YAAa,CAACra,EAAMC,GACpBqa,SAAU,KAEb7f,KAAK,SAACmuB,GAIH,OAHkBA,EAAQC,WAAWle,IAAI,SAACme,GACtC,OAAOtO,GAAkBsO,EAAU,eAKzCX,EAA6B,CAC/BzrB,GAAIjD,KAAKsvB,QACTL,UACAR,YAAY,GAGhB,OADAzuB,KAAKwuB,aAAaxlB,IAAI0lB,EAAKzrB,GAAIyrB,GACxBA,M,GAxBeH,KA6NvB,SAASgB,GAAuBttB,GACnC,MAAO,CACH0R,KAAMJ,EAAWic,uBACjBvtB,SChNR,IAKewtB,GALczL,kBA/B7B,SAAyBvQ,EAAmBoE,GAA8B,IAE1DzF,EAIRqB,EAJAxB,KAAQG,kBAFyD,EAMjEqB,EAHAI,MACIgB,aAAgBd,EAJ6C,EAI7CA,YAAaI,EAJgC,EAIhCA,KAIrC,IAAK/B,EACD,MAAM,IAAIjQ,MAAM,mBAQpB,MAAO,CAAEgS,OAAMJ,cAAauY,wBADG,IAInC,SAA4B/H,EAA4BC,GACpD,MAAO,CACHmG,OAAQ,SAACtW,GACLkQ,EDsBL,SAAwBlQ,GAC3B,+CAAO,WAAOkQ,EAAmDmL,GAA1D,0CAAAhU,EAAA,wDACH6I,EAASzP,MADN,EAYC4a,IARQtd,EAJT,EAICH,KAAQG,kBAI0B0Q,EARnC,EAKCoB,IACIC,OACIC,SACIE,cAAiB7hB,IAM5B2P,EAdF,uBAeCmS,EACIuK,GAAoB,CAChB9sB,QAAS,iBACTD,KAAM,kBAlBf,+BA4BC2tB,IA5BD,IAyBC7b,MACIgB,aAAgBT,EA1BrB,EA0BqBA,cAAeF,EA1BpC,EA0BoCA,QAIjCyb,EAActb,EAAiB6C,MAAM0Y,MAAM,OAAO1e,IAAI,SAAC2e,GACzD,OAAO,IAAIC,OAAOD,EAAM,OA/BzB,EAkCoC1N,GAAiB9N,EAAiB+N,WAlCtE,oBAkCI2N,EAlCJ,KAkCoBC,EAlCpB,KAoCE5b,IAAiBC,EAAiBkW,YApCpC,wBAsCOmE,EAAOM,GAAsBiB,MAAM,CACrCvtB,MAAO0P,EAAkB1P,MACzBogB,mBACAvc,KAAMwpB,EACNvpB,GAAIwpB,IA1CT,UA6CiBtB,EAAKO,QA7CtB,WA6CC/a,EA7CD,QA8CKwa,EAAKD,WA9CV,mDAkDCra,GAAgB,IAAI/N,MAAOwD,UAC3BmlB,GAAsBjuB,KAAK2tB,GAG3Bta,GAAgB,IAAI/N,MAAOwD,UAtD5B,QA0DGqmB,EAAUhc,EAAQ/J,OAAO,SAACqP,GAC5B,OACImW,EAAYxhB,MAAM,SAAC0hB,GACf,OAAOA,EAAKM,KAAK3W,EAAIyF,WAAa4Q,EAAKM,KAAK3W,EAAIuF,iBAAmB8Q,EAAKM,KAAK3W,EAAIvW,OAQrFgf,GAAczI,EAAKnF,EAAiByD,aAI5CyM,EAASvP,GAAsBd,EAASgc,EAAS9b,EAAeC,IAzE7D,0CAAP,qDAAM,GCvBW+b,CAAe/b,KAE5B4W,UAAW,SAAClI,GACRwB,EDyNL,SAA2BxB,GAC9B,+CAAO,WAAOwB,EAAmDmL,GAA1D,oBAAAhU,EAAA,wDACH6I,EApBG,CACH5Q,KAAMJ,EAAW0B,yBAkBd,EAYCya,IARQtd,EAJT,EAICH,KAAQG,kBAIgCgR,EARzC,EAKCc,IACIC,OACIC,SACIC,oBAAuB5hB,IAMlC2P,EAdF,uBAeCmS,EACIgL,GAAuB,CACnBvtB,QAAS,mBACTD,KAAM,sBAlBf,0BAyBe,IAAI0M,6BAA0B,CAC5ChM,IAAK2gB,EACL1gB,MAAO0P,EAAkB1P,MACzBC,OAAQ,wBAGPsoB,UAAU,CAAEnK,OAAQiC,IACpB/hB,KAAK,WACFujB,EA9CL,CACH5Q,KAAMJ,EAAW2B,2BA8CTqP,EA1JZ,wCAAO,WAAOA,EAAmDmL,GAA1D,wCAAAhU,EAAA,wDACH6I,EAASzP,MADN,EAKC4a,IADQtd,EAJT,EAICH,KAAQG,kBAJT,uBAQCmS,EACIuK,GAAoB,CAChB9sB,QAAS,iBACTD,KAAM,kBAXf,+BA4BC2tB,IAPkC5M,EArBnC,EAkBCoB,IACIC,OACIC,SACIE,cAAiB7hB,IAKT4R,EA1BrB,EAyBCR,MACIgB,aAAgBR,iBA1BrB,uBA+BCya,GAAoB,CAChB9sB,QAAS,uBACTD,KAAM,uBAjCX,iCAsCG4tB,EAActb,EAAiB6C,MAAM0Y,MAAM,OAAO1e,IAAI,SAAC2e,GACzD,OAAO,IAAIC,OAAOD,EAAM,OAvCzB,EA0CoC1N,GAAiB9N,EAAiB+N,WA1CtE,oBA0CI2N,EA1CJ,KA0CoBC,EA1CpB,KA6CGtB,EAAOM,GAAsBiB,MAAM,CACrCvtB,MAAO0P,EAAkB1P,MACzBogB,mBACAvc,KAAMwpB,EACNvpB,GAAIwpB,IAjDL,UAoDmBtB,EAAKO,QApDxB,WAoDG/a,EApDH,QAqDCwa,EAAKD,WArDN,mDA0DHO,GAAsBjuB,KAAK2tB,GAErBwB,EAAUhc,EAAQ/J,OAAO,SAACqP,GAC5B,OACImW,EAAYxhB,MAAM,SAAC0hB,GACf,OAAOA,EAAKM,KAAK3W,EAAIyF,WAAa4Q,EAAKM,KAAK3W,EAAIuF,mBAQpDkD,GAAczI,EAAKnF,EAAiByD,aAI5CyM,EAASvP,GAAsBd,EAASgc,EAAS7pB,KAAKuD,MAAOyK,IA3E1D,0CAAP,qDAAM,MA4JGpP,MAAM,SAACC,GACJkD,QAAQnG,MAAM,sBAAuBiD,GACrCqf,EACIgL,GAAuB,CACnBvtB,QAAS,wBAA0BkD,EAAIlD,QACvCD,KAAM,uBAzCnB,yCAAP,qDAAM,GC1NWsuB,CAAkBtN,OAKViB,CAG3B4F,ICnCID,I,OAAuD,CACzD,CACIha,MAAO,SACPlP,MAAO,UAEX,CACIkP,MAAO,UACPlP,MAAO,WAEX,CACIkP,MAAO,WACPlP,MAAO,YAEX,CACIkP,MAAO,UACPlP,MAAO,WAEX,CACIkP,MAAO,QACPlP,MAAO,W,IAyGM6vB,G,YAOjB,WAAYzY,GAAqB,IAAD,8BAC5B,4CAAMA,KAPVgS,kBAMgC,IAFhCnF,YAEgC,EAG5B,EAAKmF,aAAe,GACpB,EAAKnF,OAAS,IAAIK,GAElB,EAAKtR,MAAQ,CACTqW,WAAW,EACXC,uBAAwB,CAAC,SAAU,UAAW,WAAY,UAAW,SACrE3H,UAAW,CAAEC,KAAM,SAAUC,OAAQgO,EAAOC,wBAC5CtG,cAAc,EACdC,YAAa,MAXW,E,iFAgB5BlqB,KAAKmqB,UAAS,K,2CAIVnqB,KAAK6X,MAAM9D,cAAgBC,EAAYQ,UACvCxU,KAAK0kB,OAAO0F,KAAK,YAAa,CAAEjD,IAAI,IAEpCnnB,KAAK0kB,OAAO0F,KAAK,YAAa,CAAEjD,IAAI,M,wCAI1B1mB,GAAgB,IAAD,OAEf,gBAAVA,EAQAT,KAAKqY,SACD,CACIyR,WAAW,EACX1H,UAAW,CAAEC,KAAM,SAAUC,OAAQ7hB,IAEzC,WACI,EAAK0pB,UAAS,KAbtBnqB,KAAKqY,SAAS,CACVyR,WAAW,EACX1H,UAAW,CAAEC,KAAM,UAAWK,MAAOrc,KAAKuD,MAAO+Y,IAAKtc,KAAKuD,W,oCAiBzDygB,GACVrqB,KAAK6pB,aAAeQ,EAAMxL,OAAOpe,Q,+BAG5B4pB,GACLA,EAAMC,iBACNtqB,KAAKmqB,UAAS,K,+BAGTI,GACL,GAAiC,qBAAtBvqB,KAAK6pB,aAAhB,CAIA,IAAMW,EArJd,SAA2CrgB,GACvC,IAAIsgB,EAAgC,GAoBpC,OAnBAtgB,EAAOrB,QAAQ,SAACoJ,GACZ,OAAQA,GACJ,IAAK,SACDuY,EAAYxhB,KAAKmN,EAAUgB,QAC3B,MACJ,IAAK,UACDqT,EAAYxhB,KAAKmN,EAAUiB,SAC3B,MACJ,IAAK,WACDoT,EAAYxhB,KAAKmN,EAAUkB,UAC3B,MACJ,IAAK,UACDmT,EAAYxhB,KAAKmN,EAAUmB,UAC3B,MACJ,IAAK,QACDkT,EAAYxhB,KAAKmN,EAAUoB,YAIhCiT,EAgIqBC,CAAkC1qB,KAAKyT,MAAMsW,wBAE/D1V,EAAyC,CAC3C6C,MAAOlX,KAAK6pB,aACZzH,UAAWpiB,KAAKyT,MAAM2O,UACtBtK,UAAW0S,EACXD,eAMJ,OAHAvqB,KAAK0kB,OAAO0F,KAAK,SAAU,IAE3BpqB,KAAK6X,MAAM8S,OAAOtW,IACX,K,wCAGOiK,EAAqBsM,GAGnC,GAAa,OAATtM,EAAJ,CAWA,IACI8D,EADAyI,EAAoB7qB,KAAKyT,MAAM2O,UAEnC,OAAQyI,EAAkBxI,MACtB,IAAK,SACDD,EAAY,CACRC,KAAM,UACNK,MAAOpE,EAAKwM,UACZnI,IAAKoI,KAET,MACJ,IAAK,UACD3I,EAAY,CACRC,KAAM,UACNK,MAAOpE,EAAKwM,UACZnI,IAAKkI,EAAkBlI,KAE3B,MACJ,QACI,OAGR3iB,KAAKqY,SAAS,CACV+J,mBAhCApiB,KAAKqY,SAAS,CACV+J,UAAW,CACPC,KAAM,SACNC,OAAQ,gB,sCAiCRhE,EAAqBsM,GAGjC,GAAa,OAATtM,EAAJ,CAUA,IACI8D,EADAyI,EAAoB7qB,KAAKyT,MAAM2O,UAEnC,OAAQyI,EAAkBxI,MACtB,IAAK,SACDD,EAAY,CACRC,KAAM,UACNK,MAAOqI,IACPpI,IAAKrE,EAAKwM,WAEd,MACJ,IAAK,UACD1I,EAAY,CACRC,KAAM,UACNK,MAAOmI,EAAkBnI,MACzBC,IAAKrE,EAAKwM,WAEd,MACJ,QACI,OAGR9qB,KAAKqY,SAAS,CACV+J,mBA/BApiB,KAAKqY,SAAS,CACV+J,UAAW,CACPC,KAAM,SACNC,OAAQ,gB,0CAgCH,IACb8I,EADY,OAEhB,GAAIprB,KAAKyT,MAAMqW,UAAW,CACtB,IAAM1H,EAAYpiB,KAAKyT,MAAM2O,UACN,YAAnBA,EAAUC,OACV+I,EACI,kBAAC,IAAMC,SAAP,KACI,sBAAMrN,KAAN,CAAWrO,MAAM,QACb,uBACI2b,UAAU,EACVC,YAAY,EACZ9qB,MAAO+qB,KAAOpJ,EAAUM,OACxByG,SAAUnpB,KAAKyrB,kBAAkB7N,KAAK5d,SAG9C,sBAAMge,KAAN,CAAWrO,MAAM,MACb,uBACI2b,UAAU,EACVC,YAAY,EACZ9qB,MAAO+qB,KAAOpJ,EAAUO,KACxBwG,SAAUnpB,KAAK0rB,gBAAgB9N,KAAK5d,WAO5D,OACI,uBAAM2rB,OAAO,SAASC,SAAU5rB,KAAK4rB,SAAShO,KAAK5d,OAC/C,sBAAMge,KAAN,KACI,uBACI6N,aAAc7rB,KAAK6pB,aACnBiC,YAAY,cACZhS,MAAO,CAAEsB,MAAO,QAChB+N,SAAUnpB,KAAK+rB,cAAcnO,KAAK5d,SAI1C,sBAAMge,KAAN,CAAWrO,MAAM,cACjB,sBAAMqO,KAAN,KACI,uBACI6N,aAAcyE,EAAOC,uBACrBpH,SAAUnpB,KAAKgsB,kBAAkBpO,KAAK5d,MACtCisB,0BAA0B,EAC1BnS,MAAO,CAAEsB,MAAO,SAEhB,sBAAQ8Q,OAAR,CAAezrB,MAAM,YAArB,iBACA,sBAAQyrB,OAAR,CAAezrB,MAAM,eAArB,qBACA,sBAAQyrB,OAAR,CAAezrB,MAAM,YAArB,iBACA,sBAAQyrB,OAAR,CAAezrB,MAAM,aAArB,kBACA,sBAAQyrB,OAAR,CAAezrB,MAAM,eAArB,kBAGP2qB,EAED,sBAAMpN,KAAN,KACI,uBAAQP,KAAK,SAAS9J,KAAK,UAAUwY,SAAS,YAGlD,sBAAMnO,KAAN,KACI,uBAAQiL,gBAAgB,eAAeC,kBAAkB,eAAeC,SAAUnpB,KAAKosB,mBAAmBxO,KAAK5d,SAGnH,sBAAMge,KAAN,KACI,kBAAC,GAAD,CACIiJ,OAAQ,WACJ,EAAKkD,UAAS,IAElBzF,OAAQ1kB,KAAK0kB,OACb2H,gBAAiBrsB,KAAK6X,MAAM9D,cAAgBC,EAAYQ,UACxDgU,cAAc,EACdG,aAAc3oB,KAAK6X,MAAMyU,uBACzBhE,WAAW,Q,yCAOZ2B,GACfjqB,KAAKqY,SAAS,CAAE4R,mB,qCAILsC,GAAoC,IAAD,OACxCpiB,EAASoiB,EACfvsB,KAAKqY,SACD,CACI0R,uBAAwB5f,GAE5B,WACI,EAAKggB,UAAS,O,2CAKLE,GAA6B,IAAD,OACzCA,EAAMxL,OAAO2N,SACbxsB,KAAKqY,SACD,CACI0R,uBAAwB,CAAC,SAAU,UAAW,WAAY,UAAW,UAEzE,WACI,EAAKI,UAAS,O,mCAMhB,IAAD,OACTnqB,KAAKqY,SACD,CACI0R,uBAAwB,CAAC,SAAU,UAAW,WAAY,UAAW,UAEzE,WACI,EAAKI,UAAS,O,wCAKP,IAAD,OACdnqB,KAAKqY,SACD,CACI0R,uBAAwB,CAAC,WAAY,UAAW,UAEpD,WACI,EAAKI,UAAS,O,sCAKT,IAAD,OACZnqB,KAAKqY,SACD,CACI0R,uBAAwB,CAAC,SAAU,YAEvC,WACI,EAAKI,UAAS,O,0CAMtB,IAAMna,EAAU2Z,GAChB,OACI,yBAAKjR,UAAU,qBACX,0BAAMoB,MAAO,CAAE/B,MAAO,OAAQ0U,WAAY,OAAQC,YAAa,SAA/D,wBACA,uBAAQliB,KAAK,QAAQmJ,KAAK,OAAOgF,QAAS3Y,KAAK2sB,WAAW/O,KAAK5d,MAAOwwB,2BAAyB,OAC3F,mCACM,IACV,uBAAQhmB,KAAK,QAAQmJ,KAAK,OAAOgF,QAAS3Y,KAAK4sB,cAAchP,KAAK5d,MAAOwwB,2BAAyB,UAC9F,sCACM,IACV,uBACIhmB,KAAK,QAAQmJ,KAAK,OAClBgF,QAAS3Y,KAAK6sB,gBAAgBjP,KAAK5d,MACnC8Z,MAAO,CAAE4S,YAAa,QACtB8D,2BAAyB,YAEzB,wCAEJ,sBAAU1D,MAAV,CACI9c,QAASA,EACTmZ,SAAUnpB,KAAK+sB,eAAenP,KAAK5d,MACnCS,MAAOT,KAAKyT,MAAMsW,4B,yCAO9B,IAIIiD,EAJAC,EAAsC,CAAEC,OAAQ,oBAUpD,OATKltB,KAAKyT,MAAMwW,eACZgD,EAAela,QAAU,QAGzB/S,KAAKyT,MAAMwW,eACX+C,EAAY,yBAAKtU,UAAU,MAAMoB,MAAOmT,GACnCjtB,KAAKmtB,sBAIV,yBAAKzU,UAAU,OACX,yBAAKA,UAAU,OAAO1Y,KAAKotB,qBAC1BJ,K,kCAKDxT,GACRxZ,KAAK6X,MAAMoT,UAAUzR,EAAIvW,M,sCAGbuW,GAAW,IAAD,OACtB,OAAQA,EAAItH,QACR,KAAKkE,EAAUgB,OACf,KAAKhB,EAAUiB,QACX,OACI,uBACIwB,MAAM,mBACNmS,UAAW,WACP,EAAKyF,YAAYjX,IAErB0R,OAAO,MACPC,WAAW,MAEX,uBACI1N,KAAK,QACL9J,KAAK,SAIL6c,2BAAyB,YAIzC,QACI,U,oCAIEhX,GACVxZ,KAAKqY,SAAS,CACV6R,YAAa1Q,M,qCAKjBxZ,KAAKqY,SAAS,CACV6R,YAAa,S,wCAIF,IAAD,OACRwD,EAAU1tB,KAAK6X,MAAM9D,cAAgBC,EAAYQ,UACvD,OACI,uBACIhK,KAAK,QACLkO,UAAU,eACViC,WAAY3a,KAAK6X,MAAM1D,KACvBuZ,QAASA,EACT9S,OAAQ,SAACpB,GACL,OAAOA,EAAIvW,IAEf6X,WAAY,CAAE6S,SAAU,SAAUC,iBAAiB,IAGnD,sBAAO1S,OAAP,CACIrC,MAAM,SACNsC,UAAU,KACVtY,IAAI,KACJuY,MAAM,KACNC,OAAQ,SAAC0H,EAAevJ,GACpB,IAAMX,EAAQkK,EACd,OACI,uBAASlK,MAAOA,GACZ,uBAAG6D,KAAK,sBAAsB/D,QAAS,SAAC/X,GACpCA,EAAE0pB,iBACF,EAAKuD,cAAcrU,KACnBuJ,KAIhBtH,OAAQ,SAACC,EAAQC,GACb,OAAOD,EAAEzY,GAAG6qB,cAAcnS,EAAE1Y,OAGpC,sBAAOiY,OAAP,CACIrC,MAAM,YACNsC,UAAU,iBACVtY,IAAI,iBACJuY,MAAM,MACNC,OAAQ,SAACxC,EAAeW,GACpB,OAAKX,GAAUW,EAAIoF,YAIf,uBAAS/F,MAAOA,GACZ,uBACI6D,KAAI,qBAAgBlD,EAAIoF,aACxBC,OAAO,SACPC,IAAI,uBAEHjG,IATF,OAcf4C,OAAQ,SAACC,EAAQC,GACb,OAAOD,EAAEqD,eAAe+O,cAAcnS,EAAEoD,mBAGhD,sBAAO7D,OAAP,CACIrC,MAAM,MACNsC,UAAU,WACVtY,IAAI,WACJuY,MAAM,MACNC,OAAQ,SAACxC,EAAeW,GACpB,IAAKX,EACD,MAAO,MAEX,IAAM6D,EAAO,kBAAoBlD,EAAIwF,MACrC,OACI,uBAASnG,MAAOA,GACZ,uBAAG6D,KAAMA,GAAO7D,KAI5B4C,OAAQ,SAACC,EAAQC,GACb,OAAOD,EAAEuD,SAAS6O,cAAcnS,EAAEsD,aAG1C,sBAAO/D,OAAP,CACIrC,MAAM,YACNsC,UAAU,WACVtY,IAAI,WACJuY,MAAM,MACNC,OAAQ,SAACiD,EAAc9E,GACnB,OAAK8E,EAGE,kBAAC,mBAAD,CAAkBE,KAAM,IAAInY,KAAKiY,KAF7B,8CAIfyP,iBAAiB,UACjBtS,OAAQ,SAACC,EAAQC,GACb,OAAmB,OAAfD,EAAE6C,SACiB,OAAf5C,EAAE4C,SACK,GAEH,EAEW,OAAf5C,EAAE4C,SACK,EAEJ7C,EAAE6C,SAAW5C,EAAE4C,YAIlC,sBAAOrD,OAAP,CACIrC,MAAM,aACNsC,UAAU,gBACVtY,IAAI,gBACJuY,MAAM,MACNC,OAAQ,SAAC4S,EAAGzU,GACR,OAAQA,EAAItH,QACR,KAAKkE,EAAUgB,OACX,OAAO,kBAAC,kBAAD,CAAiB7Q,KAAMiT,EAAI+E,SAAU/M,UAAW,EAAGiN,UAAU,IACxE,QACI,OAAO,kBAAC,kBAAD,CAAiBlY,KAAMiT,EAAI+E,SAAU/X,GAAIgT,EAAIkF,MAAOlN,UAAW,QAkBtF,sBAAO0J,OAAP,CACIrC,MAAM,UAENhW,IAAI,aACJuY,MAAM,MACNC,OAAQ,SAAC4S,EAAGzU,GACR,OAAQA,EAAItH,QACR,KAAKkE,EAAUgB,OACX,MAAO,IACX,KAAKhB,EAAUiB,QACX,OAAO,kBAAC,kBAAD,CAAiB9Q,KAAMiT,EAAIkF,MAAOlN,UAAW,EAAGiN,UAAU,IACrE,KAAKrI,EAAUmB,SACf,KAAKnB,EAAUkB,SACf,KAAKlB,EAAUoB,QACX,OAAO,kBAAC,kBAAD,CAAiBjR,KAAMiT,EAAIkF,MAAOlY,GAAIgT,EAAImF,SAAUnN,UAAW,QAiBtF,sBAAO0J,OAAP,CACIrC,MAAM,SACNsC,UAAU,SACVtY,IAAI,SACJuY,MAAM,MACNC,OAAQ,SAACnJ,GACL,OAAO,kBAAC,GAAD,CAAgB4F,UAAW5F,KAEtCuJ,OAAQ,SAACC,EAAQC,GACb,OAAID,EAAExJ,SAAWyJ,EAAEzJ,OACR,EAEPwJ,EAAExJ,SAAWkE,EAAUgB,QACf,EAERsE,EAAExJ,SAAWkE,EAAUiB,QACnBsE,EAAEzJ,SAAWkE,EAAUgB,OAChB,GAEH,EAERsE,EAAExJ,SAAWkE,EAAUmB,SACnBoE,EAAEzJ,SAAWkE,EAAUgB,QAAUuE,EAAEzJ,SAAWkE,EAAUiB,QACjD,GAEH,EAERqE,EAAExJ,SAAWkE,EAAUoB,SACnBmE,EAAEzJ,SAAWkE,EAAUkB,UACf,EAIT,KAGf,sBAAO4D,OAAP,CACIrC,MAAM,cACNsC,UAAU,eACVtY,IAAI,eACJuY,MAAM,MACNC,OAAQ,SAACkG,GACL,OAAOA,EAAahc,KAAK,MAE7BkW,OAAQ,SAACC,EAAQC,GAEb,OAAOD,EAAE6F,aAAahc,KAAK,KAAKuoB,cAAcnS,EAAE4F,aAAahc,KAAK,SAG1E,sBAAO2V,OAAP,CACIrC,MAAM,SACNsC,UAAU,SACVtY,IAAI,SACJuY,MAAM,KACNC,OAAQ,SAACnJ,EAAmBsH,GACxB,OAAO,EAAK0U,gBAAgB1U,S,wCAQ5C,GAAKxZ,KAAKyT,MAAMyW,YAAhB,CAGA,IAAMmD,EACF,uBAAQxqB,IAAI,SAAS8V,QAAS3Y,KAAKstB,aAAa1P,KAAK5d,OAArD,SAIE6Y,EACF,gDACmB,0BAAMiB,MAAO,CAAEyT,WAAY,cAA3B,IAA4CvtB,KAAKyT,MAAMyW,YAAYjnB,IACjF,IACD,kBAAC,GAAD,CAAgB6U,UAAW9X,KAAKyT,MAAMyW,YAAYhY,UAG1D,OACI,uBAAOwG,UAAU,kBAAkBG,MAAOA,EACtC2U,SAAUxtB,KAAKstB,aAAa1P,KAAK5d,MAAOytB,SAAS,EACjDJ,OAAQA,GACR,kBAAC,GAAD,CAAWtK,MAAO/iB,KAAKyT,MAAMyW,YAAYjnB,S,+BAMjD,OACI,yBAAKkrB,8BAA4B,UAC7B,6BAAMnuB,KAAKouB,oBACX,6BACKpuB,KAAKquB,mBAETruB,KAAKsuB,uB,GA/oBctW,IAAMC,WC/InC,SAASxD,KACZ,MAAO,CACHd,KAAMJ,EAAWgB,sBAIlB,SAASD,GACZJ,EACAC,EACAC,EACAC,GAEA,MAAO,CACHV,KAAMJ,EAAWK,uBACjBS,mBACAH,UACAC,OACAC,iBAID,SAASsc,GAAkBzuB,GAC9B,MAAO,CACH0R,KAAMJ,EAAWod,qBACjB1uB,SDuHaquB,GAGVC,uBAA2C,W,IC/EhDK,GAAuB,I,mLA5BkE,IAAjFluB,EAAgF,EAAhFA,MAAOkQ,EAAyE,EAAzEA,SAAUkQ,EAA+D,EAA/DA,iBAAkBvc,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,GAKzCyoB,EAJS,IAAItO,GAAqB,CACpCle,IAAKqgB,EACLpgB,MAAOA,IAGNwsB,QAAQ,CACLtO,YAAa,CAACra,EAAMC,GACpBqa,SAAU,CAACjO,KAEd5R,KAAK,SAACmuB,GAIH,OAHkBA,EAAQC,WAAWle,IAAI,SAACme,GACtC,OAAOtO,GAAkBsO,EAAUzc,OAKzC8b,EAA2B,CAC7BzrB,GAAIjD,KAAKsvB,QACTL,UACAR,YAAY,GAGhB,OADAzuB,KAAKwuB,aAAaxlB,IAAI0lB,EAAKzrB,GAAIyrB,GACxBA,M,GAxBcH,KAyGtB,SAASsC,KACZ,+CAAO,WAAOtM,EAAmDmL,GAA1D,wCAAAhU,EAAA,wDACH6I,EAAS9P,MADN,EAKCib,IADQtd,EAJT,EAICH,KAAQG,kBAJT,uBAQCmS,EACImM,GAAkB,CACd1uB,QAAS,iBACTD,KAAM,kBAXf,+BA4BC2tB,IAPkC5M,EArBnC,EAkBCoB,IACIC,OACIC,SACIE,cAAiB7hB,IAKX4R,EA1BnB,EAyBCR,MACIC,WAAcO,iBA1BnB,uBA+BCqc,GAAkB,CACd1uB,QAAS,uBACTD,KAAM,uBAjCX,mCAsCoCogB,GAAiB9N,EAAiB+N,WAtCtE,oBAsCI2N,EAtCJ,KAsCoBC,EAtCpB,KAwCGL,EAActb,EAAiB6C,MAAM0Y,MAAM,OAAO1e,IAAI,SAAC2e,GACzD,OAAO,IAAIC,OAAOD,EAAM,OAGtBnB,EAAOkC,GAAqBX,MAAM,CACpCvtB,MAAO0P,EAAkB1P,MACzBkQ,SAAUR,EAAkBQ,SAC5BkQ,mBACAvc,KAAMwpB,EACNvpB,GAAIwpB,IAjDL,UAoDmBtB,EAAKO,QApDxB,WAoDG/a,EApDH,QAqDCwa,EAAKD,WArDN,mDA0DHmC,GAAqB7vB,KAAK2tB,GAUpBwB,EAAUhc,EAAQ/J,OAAO,SAACqP,GAC5B,OACImW,EAAYxhB,MAAM,SAAC0hB,GACf,OAAOA,EAAKM,KAAK3W,EAAIyF,WAAa4Q,EAAKM,KAAK3W,EAAIuF,mBAQpDkD,GAAczI,EAAKnF,EAAiByD,aAI5CyM,EAASjQ,GAAoBJ,EAASgc,EAAS7pB,KAAKuD,MAAOyK,IAnFxD,0CAAP,qDAAM,GAyHH,SAASyc,GAAqB7uB,GACjC,MAAO,CACH0R,KAAMJ,EAAWwd,qBACjB9uB,SCrPO+hB,yBApCf,SAAyBvQ,EAAmBoE,GAA8B,IAE1DzF,EAIRqB,EAJAxB,KAAQG,kBAFyD,EAMjEqB,EAHAI,MACIC,WAAcC,EAJ+C,EAI/CA,YAAaI,EAJkC,EAIlCA,KAInC,IAAK/B,EACD,MAAM,IAAIjQ,MAAM,mBAUpB,MAAO,CAAEgS,OAAMJ,cAAauY,wBAFG,IAKnC,SAA4B/H,EAA4BC,GACpD,MAAO,CACHmG,OAAQ,SAACtW,GACLkQ,EDyDL,SAAsBlQ,GACzB,+CAAO,WAAOkQ,EAAmDmL,GAA1D,0CAAAhU,EAAA,wDACH6I,EAAS9P,MADN,EAKCib,IADQtd,EAJT,EAICH,KAAQG,kBAJT,uBAQCmS,EACImM,GAAkB,CACd1uB,QAAS,iBACTD,KAAM,kBAXf,+BA4BC2tB,IAPkC5M,EArBnC,EAkBCoB,IACIC,OACIC,SACIE,cAAiB7hB,IArB9B,IAyBCoR,MACIC,WAAcM,EA1BnB,EA0BmBA,cAAeF,EA1BlC,EA0BkCA,QAI/Byb,EAActb,EAAiB6C,MAAM0Y,MAAM,OAAO1e,IAAI,SAAC2e,GACzD,OAAO,IAAIC,OAAOD,EAAM,OA/BzB,EAkCoC1N,GAAiB9N,EAAiB+N,WAlCtE,oBAkCI2N,EAlCJ,KAkCoBC,EAlCpB,KAsCE5b,IAAiBC,EAAiBkW,YAtCpC,wBAuCOmE,EAAOkC,GAAqBX,MAAM,CACpCvtB,MAAO0P,EAAkB1P,MACzBkQ,SAAUR,EAAkBQ,SAC5BkQ,mBACAvc,KAAMwpB,EACNvpB,GAAIwpB,IA5CT,UA+CiBtB,EAAKO,QA/CtB,WA+CC/a,EA/CD,QAgDKwa,EAAKD,WAhDV,mDAoDCra,GAAgB,IAAI/N,MAAOwD,UAC3B+mB,GAAqB7vB,KAAK2tB,GArD3B,QAyDGwB,EAAUhc,EAAQ/J,OAAO,SAACqP,GAC5B,OACImW,EAAYxhB,MAAM,SAAC0hB,GACf,OAAOA,EAAKM,KAAK3W,EAAIyF,WAAa4Q,EAAKM,KAAK3W,EAAIuF,mBAGpDkD,GAAczI,EAAKnF,EAAiByD,aAI5CyM,EAASjQ,GAAoBJ,EAASgc,EAAS9b,EAAeC,IAnE3D,0CAAP,qDAAM,GC1DW2c,CAAa3c,KAE1B4W,UAAW,SAAClI,GACRwB,EDiQL,SAAyBxB,GAC5B,+CAAO,WAAOwB,EAAmDmL,GAA1D,oBAAAhU,EAAA,wDACH6I,EApBG,CACH5Q,KAAMJ,EAAW0d,uBAkBd,EAYCvB,IARQtd,EAJT,EAICH,KAAQG,kBAIgCgR,EARzC,EAKCc,IACIC,OACIC,SACIC,oBAAuB5hB,IAMlC2P,EAdF,uBAeCmS,EACIuM,GAAqB,CACjB9uB,QAAS,mBACTD,KAAM,sBAlBf,0BAyBe,IAAI0M,6BAA0B,CAC5ChM,IAAK2gB,EACL1gB,MAAO0P,EAAkB1P,MACzBC,OAAQ,wBAGPsoB,UAAU,CAAEnK,OAAQiC,IACpB/hB,KAAK,WACFujB,EA9CL,CACH5Q,KAAMJ,EAAWmB,yBA8CT6P,EAASsM,QAEZ5rB,MAAM,SAACC,GACJkD,QAAQnG,MAAM,sBAAuBiD,GACrCqf,EACIuM,GAAqB,CACjB9uB,QAAS,wBAA0BkD,EAAIlD,QACvCD,KAAM,uBAzCnB,yCAAP,qDAAM,GClQWmvB,CAAgBnO,KAE7BoO,cAAe,WACX5M,EAASsM,SAKN7M,CAGbsM,IC5CmBc,G,YAEjB,WAAYvZ,GAA6B,IAAD,8BACpC,4CAAMA,KAFVgS,kBACwC,EAEpC,EAAKA,aAAe,GAFgB,E,iFAKpC7pB,KAAK6X,MAAMwZ,SAAS,CAChBna,MAAOlX,KAAK6pB,iB,qCAGLQ,GACXA,EAAMC,iBACNtqB,KAAK6X,MAAMwZ,SAAS,CAChBna,MAAOlX,KAAK6pB,iB,oCAGNQ,GACVrqB,KAAK6pB,aAAeQ,EAAMxL,OAAOpe,Q,yCAGjC,OACI,uBAAMkrB,OAAO,SAASC,SAAU5rB,KAAKsxB,eAAe1T,KAAK5d,OACrD,sBAAMge,KAAN,KACI,uBACI6N,aAAc7rB,KAAK6pB,aACnBiC,YAAY,yCACZhS,MAAO,CAAEsB,MAAO,QAChB+N,SAAUnpB,KAAK+rB,cAAcnO,KAAK5d,SAG1C,sBAAMge,KAAN,KACI,uBAAQP,KAAK,SAAS9J,KAAK,UAAUwY,SAAS,e,oCAKhDrR,EAA8ByR,EAAc9Q,M,4CAEtD,OACI,6BACI,6BAAMzb,KAAKouB,oBACX,6BACI,uBACIzT,WAAY3a,KAAK6X,MAAM3B,SACvBwX,QAAS1tB,KAAK6X,MAAM9D,cAAgBC,EAAYQ,UAChDoG,OAAQ,SAAC2W,GACL,OAAOA,EAAKC,OAEhB1W,WAAY,CAAE6S,SAAU,SAAUC,iBAAiB,GACnDpjB,KAAK,QACLkO,UAAU,eACVyQ,SAAUnpB,KAAKyxB,eAEf,sBAAOvW,OAAP,CACIrC,MAAM,SACNsC,UAAU,WACVtY,IAAI,WACJuY,MAAM,MACNC,OAAQ,SAACpO,EAAkBskB,GACvB,OACI,uBAAS1Y,MAAO0Y,EAAKG,aACjB,uBAAGhV,KAAI,0BAAqBzP,IAAaskB,EAAKG,eAI1DjW,OAAQ,SAACC,EAAYC,GACjB,OAAOD,EAAEgW,YAAY5D,cAAcnS,EAAE+V,cAEzC3D,iBAAiB,WAErB,sBAAO7S,OAAP,CACIrC,MAAM,WACNsC,UAAU,aACVtY,IAAI,aACJuY,MAAM,MACNC,OAAQ,SAACsW,EAAoBJ,GACzB,OACI,uBAAS1Y,MAAO0Y,EAAKK,eACjB,uBAAGlV,KAAI,wBAAmB6U,EAAKtkB,SAAxB,YAAoCskB,EAAKI,aAC3CJ,EAAKK,iBAKtBnW,OAAQ,SAACC,EAAYC,GACjB,OAAOD,EAAEkW,cAAc9D,cAAcnS,EAAEiW,kBAG/C,sBAAO1W,OAAP,CACIrC,MAAM,OACNsC,UAAU,WACVtY,IAAI,WACJuY,MAAM,KACNyW,MAAM,QACNxW,OAAQ,SAACyW,GACL,OACI,yBAAKpZ,UAAU,iBACV,IAAIjI,KAAK8K,aAAa,QAAS,CAC5BC,aAAa,IACd9L,OAAOoiB,KAItBrW,OAAQ,SAACC,EAAYC,GACjB,OAAOD,EAAEoW,SAAWnW,EAAEmW,YAG9B,sBAAO5W,OAAP,CACIrC,MAAM,SACNsC,UAAU,aACVtY,IAAI,aACJuY,MAAM,KACNyW,MAAM,QACNxW,OAAQ,SAAC0W,GACL,OACI,yBAAKrZ,UAAU,iBACV,IAAIjI,KAAK8K,aAAa,QAAS,CAC5BC,aAAa,IACd9L,OAAOqiB,KAItBtW,OAAQ,SAACC,EAAYC,GACjB,OAAOD,EAAEqW,WAAapW,EAAEoW,cAGhC,sBAAO7W,OAAP,CACIrC,MAAM,eACNsC,UAAU,cACVtY,IAAI,cACJuY,MAAM,MACNC,OAAQ,SAAC2W,GACL,OACI,wBACI3I,QAAuB,IAAd2I,EACTtiB,OAAQ,SAAC2Z,GACL,OAAO,IAAI5Y,KAAK8K,aAAa,QAAS,CAClCzB,MAAO,YACRpK,OAAOsiB,OAK1BvW,OAAQ,SAACC,EAAYC,GACjB,OAAOD,EAAEsW,YAAcrW,EAAEqW,eAGjC,sBAAO9W,OAAP,CACIrC,MAAM,eACNsC,UAAU,iBACVtY,IAAI,iBACJuY,MAAM,MACNC,OAAQ,SAAC4W,GACL,OAAO,kBAAC,mBAAD,CAAkBzgB,UAAW,EAAGwc,SAA2B,IAAjBiE,KAErDxW,OAAQ,SAACC,EAAYC,GACjB,OAAOD,EAAEuW,eAAiBtW,EAAEsW,kBAGpC,sBAAO/W,OAAP,CACIrC,MAAM,iBACNsC,UAAU,mBACVtY,IAAI,mBACJuY,MAAM,MACNC,OAAQ,SAAC6W,GACL,OAAO,kBAAC,mBAAD,CAAkB1gB,UAAW,EAAGwc,SAA6B,IAAnBkE,KAErDzW,OAAQ,SAACC,EAAYC,GACjB,OAAOD,EAAEwW,iBAAmBvW,EAAEuW,oBAGtC,sBAAOhX,OAAP,CACIrC,MAAM,iBACNsC,UAAU,eACVtY,IAAI,eACJuY,MAAM,MACNC,OAAQ,SAAC8W,GACL,OAAO,kBAAC,mBAAD,CAAkB3gB,UAAW,EAAGwc,SAAyB,IAAfmE,KAErD1W,OAAQ,SAACC,EAAYC,GACjB,OAAOD,EAAEyW,aAAexW,EAAEwW,qB,+BASlD,OAAO,6BAAMnyB,KAAKoyB,2B,GA9LkBpa,IAAMC,WCRlD,SAASoa,GAAYC,EAAeC,GAChC,OAAID,EACIC,EACOD,EAAQC,EAER,KAGPA,EACO,EAEA,KAgDnB,SAASC,GAAYvwB,GACjB,MAAO,CACH0R,KAAMJ,EAAWkf,8BACjBxwB,SCjCO+hB,yBApBf,SAAyBvQ,EAAmBoE,GAA8B,IAAD,EAKjEpE,EAHAI,MACIkC,mBAAsBG,EAHuC,EAGvCA,SAG9B,MAAO,CACHnC,YAPiE,EAG7BA,YAKpCmC,aAIR,SAA4BqO,EAA4BC,GACpD,MAAO,CACH6M,SAAU,SAACna,GACPqN,EDiDL,SAAgBrN,GACnB,+CAAO,WAAOqN,EAAmDmL,GAA1D,8BAAAhU,EAAA,wDACH6I,EArBG,CACH5Q,KAAMJ,EAAWuC,gCAmBd,EAYC4Z,IARQtd,EAJT,EAICH,KAAQG,kBAIoBsgB,EAR7B,EAKCxO,IACIC,OACIC,SACIuO,QAAWlwB,IAMtB2P,EAdF,uBAeCmS,EACIiO,GAAY,CACRxwB,QAAS,iBACTD,KAAM,kBAlBf,6BAwBEqQ,EAxBF,uBAyBCmS,EACIiO,GAAY,CACRxwB,QAAS,iBACTD,KAAM,kBA5Bf,iCAkCG6wB,EAAgB,IAAIjkB,iBAAc,CACpChM,OAAQ,UACRD,MAAO0P,EAAkB1P,MACzBD,IAAKiwB,IArCN,UAuCoBE,EAAcC,iBAAiB,IAvCnD,QAuCGC,EAvCH,OAwCGC,EAAQD,EAAS5hB,IAAI,SAACqgB,GAAU,IAAD,EACFA,EAAKyB,YAAYpD,MAAM,KADrB,oBAC1B3iB,EAD0B,KAChB0kB,EADgB,KAE5B1kB,GAAa0kB,GACdvpB,QAAQI,KAAK,WAAY+oB,GAE7B,IAvGM0B,EAAcC,EAuGdlB,GAvGAiB,EAuGuB1B,EAAK4B,gBAAkB5B,EAAK6B,iBAvGrCF,EAuGuD3B,EAAK4B,gBAtGpFF,EACIC,EACOD,EAAOC,EAEP,KAGPA,EACO,EAEA,MA6FDjB,EAAiBI,GAAYd,EAAK8B,gBAAiB9B,EAAK4B,iBACxDjB,EAAmBG,GAAYd,EAAK+B,iBAAkB/B,EAAK4B,iBACjE,MAAO,CACH3B,MAAOD,EAAKyB,YACZ/lB,WACA0kB,WAAYA,GAAc,GAC1BD,YAAazkB,EACb2kB,cAAeD,GAAc,GAC7BG,SAAUP,EAAK4B,gBACfpB,WAAYR,EAAK6B,iBACjBpB,cACAC,iBACAC,mBACAC,aAAcZ,EAAK+B,oBAIrBC,EAAarc,EAAMA,MAAM0Y,MAAM,OAAO1e,IAAI,SAAC2e,GAC7C,OAAO,IAAIC,OAAOD,EAAM,OAEtB2D,EAAWT,EAAM5oB,OAAO,SAAConB,GAC3B,OAAOgC,EAAWplB,MAAM,SAAC0hB,GACrB,OACIA,EAAKM,KAAKoB,EAAKG,cACf7B,EAAKM,KAAKoB,EAAKtkB,WACf4iB,EAAKM,KAAKoB,EAAKK,gBACf/B,EAAKM,KAAKoB,EAAKI,gBAK3BpN,GArFerO,EAqFQsd,EApFpB,CACH7f,KAAMJ,EAAW0C,gCACjBC,cAKG,kCARX,IAAuBA,GAQZ,MAAP,qDAAM,GClDWyU,CAAOzT,OAKb8M,CAGb/L,IC3BmBwb,G,YAEjB,WAAY5b,GAA6B,IAAD,8BACpC,4CAAMA,KAFVgS,kBACwC,EAEpC,EAAKA,aAAe,CAChB3S,MAAO,IAHyB,E,iFAOpClX,KAAK6X,MAAM8S,OAAO3qB,KAAK6pB,gB,qCAEZQ,GACXA,EAAMC,iBACNtqB,KAAK6X,MAAM8S,OAAO3qB,KAAK6pB,gB,oCAEbQ,GACVrqB,KAAK6pB,aAAa3S,MAAQmT,EAAMxL,OAAOpe,Q,yCAGvC,OACI,uBAAMkrB,OAAO,SAASC,SAAU5rB,KAAKsxB,eAAe1T,KAAK5d,OACrD,sBAAMge,KAAN,KACI,uBACI6N,aAAc7rB,KAAK6pB,aAAa3S,MAChC4U,YAAY,+BACZhS,MAAO,CAAEsB,MAAO,QAChB+N,SAAUnpB,KAAK+rB,cAAcnO,KAAK5d,SAG1C,sBAAMge,KAAN,KACI,uBAAQP,KAAK,SAAS9J,KAAK,UAAUwY,SAAS,e,oCAM1D,OACI,uBACIxR,WAAY3a,KAAK6X,MAAMrB,eACvBkX,QAAS1tB,KAAK6X,MAAM9D,cAAgBC,EAAYQ,UAChDoG,OAAQ,SAAC2W,GACL,OAAOA,EAAK3e,SAAW,IAAM2e,EAAKC,OAEtC1W,WAAY,CAAE6S,SAAU,SAAUC,iBAAiB,GACnDpjB,KAAK,QACLkO,UAAU,gBAEV,sBAAOwC,OAAP,CACIrC,MAAM,OACNsC,UAAU,WACVtY,IAAI,WACJuY,MAAM,MACNC,OAAQ,SAACzI,EAAkB2e,GACvB,OACI,uBAAS1Y,MAAOjG,GACZ,uBAAG8J,KAAI,kBAAa9J,GAAYiM,OAAO,WAClCjM,KAKjB6I,OAAQ,SAACC,EAAuBC,GAC5B,OAAOD,EAAE9I,SAASkb,cAAcnS,EAAE/I,aAG1C,sBAAOsI,OAAP,CACIrC,MAAM,SACNsC,UAAU,WACVtY,IAAI,WACJuY,MAAM,MACNC,OAAQ,SAACpO,GACL,OACI,uBAAS4L,MAAO5L,GACZ,uBAAGyP,KAAI,0BAAqBzP,GAAY4R,OAAO,WAC1C5R,KAKjBwO,OAAQ,SAACC,EAAuBC,GAC5B,OAAOD,EAAEzO,SAAS6gB,cAAcnS,EAAE1O,aAG1C,sBAAOiO,OAAP,CACIrC,MAAM,WACNsC,UAAU,aACVtY,IAAI,aACJuY,MAAM,MACNC,OAAQ,SAACsW,EAAoBJ,GACzB,OACI,uBAAS1Y,MAAO8Y,GACZ,uBAAGjV,KAAI,wBAAmB6U,EAAKC,OAAS3S,OAAO,WAC1C8S,KAKjBlW,OAAQ,SAACC,EAAuBC,GAC5B,OAAOD,EAAEiW,WAAW7D,cAAcnS,EAAEgW,eAG5C,sBAAOzW,OAAP,CACIrC,MAAM,OACNsC,UAAU,WACVtY,IAAI,WACJuY,MAAM,MACNyW,MAAM,QACNxW,OAAQ,SAACyW,EAAkBP,GACvB,OACI,yBAAK7Y,UAAU,iBACVjI,KAAK8K,aAAa,QAAS,CACxBC,aAAa,IACd9L,OAAOoiB,KAItBrW,OAAQ,SAACC,EAAuBC,GAC5B,OAAOD,EAAEoW,SAAWnW,EAAEmW,UAE1B/D,iBAAiB,e,+BAM7B,OACI,6BACI,6BAAM/tB,KAAKouB,oBACX,iCAAOpuB,KAAK0zB,oB,GAhIgB1b,IAAMC,WCsBlD,SAASua,GAAYvwB,GACjB,MAAO,CACH0R,KAAMJ,EAAWogB,8BACjB1xB,SCJO+hB,yBAjBf,SAAyBvQ,EAAmBoE,GAA8B,IAAD,EAKjEpE,EAHAI,MACIyC,mBAGR,MAAO,CAAEvC,YAN4D,EAGvCA,YAGRyC,eAN+C,EAG1BA,iBAM/C,SAA4B+N,EAA4BC,GACpD,MAAO,CACHmG,OAAQ,SAACzT,GACLqN,EDoBL,SAAgBrN,GACnB,+CAAO,WAAOqN,EAAmDmL,GAA1D,gCAAAhU,EAAA,wDACH6I,EArBG,CACH5Q,KAAMJ,EAAW8C,gCAmBd,EAYCqZ,IARQtd,EAJT,EAICH,KAAQG,kBAIoBsgB,EAR7B,EAKCxO,IACIC,OACIC,SACIuO,QAAWlwB,IAMtB2P,EAdF,uBAeCmS,EACIiO,GAAY,CACRxwB,QAAS,iBACTD,KAAM,kBAlBf,6BAwBEqQ,EAxBF,uBAyBCmS,EACIiO,GAAY,CACRxwB,QAAS,iBACTD,KAAM,kBA5Bf,iCAkCG6wB,EAAgB,IAAIjkB,iBAAc,CACpChM,OAAQ,UACRD,MAAO0P,EAAkB1P,MACzBD,IAAKiwB,IAEHpvB,EAAS,CACXswB,MAAO,EACPjR,IAAKtc,KAAKuD,OAzCX,UA2CoBgpB,EAAciB,iBAAiBvwB,GA3CnD,QA2CGwvB,EA3CH,OA4CGC,EAAQD,EAAS5hB,IAAI,SAACqgB,GACxB,IAAIC,EAAOvkB,EAAU0kB,EACrB,GAAKJ,EAAKrN,IAIH,CAAC,IAAD,EACsBqN,EAAKrN,IAAI0L,MAAM,KADrC,oBACF3iB,EADE,KACQ0kB,EADR,KAEHH,EAAQD,EAAKrN,SAHbsN,EAAQ,CAFRvkB,EAAWskB,EAAKuC,SAChBnC,EAAaJ,EAAKhuB,MACagC,KAAK,KAUxC,OAJK0H,GAAa0kB,GACdvpB,QAAQI,KAAK,WAAY+oB,GAGtB,CACH3e,SAAU2e,EAAK1e,KACf2e,MAAOA,EACPvkB,SAAUA,EACV0kB,WAAYA,EACZG,SAAUP,EAAKwC,KAIjBR,EAAarc,EAAMA,MAAM0Y,MAAM,OAAO1e,IAAI,SAAC2e,GAC7C,OAAO,IAAIC,OAAOD,EAAM,OAEtB2D,EAAWT,EAAM5oB,OAAO,SAAConB,GAC3B,OAAOgC,EAAWplB,MAAM,SAAC0hB,GACrB,OACIA,EAAKM,KAAKoB,EAAKC,QACf3B,EAAKM,KAAKoB,EAAKtkB,WACf4iB,EAAKM,KAAKoB,EAAKI,aACf9B,EAAKM,KAAKoB,EAAK3e,cAK3B2R,GA1Fe/N,EA0FQgd,EAzFpB,CACH7f,KAAMJ,EAAWgD,gCACjBC,oBAKG,kCARX,IAAuBA,GAQZ,MAAP,qDAAM,GCrBWmU,CAAOzT,OAKb8M,CAGb/L,ICdmB+b,G,YAEjB,WAAYnc,GAAmB,IAAD,8BAC1B,4CAAMA,KAFVoc,mBAC8B,EAE1B,EAAKA,cAAgB,SACrB,EAAKxgB,MAAQ,CACTygB,aAAc,EAAKD,cACnBE,oBAAqB,EAAKF,eALJ,E,iFAU1Bj0B,KAAK6X,MAAMuc,SAAS,iB,6CAQpBp0B,KAAKqY,SAAS,CACV6b,aAAc,S,mCAKTG,GAETr0B,KAAKqY,SAAS,CAAE6b,aAAcG,M,0HAS9B,IAAIC,EACAC,EAEJ,GAAIv0B,KAAK6X,MAAMpC,QAAS,CACpB,IAAM+e,EACF,kDACqB,uBAAM7gB,KAAK,YAGpC2gB,EACI,sBAAMG,QAAN,CAAclc,IAAKic,EAAU3xB,IAAI,kBAC7B,kBAAC,GAAD,OAGR,IAAM6xB,EACF,2CACc,uBAAM/gB,KAAK,YAG7B4gB,EACI,sBAAME,QAAN,CAAclc,IAAKmc,EAAkB7xB,IAAI,YACrC,kBAAC,GAAD,OASZ,OACI,uBACI8xB,UAAU,EAEVN,UAAWr0B,KAAK6X,MAAMvU,OAAOiV,KAAOvY,KAAKyT,MAAMygB,mBAAgB/nB,EAE/Dgd,SAAUnpB,KAAK40B,aAAahX,KAAK5d,MACjC60B,wBAAwB,GAExB,sBAAMJ,QAAN,CAAclc,IAAI,UAAU1V,IAAI,UAC5B,kBAAC,GAAD,OAGJ,sBAAM4xB,QAAN,CAAclc,IAAI,mBAAmB1V,IAAI,kBACrC,kBAAC,GAAD,OAGH0xB,EACAD,K,+BAMT,OAAO,yBAAK5b,UAAU,sBAAsB1Y,KAAK+Y,kB,GA3FvBf,IAAMC,WC8BzB+L,yBA9Bf,SAAyBvQ,EAAmBoE,GAA8B,IAGlDpC,EAOhBhC,EARAI,MACIwB,SAAYI,QAHiD,EAUjEhC,EALAyQ,IACI4Q,QACIC,WAMZ,MAAO,CAAEtf,UAAS8J,KAbmD,EAO3CA,KAMFjc,OAb6C,EAOrCA,SASpC,SAA4BihB,EAA4BC,GACpD,MAAO,CACH4P,SAAU,SAACvb,GACP0L,EAASyQ,oBAAUnc,KAEvBoc,QAAS,SAAC1V,GACNgF,EAAS0Q,kBAAQ1V,KAErB2V,UAAW,SAAC5xB,GACRihB,EAAS2Q,oBAAU5xB,OAKhB0gB,CAGbgQ,IClBK,SAASte,GAAgBD,GAC5B,MAAO,CACH9B,KAAMJ,EAAW6B,kBACjBK,WAID,SAAS0f,GAAclzB,GAC1B,MAAO,CACH0R,KAAMJ,EAAW6hB,gBACjBnzB,S,ICtBFozB,G,wLAEE,IAAMrzB,EACF,+CACqB,2BAGzB,OACI,qBACI2R,KAAK,OACL3R,QAASA,EACT8X,MAAO,CACHsB,MAAO,OACPiF,QAAS,OACT6M,OAAQ,iB,oCAOpB,GAAKltB,KAAK6X,MAAM0H,KAAKtd,MAGrB,OAAO,qBAAO0R,KAAK,QAAQ3R,QAAShC,KAAK6X,MAAM0H,KAAKtd,MAAMD,Y,+BAI1D,OAAQhC,KAAK6X,MAAM0H,KAAKjK,cACpB,KAAKC,EAAsBK,KAE3B,KAAKL,EAAsB+f,QACvB,OAAOt1B,KAAK4f,gBAChB,KAAKrK,EAAsBsK,MACvB,OAAO7f,KAAK8f,cAChB,KAAKvK,EAAsBC,QACvB,OAAO,gBAAC,GAAD,S,0CAOf,OAAQxV,KAAK6X,MAAM0H,KAAKjK,cACpB,KAAKC,EAAsBK,KAEvB5V,KAAK6X,MAAM0d,Y,6CAKnBv1B,KAAK6X,MAAMhC,a,GAnDEmC,aA6FNgM,yBAtBf,SAAyBvQ,EAAmBoE,GAA8B,IAE1DzF,EAERqB,EAFAxB,KAAQG,kBAGZ,MAAO,CACHmN,KAFA9L,EADAI,MAASwB,SAIT3S,MAAO0P,EAAmB1P,QAIlC,SAA4B6hB,EAA4B1M,GACpD,MAAO,CACH0d,OAAQ,WACJhR,ED1DR,wCAAO,WAAOA,EAAmDmL,GAA1D,wBAAAhU,EAAA,wDACH6I,EArBG,CACH5Q,KAAMJ,EAAWiiB,kBAmBd,EAWC9F,IARQtd,EAHT,EAGCH,KAAQG,kBAIoBqjB,EAP7B,EAICvR,IACIC,OACIC,SACIuO,QAAWlwB,IAMtB2P,EAbF,uBAcCmS,EACI4Q,GAAc,CACVnzB,QAAS,iBACTD,KAAM,kBAjBf,iCAyBG6wB,EAAgB,IAAIjkB,iBAAc,CACpCjM,MAAO0P,EAAkB1P,MACzBD,IAAKgzB,EACL9yB,OAAQ,YA5BT,kBAgCuBiwB,EAAcnd,UAhCrC,OAgCOA,EAhCP,OAiCC8O,EAAS7O,KAAgBD,IAjC1B,kDAmCC8O,EACI4Q,GAAc,CACVnzB,QAAS,KAAGA,QACZD,KAAM,iCAtCf,wDAAP,qDAAM,KC4DF8T,OAAQ,WACJ0O,EDfD,CACH5Q,KAAMJ,EAAWoC,iBCmBVqO,CAGbqR,ICrFIK,I,O/B+QKC,YAAYniB,EAASuD,IAAyB6e,YAAQC,YAAgBC,Q+BrQ5DC,G,YACjB,WAAYle,GAAkB,IAAD,8BACzB,4CAAMA,KACDpE,MAAQ,GAFY,E,sEAMzB,OACI,kBAAC,WAAD,CAAUiiB,MAAOA,IACb,kBAAC,UAAD,KACI,kBAAC,WAAD,CAAUM,UAAU,GAChB,kBAAC,GAAD,a,GAXShe,IAAMC,WCnCnBge,QACW,cAA7BjvB,OAAOG,SAAS+uB,UAEe,UAA7BlvB,OAAOG,SAAS+uB,UAEhBlvB,OAAOG,SAAS+uB,SAASC,MACvB,2DCNNC,IAAS/a,OAAO,kBAAC,GAAD,MAASnU,SAASmvB,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMx1B,KAAK,SAAAy1B,GACjCA,EAAaC,iB","file":"static/js/main.0c40da22.chunk.js","sourcesContent":["\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createClass = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _wrapNativeSuper = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar DEFAULT_TIMEOUT = 10000;\n\nvar JSONRPCException =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(JSONRPCException, _Error);\n\n  function JSONRPCException(_ref) {\n    var _this;\n\n    var name = _ref.name,\n        code = _ref.code,\n        message = _ref.message,\n        error = _ref.error;\n\n    _classCallCheck(this, JSONRPCException);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JSONRPCException).call(this, message));\n    _this.name = name;\n    _this.code = code;\n    _this.error = error;\n    return _this;\n  }\n\n  return JSONRPCException;\n}(_wrapNativeSuper(Error));\n\nexports.JSONRPCException = JSONRPCException;\n\nvar classJSONRPCServerException =\n/*#__PURE__*/\nfunction (_Error2) {\n  _inherits(classJSONRPCServerException, _Error2);\n\n  function classJSONRPCServerException() {\n    _classCallCheck(this, classJSONRPCServerException);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(classJSONRPCServerException).apply(this, arguments));\n  }\n\n  return classJSONRPCServerException;\n}(_wrapNativeSuper(Error));\n\nexports.classJSONRPCServerException = classJSONRPCServerException;\n\nvar GenericClient =\n/*#__PURE__*/\nfunction () {\n  function GenericClient(_ref2) {\n    var url = _ref2.url,\n        token = _ref2.token,\n        module = _ref2.module,\n        timeout = _ref2.timeout;\n\n    _classCallCheck(this, GenericClient);\n\n    this.url = url;\n    this.token = token || null;\n    this.module = module;\n    this.timeout = timeout || DEFAULT_TIMEOUT;\n  }\n\n  _createClass(GenericClient, [{\n    key: \"makePayload\",\n    value: function makePayload(method, param) {\n      return {\n        version: '1.1',\n        method: this.module + '.' + method,\n        id: String(Math.random()).slice(2),\n        params: param\n      };\n    }\n  }, {\n    key: \"callFunc\",\n    value: function callFunc(func, param) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var headers, params, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                headers = {\n                  'Content-Type': 'application/json',\n                  'Accept': 'application/json'\n                };\n\n                if (this.token) {\n                  headers['Authorization'] = this.token;\n                }\n\n                params = this.makePayload(func, param);\n                _context.next = 5;\n                return axios_1.default.post(this.url, params, {\n                  headers: headers,\n                  timeout: this.timeout\n                });\n\n              case 5:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response.data.result);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }]);\n\n  return GenericClient;\n}();\n\nexports.GenericClient = GenericClient;\n\nvar AuthorizedGenericClient =\n/*#__PURE__*/\nfunction (_GenericClient) {\n  _inherits(AuthorizedGenericClient, _GenericClient);\n\n  function AuthorizedGenericClient(params) {\n    var _this2;\n\n    _classCallCheck(this, AuthorizedGenericClient);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(AuthorizedGenericClient).call(this, params));\n\n    if (!params.token) {\n      throw new Error('Authorized client requires token');\n    }\n\n    _this2.token = params.token;\n    return _this2;\n  }\n\n  _createClass(AuthorizedGenericClient, [{\n    key: \"callFunc\",\n    value: function callFunc(func, param) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var params, headers, response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                params = this.makePayload(func, param);\n                headers = {\n                  'Content-Type': 'application/json',\n                  'Accept': 'application/json',\n                  'Authorization': this.token\n                };\n                _context2.next = 4;\n                return axios_1.default.post(this.url, params, {\n                  headers: headers,\n                  timeout: this.timeout\n                });\n\n              case 4:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response.data.result);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }]);\n\n  return AuthorizedGenericClient;\n}(GenericClient);\n\nexports.AuthorizedGenericClient = AuthorizedGenericClient;","\"use strict\";\n\nvar _possibleConstructorReturn = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar ServiceClient =\n/*#__PURE__*/\nfunction () {\n  function ServiceClient(_ref) {\n    var url = _ref.url,\n        token = _ref.token,\n        timeout = _ref.timeout;\n\n    _classCallCheck(this, ServiceClient);\n\n    this.url = url;\n    this.token = token || null;\n    this.timeout = timeout;\n  }\n\n  _createClass(ServiceClient, [{\n    key: \"makePayload\",\n    value: function makePayload(method, param) {\n      return {\n        version: '1.1',\n        method: this.constructor.module + '.' + method,\n        id: String(Math.random()).slice(2),\n        params: [param]\n      };\n    }\n  }, {\n    key: \"makeEmptyPayload\",\n    value: function makeEmptyPayload(method) {\n      return {\n        version: '1.1',\n        method: this.constructor.module + '.' + method,\n        id: String(Math.random()).slice(2),\n        params: []\n      };\n    }\n  }]);\n\n  return ServiceClient;\n}();\n\nexports.ServiceClient = ServiceClient;\n\nvar AuthorizedServiceClient =\n/*#__PURE__*/\nfunction (_ServiceClient) {\n  _inherits(AuthorizedServiceClient, _ServiceClient);\n\n  function AuthorizedServiceClient(params) {\n    var _this;\n\n    _classCallCheck(this, AuthorizedServiceClient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthorizedServiceClient).call(this, params));\n\n    if (!params.token) {\n      throw new Error('Authorized client requires token');\n    }\n\n    _this.token = params.token;\n    return _this;\n  }\n\n  _createClass(AuthorizedServiceClient, [{\n    key: \"callFunc\",\n    value: function callFunc(func, param) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var connection = axios_1.default.post(_this2.url, _this2.makePayload(func, param), {\n          headers: {\n            Authorization: _this2.token,\n            'Content-Type': 'application/json',\n            Accept: 'application/json'\n          },\n          timeout: _this2.timeout\n        });\n        connection.then(function (response) {\n          resolve(response.data);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    }\n  }]);\n\n  return AuthorizedServiceClient;\n}(ServiceClient);\n\nexports.AuthorizedServiceClient = AuthorizedServiceClient;","\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar endpoints = {\n  root: '',\n  tokenInfo: 'api/V2/token',\n  apiMe: 'api/V2/me',\n  me: 'me',\n  loginStart: 'login/start',\n  logout: 'logout',\n  loginChoice: 'login/choice',\n  loginCreate: 'login/create',\n  loginUsernameSuggest: 'login/suggestname',\n  loginPick: 'login/pick',\n  loginCancel: 'login/cancel',\n  linkStart: 'link/start',\n  linkCancel: 'link/cancel',\n  linkChoice: 'link/choice',\n  linkPick: 'link/pick',\n  linkRemove: 'me/unlink',\n  tokens: 'tokens',\n  tokensRevoke: 'tokens/revoke',\n  tokensRevokeAll: 'tokens/revokeall',\n  userSearch: 'api/V2/users/search',\n  adminUserSearch: 'api/V2/admin/search',\n  adminUser: 'api/V2/admin/user'\n};\n\nvar AuthClient =\n/*#__PURE__*/\nfunction () {\n  function AuthClient(_ref) {\n    var url = _ref.url;\n\n    _classCallCheck(this, AuthClient);\n\n    this.url = url;\n  }\n\n  _createClass(AuthClient, [{\n    key: \"makePath\",\n    value: function makePath(path) {\n      if (typeof path === 'string') {\n        return [this.url].concat([path]).join('/');\n      }\n\n      return [this.url].concat(path).join('/');\n    }\n  }, {\n    key: \"root\",\n    value: function root() {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios_1.default.get(this.makePath([endpoints.root]), {\n                  headers: {\n                    Accept: 'application/json'\n                  }\n                });\n\n              case 2:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"getTokenInfo\",\n    value: function getTokenInfo(token) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _ref2, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios_1.default.get(this.makePath([endpoints.tokenInfo]), {\n                  headers: {\n                    Accept: 'application/json',\n                    Authorization: token\n                  }\n                });\n\n              case 2:\n                _ref2 = _context2.sent;\n                data = _ref2.data;\n                return _context2.abrupt(\"return\", data);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"getMe\",\n    value: function getMe(token) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _ref3, data;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios_1.default.get(this.makePath([endpoints.apiMe]), {\n                  headers: {\n                    Accept: 'application/json',\n                    Authorization: token\n                  }\n                });\n\n              case 2:\n                _ref3 = _context3.sent;\n                data = _ref3.data;\n                return _context3.abrupt(\"return\", data);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }]);\n\n  return AuthClient;\n}();\n\nexports.default = AuthClient;","\"use strict\";\n\nvar _slicedToArray = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createClass = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar uuid_1 = __importDefault(require(\"uuid\"));\n\nvar Listener = function Listener(_ref) {\n  var name = _ref.name,\n      onSuccess = _ref.onSuccess,\n      onError = _ref.onError;\n\n  _classCallCheck(this, Listener);\n\n  this.name = name;\n  this.onSuccess = onSuccess;\n  this.onError = onError;\n};\n\nvar WaitingListener =\n/*#__PURE__*/\nfunction (_Listener) {\n  _inherits(WaitingListener, _Listener);\n\n  function WaitingListener(params) {\n    var _this;\n\n    _classCallCheck(this, WaitingListener);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WaitingListener).call(this, params));\n    _this.started = new Date();\n    _this.timeout = params.timeout || 5000;\n    return _this;\n  }\n\n  return WaitingListener;\n}(Listener);\n\nvar Envelope =\n/*#__PURE__*/\nfunction () {\n  function Envelope(_ref2) {\n    var from = _ref2.from,\n        to = _ref2.to;\n\n    _classCallCheck(this, Envelope);\n\n    this.from = from;\n    this.to = to;\n    this.id = uuid_1.default.v4();\n    this.created = new Date();\n  }\n\n  _createClass(Envelope, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        from: this.from,\n        to: this.to,\n        id: this.id,\n        created: this.created\n      };\n    }\n  }]);\n\n  return Envelope;\n}();\n\nvar Message =\n/*#__PURE__*/\nfunction () {\n  function Message(_ref3) {\n    var name = _ref3.name,\n        payload = _ref3.payload,\n        from = _ref3.from,\n        to = _ref3.to;\n\n    _classCallCheck(this, Message);\n\n    this.name = name;\n    this.payload = payload;\n    this.id = uuid_1.default.v4();\n    this.created = new Date();\n    this.envelope = new Envelope({\n      from: from,\n      to: to\n    });\n  }\n\n  _createClass(Message, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        envelope: this.envelope.toJSON(),\n        name: this.name,\n        payload: this.payload\n      };\n    }\n  }]);\n\n  return Message;\n}();\n\nvar Channel =\n/*#__PURE__*/\nfunction () {\n  function Channel(params) {\n    _classCallCheck(this, Channel);\n\n    this.window = params.window || window;\n    this.debug = params.debug || false;\n\n    if (this.window.document === null) {\n      throw new Error('No document');\n    }\n\n    if (this.window.document.location === null) {\n      throw new Error('No location');\n    }\n\n    this.host = params.host || this.window.document.location.origin;\n    this.id = params.id || uuid_1.default.v4();\n    this.debugLog('Setting partner id to ' + params.to);\n    this.partnerId = params.to || null;\n    this.awaitingResponse = new Map();\n    this.waitingListeners = new Map();\n    this.listeners = new Map();\n    this.lastId = 0;\n    this.sentCount = 0;\n    this.receivedCount = 0;\n    this.unwelcomeReceivedCount = 0;\n    this.unwelcomeReceivedCountThreshhold = 100;\n    this.unwelcomeReceiptWarning = false;\n    this.unwelcomeReceiptWarningCount = 0;\n    this.currentListener = null;\n  }\n\n  _createClass(Channel, [{\n    key: \"debugLog\",\n    value: function debugLog(message) {\n      if (this.debug) {\n        console.log('[windowChannel][' + this.id + '] ' + message);\n      }\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(toChannelId) {\n      this.partnerId = toChannelId;\n    }\n  }, {\n    key: \"genId\",\n    value: function genId() {\n      this.lastId += 1;\n      return 'msg_' + String(this.lastId);\n    }\n  }, {\n    key: \"receiveMessage\",\n    value: function receiveMessage(messageEvent) {\n      var message = messageEvent.data;\n\n      if (!message) {\n        this.unwelcomeReceivedCount++;\n\n        if (this.unwelcomeReceiptWarning) {\n          console.warn('TS No message data; message ignored', messageEvent);\n        }\n\n        return;\n      }\n\n      if (!message.envelope) {\n        this.unwelcomeReceivedCount++;\n\n        if (this.unwelcomeReceiptWarning) {\n          console.warn('No message envelope, not from KBase; message ignored', messageEvent);\n        }\n\n        return;\n      }\n\n      if (this.debug) {\n        console.debug('[windowChannel][debug]', this.id, message.envelope.to, this.partnerId, message.envelope.from, message);\n      }\n\n      if (message.envelope.to !== this.id) {\n        this.unwelcomeReceivedCount++;\n\n        if (this.unwelcomeReceiptWarning) {\n          console.warn(\"Message envelope does not match this channel's id\", 'message', message, 'channel id', this.id, 'partner id', this.partnerId);\n        }\n\n        return;\n      }\n\n      if (this.unwelcomeReceiptWarningCount > this.unwelcomeReceivedCountThreshhold) {\n        this.unwelcomeReceiptWarning = false;\n        console.warn('Unwelcome message warning disabled after ' + this.unwelcomeReceiptWarningCount + ' instances.');\n      }\n\n      if (message.envelope.id && this.awaitingResponse.has(message.envelope.id)) {\n        try {\n          var response = this.awaitingResponse.get(message.envelope.id);\n          this.awaitingResponse.delete(message.envelope.id);\n\n          if (response) {\n            response.handler(message.payload);\n          }\n        } catch (ex) {\n          console.error('Error handling response for message ', message, ex);\n        }\n      }\n\n      if (this.waitingListeners.has(message.name)) {\n        var awaiting = this.waitingListeners.get(message.name);\n        this.waitingListeners.delete(message.name);\n        awaiting.forEach(function (listener) {\n          try {\n            listener.onSuccess(message.payload);\n          } catch (ex) {\n            if (listener.onError) {\n              listener.onError(ex);\n            } else {\n              console.error('Error handling listener for message', message, ex);\n            }\n          }\n        });\n      }\n\n      if (this.listeners.has(message.name)) {\n        this.listeners.get(message.name).forEach(function (listener) {\n          if (!listener.onSuccess) {\n            console.warn('no handler for listener!', listener);\n          }\n\n          try {\n            listener.onSuccess(message.payload);\n          } catch (ex) {\n            if (listener.onError) {\n              listener.onError(ex);\n            } else {\n              console.error('Error handling listener for message', message, ex);\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(listener) {\n      if (!this.listeners.has(listener.name)) {\n        this.listeners.set(listener.name, []);\n      }\n\n      this.listeners.get(listener.name).push(listener);\n    }\n  }, {\n    key: \"on\",\n    value: function on(messageId, success, error) {\n      this.listen(new Listener({\n        name: messageId,\n        onSuccess: success,\n        onError: error\n      }));\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(message) {\n      this.window.postMessage(message.toJSON(), this.host);\n    }\n  }, {\n    key: \"send\",\n    value: function send(name, payload) {\n      this.debugLog(' sending message: ' + name + ', with payload: ' + JSON.stringify(payload));\n\n      if (this.partnerId === null) {\n        throw new Error('Channel partner id not set, cannot send message');\n      }\n\n      var message = new Message({\n        name: name,\n        payload: payload,\n        from: this.id,\n        to: this.partnerId\n      });\n      this.sendMessage(message);\n    }\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(message, handler) {\n      this.awaitingResponse.set('message.id', {\n        started: new Date(),\n        handler: handler\n      });\n      this.sendMessage(message);\n    }\n  }, {\n    key: \"request\",\n    value: function request(name, payload) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        try {\n          if (_this2.partnerId === null) {\n            throw new Error('Channel partner id not set, cannot issue request');\n          }\n\n          _this2.sendRequest(new Message({\n            name: name,\n            payload: payload,\n            from: _this2.id,\n            to: _this2.partnerId\n          }), function (response) {\n            resolve(response);\n          });\n        } catch (ex) {\n          reject(ex);\n        }\n      });\n    }\n  }, {\n    key: \"startMonitor\",\n    value: function startMonitor() {\n      var _this3 = this;\n\n      window.setTimeout(function () {\n        var now = new Date().getTime();\n\n        var _loop = function _loop() {\n          var _ref4 = _Array$from[_i];\n          _ref5 = _slicedToArray(_ref4, 2);\n          var id = _ref5[0];\n          var listeners = _ref5[1];\n          var newListeners = listeners.filter(function (listener) {\n            if (listener instanceof WaitingListener) {\n              var elapsed = now - listener.started.getTime();\n\n              if (elapsed > listener.timeout) {\n                try {\n                  if (listener.onError) {\n                    listener.onError(new Error('timout after ' + elapsed));\n                  }\n                } catch (ex) {\n                  console.error('Error calling error handler', id, ex);\n                }\n\n                return false;\n              } else {\n                return true;\n              }\n            } else {\n              return true;\n            }\n          });\n\n          if (newListeners.length === 0) {\n            _this3.waitingListeners.delete(id);\n          }\n        };\n\n        for (var _i = 0, _Array$from = Array.from(_this3.waitingListeners.entries()); _i < _Array$from.length; _i++) {\n          var _ref5;\n\n          _loop();\n        }\n\n        if (_this3.waitingListeners.size > 0) {\n          _this3.startMonitor();\n        }\n      }, 100);\n    }\n  }, {\n    key: \"listenOnce\",\n    value: function listenOnce(listener) {\n      if (!this.waitingListeners.has(listener.name)) {\n        this.waitingListeners.set(listener.name, []);\n      }\n\n      this.waitingListeners.get(listener.name).push(listener);\n\n      if (listener.timeout) {\n        this.startMonitor();\n      }\n    }\n  }, {\n    key: \"once\",\n    value: function once(name, success, error) {\n      this.listenOnce(new WaitingListener({\n        name: name,\n        onSuccess: success,\n        onError: error\n      }));\n    }\n  }, {\n    key: \"when\",\n    value: function when(name, timeout) {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        return _this4.listenOnce(new WaitingListener({\n          name: name,\n          timeout: timeout,\n          onSuccess: function onSuccess(payload) {\n            resolve(payload);\n          },\n          onError: function onError(error) {\n            reject(error);\n          }\n        }));\n      });\n    }\n  }, {\n    key: \"stats\",\n    value: function stats() {\n      return {\n        sent: this.sentCount,\n        received: this.receivedCount\n      };\n    }\n  }, {\n    key: \"setPartner\",\n    value: function setPartner(id) {\n      this.partnerId = id;\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(window) {\n      this.window = window;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this5 = this;\n\n      if (this.debug) {\n        console.log('[windowChannel][' + this.id + '] starting');\n      }\n\n      this.currentListener = function (message) {\n        _this5.receiveMessage(message);\n      };\n\n      this.window.addEventListener('message', this.currentListener, false);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.currentListener) {\n        this.window.removeEventListener('message', this.currentListener, false);\n      }\n    }\n  }]);\n\n  return Channel;\n}();\n\nexports.Channel = Channel;","\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ServiceWizard_1 = require(\"../coreServices/ServiceWizard\");\n\nvar GenericClient_1 = require(\"./GenericClient\");\n\nvar Cache =\n/*#__PURE__*/\nfunction () {\n  function Cache(_ref) {\n    var itemLifetime = _ref.itemLifetime,\n        monitoringFrequency = _ref.monitoringFrequency,\n        waiterTimeout = _ref.waiterTimeout,\n        waiterFrequency = _ref.waiterFrequency;\n\n    _classCallCheck(this, Cache);\n\n    this.cache = new Map();\n    this.cacheLifetime = itemLifetime || 1800000;\n    this.monitoringFrequency = monitoringFrequency || 60000;\n    this.waiterTimeout = waiterTimeout || 30000;\n    this.waiterFrequency = waiterFrequency || 100;\n    this.isMonitoring = false;\n  }\n\n  _createClass(Cache, [{\n    key: \"runMonitor\",\n    value: function runMonitor() {\n      var _this = this;\n\n      if (this.isMonitoring) {\n        return;\n      }\n\n      this.isMonitoring = true;\n      setTimeout(function () {\n        var newCache = new Map();\n        var cacheRenewed = false;\n        Object.keys(_this.cache).forEach(function (id) {\n          var item = _this.cache.get(id);\n\n          if (!_this.isExpired(item)) {\n            newCache.set(id, item);\n            cacheRenewed = true;\n          }\n        });\n        _this.cache = newCache;\n        _this.isMonitoring = false;\n\n        if (cacheRenewed) {\n          _this.runMonitor();\n        }\n      }, this.monitoringFrequency);\n    }\n  }, {\n    key: \"isExpired\",\n    value: function isExpired(cacheItem) {\n      var now = new Date().getTime();\n      var elapsed = now - cacheItem.createdAt;\n      return elapsed > this.cacheLifetime;\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(id) {\n      if (this.cache.get(id) === undefined) {\n        return null;\n      }\n\n      var cached = this.cache.get(id);\n\n      if (this.isExpired(cached)) {\n        this.cache.delete(id);\n        return;\n      }\n\n      return cached;\n    }\n  }, {\n    key: \"reserveWaiter\",\n    value: function reserveWaiter(id, fetcher) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var started = new Date().getTime();\n        var waiting = true;\n\n        var waiter = function waiter() {\n          if (!waiting) {\n            return;\n          }\n\n          setTimeout(function () {\n            var item = _this2.cache.get(id);\n\n            if (!item) {\n              _this2.reserveAndFetch(id, fetcher).then(function () {\n                resolve(_this2.cache.get(id));\n              }).catch(function (err) {\n                reject(err);\n              });\n            } else if (item.reserved) {\n              var elapsed = new Date().getTime() - started;\n\n              if (elapsed < _this2.waiterTimeout) {\n                waiter();\n                return;\n              } else {\n                reject(new Error('Timed-out waiting for cache item to become available; timeout ' + _this2.waiterTimeout + ', waited ' + elapsed));\n                return;\n              }\n            } else {\n              resolve(item);\n            }\n          }, _this2.waiterFrequency);\n        };\n\n        waiter();\n      });\n    }\n  }, {\n    key: \"reserveAndFetch\",\n    value: function reserveAndFetch(id, fetcher) {\n      var _this3 = this;\n\n      this.reserveItem(id, fetcher);\n      var fetchPromise = fetcher().then(function (result) {\n        _this3.setItem(id, result, fetcher);\n\n        return result;\n      }).finally(function () {});\n      return fetchPromise;\n    }\n  }, {\n    key: \"getItemWithWait\",\n    value: function getItemWithWait(_ref2) {\n      var id = _ref2.id,\n          fetcher = _ref2.fetcher;\n      var cached = this.cache.get(id);\n\n      if (cached) {\n        if (this.isExpired(cached)) {\n          this.cache.delete(id);\n        } else if (cached.reserved) {\n          return this.reserveWaiter(id, fetcher).then(function (cached) {\n            return cached.value;\n          });\n        } else {\n          return Promise.resolve(cached.value);\n        }\n      }\n\n      return this.reserveAndFetch(id, fetcher);\n    }\n  }, {\n    key: \"reserveItem\",\n    value: function reserveItem(id, fetcher) {\n      this.cache.set(id, {\n        id: id,\n        createdAt: new Date().getTime(),\n        reserved: true,\n        value: null,\n        fetcher: fetcher\n      });\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(id, value, fetcher) {\n      if (this.cache.has(id)) {\n        var item = this.cache.get(id);\n\n        if (item && item.reserved) {\n          item.reserved = false;\n          item.value = value;\n          item.fetcher = fetcher;\n        } else {\n          this.cache.set(id, {\n            id: id,\n            createdAt: new Date().getTime(),\n            fetcher: fetcher,\n            reserved: false,\n            value: value\n          });\n        }\n      } else {\n        this.cache.set(id, {\n          id: id,\n          createdAt: new Date().getTime(),\n          fetcher: fetcher,\n          reserved: false,\n          value: value\n        });\n      }\n\n      this.runMonitor();\n    }\n  }]);\n\n  return Cache;\n}();\n\nexports.Cache = Cache;\nvar moduleCache = new Cache({\n  itemLifetime: 1800000,\n  monitoringFrequency: 60000,\n  waiterTimeout: 30000,\n  waiterFrequency: 100\n});\nvar DEFAULT_TIMEOUT = 10000;\n\nvar DynamicServiceClient =\n/*#__PURE__*/\nfunction () {\n  function DynamicServiceClient(_ref3) {\n    var token = _ref3.token,\n        url = _ref3.url,\n        version = _ref3.version,\n        timeout = _ref3.timeout,\n        rpcContext = _ref3.rpcContext;\n\n    _classCallCheck(this, DynamicServiceClient);\n\n    this.token = token;\n    this.timeout = timeout || DEFAULT_TIMEOUT;\n    this.rpcContext = rpcContext || null;\n\n    if (!url) {\n      throw new Error('The service discovery url was not provided');\n    }\n\n    this.url = url;\n    this.version = version || null;\n\n    if (version === 'auto') {\n      this.version = null;\n    }\n  }\n\n  _createClass(DynamicServiceClient, [{\n    key: \"options\",\n    value: function options() {\n      return {\n        timeout: this.timeout,\n        authorization: this.token,\n        rpcContext: this.rpcContext\n      };\n    }\n  }, {\n    key: \"getModule\",\n    value: function getModule() {\n      return this.constructor.module;\n    }\n  }, {\n    key: \"moduleId\",\n    value: function moduleId() {\n      var moduleId;\n\n      if (!this.version) {\n        moduleId = this.getModule() + ':auto';\n      } else {\n        moduleId = this.getModule() + ':' + this.version;\n      }\n\n      return moduleId;\n    }\n  }, {\n    key: \"getCached\",\n    value: function getCached(fetcher) {\n      return moduleCache.getItemWithWait({\n        id: this.moduleId(),\n        fetcher: fetcher\n      });\n    }\n  }, {\n    key: \"lookupModule\",\n    value: function lookupModule() {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.getCached(function () {\n                  var client = new ServiceWizard_1.ServiceWizardClient({\n                    url: _this4.url,\n                    token: _this4.token,\n                    timeout: _this4.timeout\n                  });\n                  return Promise.resolve(client.getServiceStatus({\n                    module_name: _this4.getModule(),\n                    version: _this4.version\n                  }));\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"callFunc\",\n    value: function callFunc(funcName, params) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var moduleInfo, client;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.lookupModule();\n\n              case 2:\n                moduleInfo = _context2.sent;\n                client = new GenericClient_1.AuthorizedGenericClient({\n                  module: moduleInfo.module_name,\n                  url: moduleInfo.url,\n                  token: this.token\n                });\n                _context2.next = 6;\n                return client.callFunc(funcName, params);\n\n              case 6:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }]);\n\n  return DynamicServiceClient;\n}();\n\nexports.DynamicServiceClient = DynamicServiceClient;","\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ServiceClient_1 = require(\"../comm/ServiceClient\");\n\nfunction isString(x, p) {\n  if (typeof x === 'object' && Reflect.has(x, p)) {\n    if (typeof Reflect.get(x, p) === 'string') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isNumber(x, p) {\n  if (typeof x === 'object' && Reflect.has(x, p)) {\n    if (typeof Reflect.get(x, p) === 'number') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isArray(x, p, subType) {\n  if (typeof x === 'object' && Reflect.has(x, p)) {\n    var value = Reflect.get(x, p);\n\n    if (typeof value === 'object' && value instanceof Array) {\n      if (value.length === 0) {\n        return true;\n      }\n\n      return value.every(function (arrayElement) {\n        return typeof arrayElement === 'string';\n      });\n    }\n  }\n\n  return false;\n}\n\nfunction isGetServiceStatusResult(x) {\n  if (isString(x, 'module_name') && isString(x, 'version') && isString(x, 'git_commit_hash') && isArray(x, 'release_tags', 'string') && isString(x, 'url') && isNumber(x, 'up') && isString(x, 'status') && isString(x, 'health')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar ServiceWizardClient =\n/*#__PURE__*/\nfunction (_ServiceClient_1$Auth) {\n  _inherits(ServiceWizardClient, _ServiceClient_1$Auth);\n\n  function ServiceWizardClient() {\n    _classCallCheck(this, ServiceWizardClient);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ServiceWizardClient).apply(this, arguments));\n  }\n\n  _createClass(ServiceWizardClient, [{\n    key: \"getServiceStatus\",\n    value: function getServiceStatus(params) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result, theResult;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.callFunc('get_service_status', params);\n\n              case 2:\n                result = _context.sent;\n\n                if (!(result.result && result.result.length > 0)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                theResult = result.result[0];\n\n                if (theResult) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new Error('Crazy as it seems, result is falsy');\n\n              case 7:\n                if (!isGetServiceStatusResult(theResult)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", theResult);\n\n              case 11:\n                throw new Error('Sorry, result does not conform to \"GetServiceStatusResult\"');\n\n              case 12:\n                _context.next = 15;\n                break;\n\n              case 14:\n                throw new Error('Crazy as it seems, no result');\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }]);\n\n  return ServiceWizardClient;\n}(ServiceClient_1.AuthorizedServiceClient);\n\nexports.ServiceWizardClient = ServiceWizardClient;\nServiceWizardClient.module = 'ServiceWizard';","\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar GenericClient_1 = require(\"../comm/GenericClient\");\n\nvar NarrativeJobServiceClient =\n/*#__PURE__*/\nfunction (_GenericClient_1$Gene) {\n  _inherits(NarrativeJobServiceClient, _GenericClient_1$Gene);\n\n  function NarrativeJobServiceClient() {\n    _classCallCheck(this, NarrativeJobServiceClient);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NarrativeJobServiceClient).apply(this, arguments));\n  }\n\n  _createClass(NarrativeJobServiceClient, [{\n    key: \"cancelJob\",\n    value: function cancelJob(param) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.callFunc('cancel_job', [param]);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"getJobLogs\",\n    value: function getJobLogs(param) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.callFunc('get_job_logs', [param]);\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"checkJob\",\n    value: function checkJob(param) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.callFunc('check_job', [param]);\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }]);\n\n  return NarrativeJobServiceClient;\n}(GenericClient_1.GenericClient);\n\nexports.default = NarrativeJobServiceClient;\nNarrativeJobServiceClient.module = 'NarrativeJobService';","\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar GenericClient_1 = require(\"../comm/GenericClient\");\n\nvar CatalogClient =\n/*#__PURE__*/\nfunction (_GenericClient_1$Gene) {\n  _inherits(CatalogClient, _GenericClient_1$Gene);\n\n  function CatalogClient() {\n    _classCallCheck(this, CatalogClient);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CatalogClient).apply(this, arguments));\n  }\n\n  _createClass(CatalogClient, [{\n    key: \"isAdmin\",\n    value: function isAdmin() {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _ref, _ref2, result;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.callFunc('is_admin', [null]);\n\n              case 3:\n                _ref = _context.sent;\n                _ref2 = _slicedToArray(_ref, 1);\n                result = _ref2[0];\n                return _context.abrupt(\"return\", result);\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                console.error('ERROR', _context.t0);\n                throw _context.t0;\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n    }\n  }, {\n    key: \"getExecAggrTable\",\n    value: function getExecAggrTable(param) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _ref3, _ref4, result;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.callFunc('get_exec_aggr_table', [param]);\n\n              case 2:\n                _ref3 = _context2.sent;\n                _ref4 = _slicedToArray(_ref3, 1);\n                result = _ref4[0];\n                return _context2.abrupt(\"return\", result);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"getExecAggrStats\",\n    value: function getExecAggrStats(param) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _ref5, _ref6, result;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.callFunc('get_exec_aggr_stats', [param]);\n\n              case 2:\n                _ref5 = _context3.sent;\n                _ref6 = _slicedToArray(_ref5, 1);\n                result = _ref6[0];\n                return _context3.abrupt(\"return\", result);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }]);\n\n  return CatalogClient;\n}(GenericClient_1.GenericClient);\n\nexports.default = CatalogClient;\nCatalogClient.module = 'Catalog';","\"use strict\";\n\nvar _slicedToArray = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar TimeUnit;\n\n(function (TimeUnit) {\n  TimeUnit[TimeUnit[\"MILLISECOND\"] = 0] = \"MILLISECOND\";\n  TimeUnit[TimeUnit[\"SECOND\"] = 1] = \"SECOND\";\n  TimeUnit[TimeUnit[\"MINUTE\"] = 2] = \"MINUTE\";\n  TimeUnit[TimeUnit[\"HOUR\"] = 3] = \"HOUR\";\n  TimeUnit[TimeUnit[\"DAY\"] = 4] = \"DAY\";\n})(TimeUnit = exports.TimeUnit || (exports.TimeUnit = {}));\n\nvar timeUnits = [{\n  unit: TimeUnit.MILLISECOND,\n  long: 'millisecond',\n  short: 'ms',\n  single: 'm',\n  size: 1000\n}, {\n  unit: TimeUnit.SECOND,\n  long: 'second',\n  short: 'sec',\n  single: 's',\n  size: 60\n}, {\n  unit: TimeUnit.MINUTE,\n  long: 'minute',\n  short: 'min',\n  single: 'm',\n  size: 60\n}, {\n  unit: TimeUnit.HOUR,\n  long: 'hour',\n  short: 'hr',\n  single: 'h',\n  size: 24\n}, {\n  unit: TimeUnit.DAY,\n  long: 'day',\n  short: 'day',\n  single: 'd',\n  size: 30\n}];\n\nfunction niceRelativeTime(someDate) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var nowDate = options.now || new Date();\n  var elapsed = Math.round((nowDate.getTime() - someDate.getTime()) / 1000);\n  var elapsedAbs = Math.abs(elapsed);\n  var format = options.format || 'compact';\n  var measure, measureAbs, unit;\n  var maxDays = options.absoluteAfter || 90;\n\n  if (elapsedAbs < 60 * 60 * 24 * maxDays) {\n    if (elapsedAbs === 0) {\n      return 'now';\n    } else if (elapsedAbs < 60) {\n      measure = elapsed;\n      measureAbs = elapsedAbs;\n      unit = makeUnit(timeUnits[1], format, measureAbs);\n    } else if (elapsedAbs < 60 * 60) {\n      measure = Math.round(elapsed / 60);\n      measureAbs = Math.round(elapsedAbs / 60);\n      unit = makeUnit(timeUnits[2], format, measureAbs);\n    } else if (elapsedAbs < 60 * 60 * 24) {\n      measure = Math.round(elapsed / 3600);\n      measureAbs = Math.round(elapsedAbs / 3600);\n      unit = makeUnit(timeUnits[3], format, measureAbs);\n    } else {\n      measure = Math.round(elapsed / (3600 * 24));\n      measureAbs = Math.round(elapsedAbs / (3600 * 24));\n      unit = makeUnit(timeUnits[4], format, measureAbs);\n    }\n\n    var _ref = measure < 0 ? ['in', null] : [null, 'ago'],\n        _ref2 = _slicedToArray(_ref, 2),\n        prefix = _ref2[0],\n        suffix = _ref2[1];\n\n    return (prefix ? prefix + ' ' : '') + measureAbs + unit + (suffix ? ' ' + suffix : '');\n  } else {\n    if (options.format === 'compact' && nowDate.getFullYear() === someDate.getFullYear()) {\n      return Intl.DateTimeFormat('en-US', {\n        month: 'short',\n        day: 'numeric'\n      }).format(someDate);\n    } else {\n      return Intl.DateTimeFormat('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      }).format(someDate);\n    }\n  }\n}\n\nexports.niceRelativeTime = niceRelativeTime;\n\nfunction makeUnit(unit, format, value) {\n  switch (format) {\n    case 'full':\n      var label = ' ' + unit.long;\n\n      if (value !== 1) {\n        return label + 's';\n      }\n\n      return label;\n\n    case 'short':\n      return ' ' + unit.short;\n\n    case 'compact':\n      return unit.single;\n  }\n}\n\nfunction niceDuration(value) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var minimized = [];\n  var format = options.format || 'compact';\n  var temp = Math.abs(value);\n  var parts = timeUnits.map(function (unit) {\n    var unitValue = temp % unit.size;\n    temp = (temp - unitValue) / unit.size;\n    var unitLabel = makeUnit(unit, format, unitValue);\n    return {\n      label: unitLabel,\n      value: unitValue\n    };\n  }).reverse();\n  parts.pop();\n  var keep = false;\n\n  for (var i = 0; i < parts.length; i += 1) {\n    if (!keep) {\n      if (parts[i].value > 0) {\n        keep = true;\n      } else {\n        continue;\n      }\n    }\n\n    if (options.precision && options.precision === minimized.length) {\n      break;\n    }\n\n    minimized.push(parts[i]);\n  }\n\n  if (minimized.length === 0) {\n    return '<' + (format !== 'compact' ? ' ' : '') + '1' + makeUnit(timeUnits[1], format, 1);\n  } else {\n    return minimized.map(function (item) {\n      return String(item.value) + item.label;\n    }).join(' ');\n  }\n}\n\nexports.niceDuration = niceDuration;\n\nfunction niceElapsed(value) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var minimized = [];\n  var format = options.format || 'compact';\n  var temp = Math.abs(value);\n  var parts = timeUnits.map(function (unit) {\n    var unitValue = temp % unit.size;\n    temp = (temp - unitValue) / unit.size;\n    var unitLabel = makeUnit(unit, format, unitValue);\n    return {\n      label: unitLabel,\n      value: unitValue\n    };\n  }).reverse();\n  parts.pop();\n  var keep = false;\n\n  for (var i = 0; i < parts.length; i += 1) {\n    if (!keep) {\n      if (parts[i].value > 0) {\n        keep = true;\n      } else {\n        continue;\n      }\n    }\n\n    if (options.precision && options.precision === minimized.length) {\n      break;\n    }\n\n    minimized.push(parts[i]);\n  }\n\n  if (minimized.length === 0) {\n    return ['<' + (format !== 'compact' ? ' ' : '') + '1' + makeUnit(timeUnits[1], format, 1), minimized];\n  } else {\n    return [minimized.map(function (item) {\n      return String(item.value) + item.label;\n    }).join(' '), minimized];\n  }\n}\n\nexports.niceElapsed = niceElapsed;","\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/erikpearson/work/kbase/sprints/2019/q3/s2/kbase-ui-plugin-job-browser2/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Cookies = __importStar(require(\"es-cookie\"));\n\nvar auth_1 = __importDefault(require(\"./coreServices/auth\"));\n\nvar AuthState;\n\n(function (AuthState) {\n  AuthState[AuthState[\"NONE\"] = 0] = \"NONE\";\n  AuthState[AuthState[\"AUTHENTICATED\"] = 1] = \"AUTHENTICATED\";\n  AuthState[AuthState[\"UNAUTHENTICATED\"] = 2] = \"UNAUTHENTICATED\";\n  AuthState[AuthState[\"ERROR\"] = 3] = \"ERROR\";\n})(AuthState = exports.AuthState || (exports.AuthState = {}));\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth(url) {\n    _classCallCheck(this, Auth);\n\n    this.url = url;\n  }\n\n  _createClass(Auth, [{\n    key: \"checkAuth\",\n    value: function checkAuth() {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var token, auth;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = Cookies.get('kbase_session');\n\n                if (token) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", Promise.resolve({\n                  status: AuthState.UNAUTHENTICATED,\n                  userAuthorization: null\n                }));\n\n              case 3:\n                auth = new auth_1.default({\n                  url: this.url\n                });\n                return _context.abrupt(\"return\", Promise.all([auth.getTokenInfo(token), auth.getMe(token)]).then(function (_ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                      tokenInfo = _ref2[0],\n                      account = _ref2[1];\n\n                  var roles = account.roles.map(function (_ref3) {\n                    var id = _ref3.id,\n                        desc = _ref3.desc;\n                    return id;\n                  });\n                  return {\n                    status: AuthState.AUTHENTICATED,\n                    userAuthorization: {\n                      token: token,\n                      username: account.user,\n                      realname: account.display,\n                      roles: roles\n                    }\n                  };\n                }).catch(function (err) {\n                  return {\n                    status: AuthState.UNAUTHENTICATED,\n                    userAuthorization: null\n                  };\n                }));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }]);\n\n  return Auth;\n}();\n\nexports.default = Auth;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar windowChannel_1 = require(\"./lib/windowChannel\");\n\nexports.Channel = windowChannel_1.Channel;\n\nvar GenericClient_1 = require(\"./lib/comm/GenericClient\");\n\nexports.GenericClient = GenericClient_1.GenericClient;\nexports.AuthorizedGenericClient = GenericClient_1.AuthorizedGenericClient;\n\nvar ServiceClient_1 = require(\"./lib/comm/ServiceClient\");\n\nexports.ServiceClient = ServiceClient_1.ServiceClient;\nexports.AuthorizedServiceClient = ServiceClient_1.AuthorizedServiceClient;\n\nvar DynamicServiceClient_1 = require(\"./lib/comm/DynamicServiceClient\");\n\nexports.DynamicServiceClient = DynamicServiceClient_1.DynamicServiceClient;\n\nvar NarrativeJobService_1 = require(\"./lib/coreServices/NarrativeJobService\");\n\nexports.NarrativeJobServiceClient = NarrativeJobService_1.default;\n\nvar Catalog_1 = require(\"./lib/coreServices/Catalog\");\n\nexports.CatalogClient = Catalog_1.default;\n\nvar auth_1 = require(\"./lib/coreServices/auth\");\n\nexports.AuthClient = auth_1.default;\n\nvar time_1 = require(\"./lib/time\");\n\nexports.niceDuration = time_1.niceDuration;\nexports.niceElapsed = time_1.niceElapsed;\nexports.niceRelativeTime = time_1.niceRelativeTime;\n\nvar Auth_1 = require(\"./lib/Auth\");\n\nexports.Auth = Auth_1.default;\nexports.AuthState = Auth_1.AuthState;","export enum ActionType {\n    MAIN_LOAD = 'main load',\n    MAIN_LOAD_START = 'main load start',\n    MAIN_LOAD_SUCCESS = 'main load success',\n    MAIN_LOAD_ERROR = 'main load error',\n    MAIN_UNLOAD = 'main/unload',\n\n    MY_JOBS_SEARCH = 'my jobs search',\n    MY_JOBS_SEARCH_START = 'my jobs search start',\n    MY_JOBS_SEARCH_SUCCESS = 'my jobs search success',\n    MY_JOBS_SEARCH_ERROR = 'my jobs search error',\n    My_JOBS_REFRESH_SEARCH = 'my jobs refresh search',\n\n    MY_JOBS_CANCEL = 'my jobs cancel',\n    MY_JOBS_CANCEL_START = 'my jobs cancel start',\n    MY_JOBS_CANCEL_SUCCESS = 'my jobs cancel success',\n    MY_JOBS_CANCEL_ERROR = 'my jobs cancel error',\n\n    USER_JOBS_SEARCH = 'user jobs search',\n    USER_JOBS_SEARCH_START = 'user jobs search start',\n    USER_JOBS_SEARCH_SUCCESS = 'user jobs search success',\n    USER_JOBS_SEARCH_ERROR = 'user jobs search error',\n\n    USER_JOBS_CANCEL = 'user jobs cancel',\n    USER_JOBS_CANCEL_START = 'user jobs cancel start',\n    USER_JOBS_CANCEL_SUCCESS = 'user jobs cancel success',\n    USER_JOBS_CANCEL_ERROR = 'user jobs cancel error',\n\n    PUBLIC_APP_STATS_SEARCH = 'publicAppStats/Search',\n    PUBLIC_APP_STATS_SEARCH_START = 'publicAppStats/Search/Start',\n    PUBLIC_APP_STATS_SEARCH_ERROR = 'publicAppStats/Search/Error',\n    PUBLIC_APP_STATS_SEARCH_SUCCESS = 'publicAppStats/Search/Success',\n\n    USER_RUN_SUMMARY_SEARCH = 'userRunSummary/Search',\n    USER_RUN_SUMMARY_SEARCH_START = 'userRunSummary/Search/Start',\n    USER_RUN_SUMMARY_SEARCH_ERROR = 'userRunSummary/Search/Error',\n    USER_RUN_SUMMARY_SEARCH_SUCCESS = 'userRunSummary/Search/Success'\n}\n\n// function fakeJobs() {\n//     function randomStatus(): JobStatus {\n//         const i = Math.floor(Math.random() * 4);\n//         return [JobStatus.QUEUED, JobStatus.RUNNING, JobStatus.FINISHED, JobStatus.ERRORED][i];\n//     }\n\n//     function createJobs(jobCount: number) {\n//         const testJobs: Array<Job> = [];\n\n//         const dayMs = 1000 * 60 * 60 * 24;\n//         const now = Date.now();\n\n//         for (let i = 0; i < jobCount; i++) {\n//             testJobs.push({\n//                 key: 'narrative_id_' + i,\n//                 narrativeTitle: 'narrative ' + i + ' here',\n//                 narrativeID: i,\n//                 appTitle: 'app here',\n//                 appID: String(i),\n//                 submittedAt: new Date(now - dayMs * (jobCount - i)).getTime(),\n//                 queuedAt: new Date(now - dayMs * (jobCount - i)).getTime(),\n//                 runAt: new Date(now - dayMs * (jobCount - i)).getTime(),\n//                 finishAt: new Date(now - dayMs * (jobCount - i)).getTime(),\n//                 queuedElapsed: 1000 * 100 * Math.random(),\n//                 runElapsed: 1000 * 100 * Math.random(),\n//                 status: randomStatus()\n//             });\n//         }\n\n//         return testJobs;\n//     }\n\n//     const jobCount = Math.floor(Math.random() * 200);\n\n//     return createJobs(jobCount);\n// }\n\n// async function fetchMyJobsx(): Promise<Array<Job>> {\n//     return new Promise((resolve, reject) => {\n//         window.setTimeout(() => {\n//             resolve(fakeJobs());\n//         }, 3000);\n//     });\n// }\n\n// All user jobs, for admins.\n// This is separate, because it exposes different information in the view.\n","import { Reducer } from 'react';\nimport { StoreState, SearchState } from '../store';\nimport { Action } from 'redux';\nimport { MyJobsSearchStart, MyJobsSearchSuccess, MyJobsCancelJobSuccess } from '../actions/myJobs';\nimport { ActionType } from '../actions';\n\nfunction myJobsSearchStart(state: StoreState, action: MyJobsSearchStart): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            myJobsView: {\n                ...state.views.myJobsView,\n                searchState: SearchState.SEARCHING\n            }\n        }\n    };\n}\n\nfunction myJobsSearchSuccess(state: StoreState, action: MyJobsSearchSuccess): StoreState {\n    const newState = {\n        ...state,\n        views: {\n            ...state.views,\n            myJobsView: {\n                ...state.views.myJobsView,\n                searchState: SearchState.SEARCHED,\n                rawJobs: action.rawJobs,\n                jobs: action.jobs,\n                jobsFetchedAt: action.jobsFetchedAt,\n                searchExpression: action.searchExpression\n            }\n        }\n    };\n    return newState;\n}\n\nfunction myJobsCancelJobSuccess(state: StoreState, action: MyJobsCancelJobSuccess): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            myJobsView: {\n                ...state.views.myJobsView\n                // TODO: should twiddle a cancellation status for the job.\n            }\n        }\n    };\n}\n\nconst reducer: Reducer<StoreState | undefined, Action> = (state: StoreState | undefined, action: Action) => {\n    if (!state) {\n        return state;\n    }\n    switch (action.type) {\n        case ActionType.MY_JOBS_SEARCH_SUCCESS:\n            return myJobsSearchSuccess(state, action as MyJobsSearchSuccess);\n        case ActionType.MY_JOBS_SEARCH_START:\n            return myJobsSearchStart(state, action as MyJobsSearchStart);\n        case ActionType.MY_JOBS_CANCEL_SUCCESS:\n            return myJobsCancelJobSuccess(state, action as MyJobsCancelJobSuccess);\n    }\n};\n\nexport default reducer;\n","import { StoreState, SearchState } from '../store';\nimport {\n    UserJobsSearchStart,\n    UserJobsSearchSuccess,\n    UserJobsCancelJobStart,\n    UserJobsCancelJobSuccess\n} from '../actions/userJobs';\nimport { Reducer } from 'react';\nimport { Action } from 'redux';\nimport { ActionType } from '../actions';\n\nfunction userJobsSearchStart(state: StoreState, action: UserJobsSearchStart): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            userJobsView: {\n                ...state.views.userJobsView,\n                searchState: SearchState.SEARCHING\n            }\n        }\n    };\n}\n\nfunction userJobsSearchSuccess(state: StoreState, action: UserJobsSearchSuccess): StoreState {\n    const newState = {\n        ...state,\n        views: {\n            ...state.views,\n            userJobsView: {\n                ...state.views.userJobsView,\n                searchState: SearchState.SEARCHED,\n                rawJobs: action.rawJobs,\n                jobs: action.jobs,\n                jobsFetchedAt: action.jobsFetchedAt,\n                searchExpression: action.searchExpression\n            }\n        }\n    };\n    return newState;\n}\n\nfunction cancelJobStart(state: StoreState, action: UserJobsCancelJobStart): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            userJobsView: {\n                ...state.views.userJobsView\n                // TODO: need cancelation state...\n            }\n        }\n    };\n}\n\nfunction cancelJobSuccess(state: StoreState, action: UserJobsCancelJobSuccess): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            userJobsView: {\n                ...state.views.userJobsView\n                // TODO: need cancelation state...\n            }\n        }\n    };\n}\n\nconst reducer: Reducer<StoreState | undefined, Action> = (state: StoreState | undefined, action: Action) => {\n    if (!state) {\n        return state;\n    }\n    switch (action.type) {\n        case ActionType.USER_JOBS_SEARCH_START:\n            return userJobsSearchStart(state, action as UserJobsSearchStart);\n        case ActionType.USER_JOBS_SEARCH_SUCCESS:\n            return userJobsSearchSuccess(state, action as UserJobsSearchSuccess);\n        case ActionType.USER_JOBS_CANCEL_START:\n            return cancelJobStart(state, action as UserJobsCancelJobStart);\n        case ActionType.USER_JOBS_CANCEL_SUCCESS:\n            return cancelJobSuccess(state, action as UserJobsCancelJobSuccess);\n    }\n};\n\nexport default reducer;\n","import { StoreState, ComponentLoadingState } from '../store';\nimport { MainLoadSuccess, Unload } from '../actions/app';\nimport { Reducer } from 'react';\nimport { Action } from 'redux';\nimport { ActionType } from '../actions';\n\nfunction mainLoadSuccess(state: StoreState, action: MainLoadSuccess): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            mainView: {\n                ...state.views.mainView,\n                loadingState: ComponentLoadingState.SUCCESS,\n                isAdmin: action.isAdmin\n            }\n        }\n    };\n}\n\nfunction unload(state: StoreState, action: Unload): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            mainView: {\n                loadingState: ComponentLoadingState.NONE,\n                isAdmin: false,\n                error: null\n            }\n        }\n    };\n}\n\nconst reducer: Reducer<StoreState | undefined, Action> = (state: StoreState | undefined, action: Action) => {\n    if (!state) {\n        return state;\n    }\n    switch (action.type) {\n        case ActionType.MAIN_LOAD_SUCCESS:\n            return mainLoadSuccess(state, action as MainLoadSuccess);\n        case ActionType.MAIN_UNLOAD:\n            return unload(state, action as Unload);\n    }\n};\n\nexport default reducer;\n","import { StoreState, SearchState } from '../store';\nimport { Reducer } from 'react';\nimport { Action } from 'redux';\nimport { ActionType } from '../actions';\nimport { SearchSuccess, SearchStart } from '../actions/publicAppStats';\n\nfunction searchSuccess(state: StoreState, action: SearchSuccess): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            publicAppStatsView: {\n                ...state.views.publicAppStatsView,\n                searchState: SearchState.SEARCHED,\n                appStats: action.appStats\n            }\n        }\n    };\n}\n\nfunction searchStart(state: StoreState, action: SearchStart): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            publicAppStatsView: {\n                ...state.views.publicAppStatsView,\n                searchState: SearchState.SEARCHING\n            }\n        }\n    };\n}\n\nconst reducer: Reducer<StoreState | undefined, Action> = (state: StoreState | undefined, action: Action) => {\n    if (!state) {\n        return state;\n    }\n    switch (action.type) {\n        case ActionType.PUBLIC_APP_STATS_SEARCH_START:\n            return searchStart(state, action as SearchStart);\n        case ActionType.PUBLIC_APP_STATS_SEARCH_SUCCESS:\n            return searchSuccess(state, action as SearchSuccess);\n    }\n};\n\nexport default reducer;\n","import { StoreState, SearchState } from '../store';\nimport { Reducer } from 'react';\nimport { Action } from 'redux';\nimport { ActionType } from '../actions';\nimport { SearchSuccess, SearchStart } from '../actions/userRunSummary';\n\nfunction searchSuccess(state: StoreState, action: SearchSuccess): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            userRunSummaryView: {\n                ...state.views.userRunSummaryView,\n                searchState: SearchState.SEARCHED,\n                userRunSummary: action.userRunSummary\n            }\n        }\n    };\n}\n\nfunction searchStart(state: StoreState, action: SearchStart): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            userRunSummaryView: {\n                ...state.views.userRunSummaryView,\n                searchState: SearchState.SEARCHING\n            }\n        }\n    };\n}\n\nconst reducer: Reducer<StoreState | undefined, Action> = (state: StoreState | undefined, action: Action) => {\n    if (!state) {\n        return state;\n    }\n    switch (action.type) {\n        case ActionType.USER_RUN_SUMMARY_SEARCH_START:\n            return searchStart(state, action as SearchStart);\n        case ActionType.USER_RUN_SUMMARY_SEARCH_SUCCESS:\n            return searchSuccess(state, action as SearchSuccess);\n    }\n};\n\nexport default reducer;\n","import { makeBaseStoreState } from '@kbase/ui-components';\nimport reducer from './reducers';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { AppError } from '@kbase/ui-components';\nimport { BaseStoreState } from '@kbase/ui-components';\n\nexport enum JobStatus {\n    QUEUED = 'QUEUED',\n    RUNNING = 'RUNNING',\n    FINISHED = 'FINISHED',\n    ERRORED = 'ERRORED',\n    CANCELED = 'CANCELED'\n}\n\nexport type JobID = string;\n\n\n\n// export interface Job {\n//     id: JobID;\n//     key: string;\n//     narrativeID: number | null;\n//     narrativeTitle: string;\n//     appID: string;\n//     appTitle: string;\n//     queuedAt: EpochTime;\n//     runAt: EpochTime | null;\n//     finishAt: EpochTime | null;\n//     queuedElapsed: number;\n//     runElapsed: number | null;\n//     status: JobStatus;\n//     message: string;\n//     clientGroups: Array<string>;\n//     username: string;\n// }\n\nexport interface JobQueued {\n    status: JobStatus.QUEUED;\n    id: JobID;\n    key: string;\n    narrativeID: number | null;\n    narrativeTitle: string;\n    appID: string;\n    appTitle: string;\n    queuedAt: EpochTime;\n    queuedElapsed: number;\n    clientGroups: Array<string>;\n    username: string;\n}\n\nexport interface JobRunning {\n    status: JobStatus.RUNNING;\n    id: JobID;\n    key: string;\n    narrativeID: number | null;\n    narrativeTitle: string;\n    appID: string;\n    appTitle: string;\n    queuedAt: EpochTime;\n    runAt: EpochTime;\n    queuedElapsed: number;\n    runElapsed: number;\n    clientGroups: Array<string>;\n    username: string;\n}\n\nexport interface JobFinished {\n    status: JobStatus.FINISHED;\n    id: JobID;\n    key: string;\n    narrativeID: number | null;\n    narrativeTitle: string;\n    appID: string;\n    appTitle: string;\n    queuedAt: EpochTime;\n    runAt: EpochTime;\n    finishAt: EpochTime;\n    queuedElapsed: number;\n    runElapsed: number;\n    clientGroups: Array<string>;\n    username: string;\n}\n\nexport interface JobCanceled {\n    status: JobStatus.CANCELED;\n    id: JobID;\n    key: string;\n    narrativeID: number | null;\n    narrativeTitle: string;\n    appID: string;\n    appTitle: string;\n    queuedAt: EpochTime;\n    runAt: EpochTime;\n    finishAt: EpochTime;\n    queuedElapsed: number;\n    runElapsed: number;\n    clientGroups: Array<string>;\n    username: string;\n}\n\nexport interface JobErrored {\n    status: JobStatus.ERRORED;\n    id: JobID;\n    key: string;\n    narrativeID: number | null;\n    narrativeTitle: string;\n    appID: string;\n    appTitle: string;\n    queuedAt: EpochTime;\n    runAt: EpochTime;\n    finishAt: EpochTime;\n    queuedElapsed: number;\n    runElapsed: number;\n    message: string;\n    clientGroups: Array<string>;\n    username: string;\n}\n\nexport type Job = JobQueued | JobRunning | JobFinished | JobCanceled | JobErrored;\n\ninterface JobsState {\n    jobs: Array<Job>;\n}\n\nexport type EpochTime = number;\n\nexport type TimeRangePresets = 'lastHour' | 'last48Hours' | 'lastWeek' | 'lastMonth';\n\nexport interface TimeRangePreset {\n    kind: 'preset';\n    preset: TimeRangePresets;\n}\n\nexport interface TimeRangeLiteral {\n    kind: 'literal';\n    start: EpochTime;\n    end: EpochTime;\n}\n\nexport type TimeRange = TimeRangePreset | TimeRangeLiteral;\n\nexport interface TimeRange2 {\n    preset: TimeRangePresets;\n    start: EpochTime | null;\n    end: EpochTime | null;\n}\n\nexport interface JobsSearchExpression {\n    query: string;\n    timeRange: TimeRange;\n    // timeRangeStart: EpochTime;\n    // timeRangeEnd: EpochTime;\n    jobStatus: Array<JobStatus>;\n    forceSearch: boolean;\n}\n\nexport enum SearchState {\n    NONE = 0,\n    SEARCHING,\n    SEARCHED,\n    ERROR\n}\n\nexport enum ComponentLoadingState {\n    NONE = 0,\n    LOADING,\n    SUCCESS,\n    ERROR\n}\n\n// The Store!\n\nexport interface MainView {\n    loadingState: ComponentLoadingState;\n    error: AppError | null;\n    isAdmin: boolean;\n}\n\nexport interface MyJobsView {\n    searchState: SearchState;\n    searchExpression: JobsSearchExpression | null;\n    jobsFetchedAt: EpochTime | null;\n    rawJobs: Array<Job>;\n    jobs: Array<Job>;\n}\n\nexport interface UserJobsView {\n    searchState: SearchState;\n    searchExpression: JobsSearchExpression | null;\n    jobsFetchedAt: EpochTime | null;\n    rawJobs: Array<Job>;\n    jobs: Array<Job>;\n}\n\nexport interface MyStoreState {\n    views: {\n        mainView: MainView;\n        myJobsView: MyJobsView;\n        userJobsView: UserJobsView;\n        publicAppStatsView: PublicAppStatsView;\n        userRunSummaryView: UserRunSummaryView;\n    };\n}\n\nexport interface StoreState extends BaseStoreState, MyStoreState {\n    // entities: {\n    //     jobs: {\n    //         byId: Map<string, Job>\n    //     }\n    // },\n\n}\n\n// App Stats\n\nexport interface PublicAppStatsQuery {\n    query: string;\n}\n\nexport interface PublicAppStatsView {\n    searchState: SearchState;\n    rawAppStats: Array<AppStat>;\n    appStats: Array<AppStat>;\n    query: PublicAppStatsQuery;\n}\n\nexport interface AppStat {\n    appId: string;\n    functionId: string;\n    functionTitle: string;\n    moduleId: string;\n    moduleTitle: string;\n    runCount: number;\n    errorCount: number;\n    successRate: number;\n    averageRunTime: number;\n    averageQueueTime: number;\n    totalRunTime: number;\n}\n\n/**\n * User Run Summary types\n */\n\nexport interface UserRunSummaryQuery {\n    query: string;\n}\n\nexport interface UserRunSummaryStat {\n    username: string;\n    appId: string;\n    moduleId: string;\n    functionId: string;\n    runCount: number;\n}\n\nexport interface UserRunSummaryView {\n    searchState: SearchState;\n    userRunSummary: Array<UserRunSummaryStat>;\n    query: UserRunSummaryQuery;\n}\n\nexport function makeInitialStoreState(): StoreState {\n    const jobs: Array<Job> = [];\n    const baseState = makeBaseStoreState();\n    return {\n        ...baseState,\n        views: {\n            mainView: {\n                loadingState: ComponentLoadingState.NONE,\n                error: null,\n                isAdmin: false\n            },\n            myJobsView: {\n                searchState: SearchState.NONE,\n                searchExpression: null,\n                jobsFetchedAt: null,\n                rawJobs: jobs,\n                jobs\n            },\n            userJobsView: {\n                searchState: SearchState.NONE,\n                searchExpression: null,\n                jobsFetchedAt: null,\n                rawJobs: jobs,\n                jobs\n            },\n            publicAppStatsView: {\n                searchState: SearchState.NONE,\n                rawAppStats: [],\n                appStats: [],\n                query: {\n                    query: ''\n                }\n            },\n            userRunSummaryView: {\n                searchState: SearchState.NONE,\n                userRunSummary: [],\n                query: {\n                    query: ''\n                }\n            }\n        }\n    };\n}\n\nexport function createReduxStore() {\n    return createStore(reducer, makeInitialStoreState(), compose(applyMiddleware(thunk)));\n}\n","import { Action, Reducer } from 'redux';\nimport { StoreState } from '../store';\n\nimport { baseReducer } from '@kbase/ui-components';\nimport { BaseStoreState } from '@kbase/ui-components';\nimport myJobsReducer from './myJobs';\nimport userJobsReducer from './userJobs';\nimport appReducer from './app';\nimport publicAppStatsReducer from './publicAppStats';\nimport userRunSummary from './userRunSummary';\n\n// export default function reducer<StoreState, Action>(state: StoreState, action: Action): StoreState {\n//     return state;\n// }\n\nconst reducer: Reducer<StoreState | undefined, Action> = (state: StoreState | undefined, action: Action) => {\n    // TODO: we cast state to baseStore state, which should be fine since StoreState extends BaseStoreState.\n    // and then we recast to store state when returning to make ts happy; the actual state object which passes\n    // into and ...\n    // WARNING: this may break if a base reducer (app or auth) does not copy all the state with ...state.\n    // we probably need to use combine reducers?\n    const baseState = baseReducer(state as BaseStoreState, action);\n    if (baseState) {\n        return baseState as StoreState;\n    }\n    return (\n        appReducer(state, action) ||\n        myJobsReducer(state, action) ||\n        userJobsReducer(state, action) ||\n        publicAppStatsReducer(state, action) ||\n        userRunSummary(state, action) ||\n        state\n    );\n};\n\nexport default reducer;\n","import React from 'react';\nimport { Tag, Icon } from 'antd';\nimport { JobStatus } from '../redux/store';\n\n/**\n* Translates a job status value to a label, with optional icon, suitable for\n* display as the child of the job status tag.\n*\n* @param status - the status of the job\n*\n* @note Since the switch is over an enum, we don't have to worry about the default case\n*/\nfunction jobStatusLabel(status: JobStatus): JSX.Element | string {\n    switch (status) {\n        case JobStatus.QUEUED:\n            return (\n                <span>\n                    <Icon type=\"loading\" spin /> Queued\n                </span>\n            );\n        case JobStatus.RUNNING:\n            return (\n                <span>\n                    <Icon type=\"loading-3-quarters\" spin /> Running\n                </span>\n            );\n        case JobStatus.CANCELED:\n            return 'Canceled';\n        case JobStatus.FINISHED:\n            return 'Success';\n        case JobStatus.ERRORED:\n            return 'Errored';\n        default:\n            throw new Error('Invalid job status');\n    }\n}\n\n/**\n * Translates a job status value to a color value acceptable for the color\n * prop for the job status tag.\n *\n * @param status - the status of the job\n */\nexport function jobColor(status: JobStatus): string {\n    switch (status) {\n        case JobStatus.QUEUED:\n            return 'orange';\n        case JobStatus.RUNNING:\n            return 'blue';\n        case JobStatus.CANCELED:\n            return 'gray';\n        case JobStatus.FINISHED:\n            return 'green';\n        case JobStatus.ERRORED:\n            return 'red';\n        default:\n            throw new Error('Invalid job status');\n    }\n}\n\nexport interface JobStatusProps {\n    jobStatus: JobStatus\n}\n\ninterface JobStatusState {\n\n}\n\nexport default class JobStatusComponent extends React.Component<JobStatusProps, JobStatusState> {\n    render() {\n        const label = jobStatusLabel(this.props.jobStatus);\n        const color = jobColor(this.props.jobStatus);\n        return <Tag color={color}>{label}</Tag>;\n    }\n}","import React from 'react';\nimport './style.css';\nimport { Job, JobStatus } from '../../redux/store';\nimport { JobLogLine, JobLog } from './state';\nimport { Table, Tooltip, Empty, Button, Dropdown, Menu, Spin } from 'antd';\nimport { ClickParam } from 'antd/lib/menu';\nimport Papa from 'papaparse';\nimport ButtonGroup from 'antd/lib/button/button-group';\n\nenum PlayState {\n    NONE,\n    PLAYING,\n    PAUSED,\n    DISABLED\n}\n\nexport interface JobLogProps {\n    job: Job;\n    log: JobLog;\n}\n\ninterface JobLogState {\n    playState: PlayState;\n    isPaused: boolean;\n}\n\nexport default class JobLogs extends React.Component<JobLogProps, JobLogState> {\n    playLogTimer: number;\n    bodyRef: React.RefObject<HTMLDivElement>\n    // a hack to detect state change... \n    currentJobStatus: JobStatus | null;\n\n    constructor(params: JobLogProps) {\n        super(params);\n        this.playLogTimer = 0;\n        this.bodyRef = React.createRef();\n        this.currentJobStatus = null;\n        this.state = {\n            playState: PlayState.NONE,\n            isPaused: false\n        }\n    }\n    componentDidMount() {\n        this.currentJobStatus = this.props.job.status;\n        if (this.bodyRef.current === null) {\n            return;\n        }\n        // if (this.state.playState !== PlayState.PLAYING) {\n        //     return;\n        // }\n        if (this.state.isPaused) {\n            return;\n        }\n        if (!this.isActive()) {\n            return;\n        }\n        this.bodyRef.current.scrollTop = this.bodyRef.current.clientHeight;\n\n    }\n    componentDidUpdate() {\n        const lastJobStatus = this.currentJobStatus;\n        this.currentJobStatus = this.props.job.status;\n        if (this.bodyRef.current === null) {\n            return;\n        }\n        // if (this.state.playState !== PlayState.PLAYING) {\n        //     return;\n        // }\n        if (this.state.isPaused) {\n            return;\n        }\n        if (!this.isActive()) {\n            if (lastJobStatus === JobStatus.RUNNING &&\n                this.props.job.status === JobStatus.RUNNING) {\n                return;\n            }\n        }\n        this.bodyRef.current.scrollTop = this.bodyRef.current.clientHeight;\n    }\n    isActive() {\n        return this.props.job.status === JobStatus.QUEUED ||\n            this.props.job.status === JobStatus.RUNNING;\n    }\n    renderLastLine() {\n        let message;\n\n        if (this.isActive()) {\n            message = <Spin size=\"small\" />\n        } else {\n            message = <div style={{ textAlign: 'center', fontStyle: 'italic' }}>Log complete</div>\n        }\n        return (\n            <div className=\"FlexTable-row\" key='END' style={{ backgroundColor: 'rgba(200, 200, 200, 0.5)' }} data-end=\"end\">\n                <div className=\"FlexTable-col\"></div>\n                <div className=\"FlexTable-col\">{message}</div>\n            </div>\n        )\n    }\n    renderJobLog() {\n        const lines = this.props.log;\n        if (lines.length === 0) {\n            return (\n                <Empty />\n            )\n        }\n        const rows = lines.map((line) => {\n            const rowStyle: React.CSSProperties = {};\n            if (line.isError) {\n                rowStyle.color = 'red';\n            }\n            return <div className=\"FlexTable-row\" style={rowStyle} key={line.lineNumber}>\n                <div className=\"FlexTable-col\">\n                    {line.lineNumber}\n                </div>\n                <div className=\"FlexTable-col\">\n                    {line.line}\n                </div>\n            </div>\n        })\n        rows.push(\n            this.renderLastLine()\n        )\n        return (\n            <div className=\"FlexTable\" key=\"log\">\n                <div className=\"FlexTable-header\">\n                    <div className=\"FlexTable-row\">\n                        <div className=\"FlexTable-col\">Line #</div>\n                        <div className=\"FlexTable-col\">Log line</div>\n                    </div>\n                </div>\n                <div className=\"FlexTable-body\" ref={this.bodyRef}>\n                    {rows}\n                </div>\n            </div>\n        )\n    }\n\n    renderJobLogRow() {\n\n    }\n    renderJobLogLines() {\n        return (\n            <Table\n                dataSource={this.props.log}\n                size=\"small\"\n                // scroll={{ y: 400 }}\n                rowKey={(logLine: JobLogLine) => {\n                    return String(logLine.lineNumber);\n                }}\n                // pagination={{ position: 'top', showSizeChanger: true }}\n                pagination={false}\n                scroll={{ y: '100%' }}\n                rowClassName={(line: JobLogLine) => {\n                    if (line.isError) {\n                        return 'JobLog-errorRow';\n                    } else {\n                        return 'JobLog-normalRow';\n                    }\n                }}\n            >\n                <Table.Column\n                    title=\"Row\"\n                    dataIndex=\"lineNumber\"\n                    key=\"lineNumber\"\n                    width=\"8%\"\n                    render={(lineNumber: number, logLine: JobLogLine) => {\n                        const numberDisplay = new Intl.NumberFormat('en-US', { useGrouping: true }).format(lineNumber);\n                        if (logLine.isError) {\n                            return <span className=\"JobLog-errorText\">{numberDisplay}</span>;\n                        }\n                        return numberDisplay;\n                    }}\n                    sorter={(a: JobLogLine, b: JobLogLine) => {\n                        return a.lineNumber - b.lineNumber;\n                    }}\n                />\n                <Table.Column\n                    title=\"Log line\"\n                    dataIndex=\"line\"\n                    key=\"line\"\n                    width=\"92%\"\n                    render={(line: string, logLine: JobLogLine) => {\n                        let row;\n                        if (logLine.isError) {\n                            row = <span className=\"JobLog-errorText\">{line}</span>;\n                        } else {\n                            row = <span>{line}</span>;\n                        }\n                        return <Tooltip title={line}>{row}</Tooltip>;\n                    }}\n                />\n            </Table>\n        );\n    }\n    downloadLog(type: string, log: JobLog) {\n        function download(filename: string, contentType: string, content: string) {\n            const downloadLink = document.createElement('a');\n            const downloadContent = new Blob([content]);\n            downloadLink.href = URL.createObjectURL(downloadContent);\n            downloadLink.download = filename;\n            downloadLink.style.visibility = 'none';\n            downloadLink.type = contentType;\n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n            URL.revokeObjectURL(downloadLink.href);\n        }\n        function logToCSV(log: JobLog): string {\n            return Papa.unparse(log);\n        }\n        function logToTSV(log: JobLog): string {\n            return Papa.unparse(log, {\n                delimiter: '\\t'\n            });\n        }\n        function logToJSON(log: JobLog): string {\n            return JSON.stringify(log);\n        }\n\n        let contentType: string;\n        let content: string;\n        switch (type) {\n            case 'tsv':\n                contentType = 'application/octet-stream'\n                content = logToTSV(log);\n                break;\n            case 'json':\n                contentType = 'application/octet-stream'\n                content = logToJSON(log);\n                break;\n            default:\n            case 'csv':\n                contentType = 'application/octet-stream'\n                content = logToCSV(log);\n                break;\n        }\n\n        download('job-log.' + type, contentType, content)\n\n    }\n    onMenuClick(param: ClickParam | undefined) {\n        if (!param) {\n            return\n        }\n        this.downloadLog(param.key, this.props.log);\n    }\n    onPlayLog() {\n        // this.props.updateJobLog();\n        this.setState({\n            playState: PlayState.PLAYING,\n            isPaused: false\n        })\n    }\n    onPauseLog() {\n        this.setState({\n            playState: PlayState.PAUSED,\n            isPaused: true\n        })\n    }\n    renderPlayPause() {\n        let irrelevant: boolean;\n\n        // Does the job status make log playing irrelevant.\n        switch (this.props.job.status) {\n            case JobStatus.QUEUED:\n                irrelevant = true;\n                break;\n            case JobStatus.RUNNING:\n                irrelevant = false;\n                break;\n            case JobStatus.FINISHED:\n            case JobStatus.ERRORED:\n            case JobStatus.CANCELED:\n            default:\n                irrelevant = true;\n        }\n\n        let spinning: boolean;\n        // switch (this.state.playState) {\n        //     case PlayState.NONE:\n        //         spinning = false;\n        //         break;\n        //     case PlayState.PLAYING:\n        //         spinning = true;\n        //         break;\n        //     case PlayState.PAUSED:\n        //     case PlayState.DISABLED:\n        //     default:\n        //         spinning = false;\n        // }\n        if (this.state.isPaused || !(this.props.job.status === JobStatus.QUEUED || this.props.job.status === JobStatus.RUNNING)) {\n            spinning = false;\n        } else {\n            spinning = true;\n        }\n\n        return (\n            <ButtonGroup >\n                <Button icon=\"caret-right\" disabled={irrelevant || !this.state.isPaused} onClick={this.onPlayLog.bind(this)} />\n                <Button icon=\"pause\" disabled={irrelevant || this.state.isPaused} onClick={this.onPauseLog.bind(this)} />\n                {' '}\n                <Spin spinning={spinning} />\n            </ButtonGroup>\n        )\n    }\n    renderToolbar() {\n        const disabled = this.props.log.length === 0;\n        const menu = (\n            <Menu onClick={this.onMenuClick.bind(this)}>\n                <Menu.Item key=\"csv\" disabled={disabled}>CSV</Menu.Item>\n                <Menu.Item key=\"tsv\" disabled={disabled}>TSV</Menu.Item>\n                <Menu.Item key=\"json\" disabled={disabled}>JSON</Menu.Item>\n            </Menu>\n        )\n        return (\n            <div key=\"toolbar\">\n                <Dropdown overlay={menu}>\n                    <Button icon=\"download\"></Button>\n                </Dropdown>\n                {' '}\n                {this.renderPlayPause()}\n            </div>\n        )\n    }\n    render() {\n        return <div className=\"JobLog\">\n            {this.renderToolbar()}\n            {this.renderJobLog()}\n        </div>\n    }\n    // render() {\n    //     return this.renderJobLog();\n    // }\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport './FlexTabs.css';\n\nexport interface Tab {\n    tab: string;\n    title: string;\n    component: JSX.Element\n}\n\nexport interface TabsProps {\n    tabs: Array<Tab>\n}\n\ninterface TabsState {\n    selectedTabIndex: number;\n}\n\nexport default class Tabs extends React.Component<TabsProps, TabsState> {\n    constructor(props: TabsProps) {\n        super(props);\n        this.state = {\n            selectedTabIndex: 0\n        };\n    }\n\n    selectTab(tabIndex: number) {\n        this.setState({ selectedTabIndex: tabIndex })\n    }\n\n    renderTabs() {\n        return this.props.tabs.map((tab, index) => {\n            const classNames = ['FlexTabs-tab']\n            if (index === this.state.selectedTabIndex) {\n                classNames.push('FlexTabs-tab-active');\n            }\n            return (\n                <span key={String(index)} className={classNames.join(' ')}>\n                    <Button type=\"link\" onClick={() => { this.selectTab(index) }}>{tab.title}</Button>\n                </span>\n            )\n        })\n    }\n\n    renderTabBody() {\n        return this.props.tabs[this.state.selectedTabIndex].component\n    }\n\n    render() {\n        return <div className=\"FlexTabs\">\n            <div className=\"FlexTabs-header\">\n                {this.renderTabs()}\n            </div>\n            <div className=\"FlexTabs-body\">\n                {this.renderTabBody()}\n            </div>\n        </div>\n    }\n}","import React from 'react';\nimport { Job, JobStatus } from '../redux/store';\nimport { NiceRelativeTime, NiceElapsedTime } from '@kbase/ui-components';\nimport JobStatusBadge, { jobColor } from './JobStatus';\nimport { Spin } from 'antd';\n\nexport interface Props {\n    job: Job\n}\n\ninterface State {\n\n}\n\nexport default class JobInfo extends React.Component<Props, State> {\n    renderSubmitted() {\n        const date = this.props.job.queuedAt\n        if (!date) {\n            return <span>** empty **</span>;\n        }\n        return <NiceRelativeTime time={new Date(date)} />;\n    }\n    renderQueuedFor() {\n        const job = this.props.job;\n        switch (job.status) {\n            case JobStatus.QUEUED:\n                return <NiceElapsedTime from={job.queuedAt} precision={2} useClock={true} />;\n            case JobStatus.RUNNING:\n                return <NiceElapsedTime from={job.queuedAt} to={job.runAt} precision={2} />;\n            case JobStatus.FINISHED:\n                return <NiceElapsedTime from={job.queuedAt} to={job.runAt} precision={2} />;\n            case JobStatus.CANCELED:\n                return <NiceElapsedTime from={job.queuedAt} to={job.runAt} precision={2} />;\n            case JobStatus.ERRORED:\n                return <NiceElapsedTime from={job.queuedAt} to={job.runAt} precision={2} />;\n        }\n    }\n    renderRunFor() {\n        const job = this.props.job;\n        switch (job.status) {\n            case JobStatus.QUEUED:\n                return <span>-</span>;\n            case JobStatus.RUNNING:\n                return <NiceElapsedTime from={job.runAt} precision={2} useClock={true} />;\n            case JobStatus.FINISHED:\n                return <NiceElapsedTime from={job.runAt} to={job.finishAt} precision={2} />;\n            case JobStatus.CANCELED:\n                return <NiceElapsedTime from={job.runAt} to={job.finishAt} precision={2} />;\n            case JobStatus.ERRORED:\n                return <NiceElapsedTime from={job.runAt} to={job.finishAt} precision={2} />;\n        }\n        // console.log('run for', this.props.job);\n        // if (!this.props.job.runElapsed) {\n        //     return <span>-</span>\n        // }\n        // return <NiceElapsedTime duration={this.props.job.runElapsed} precision={2} />;\n    }\n\n    renderStateSpinner(jobStatus: JobStatus) {\n        if (this.props.job.status === jobStatus) {\n            return <span>\n                {' '}\n                <Spin size=\"small\" style={{ color: jobColor(jobStatus) }} />\n            </span>\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"JobInfo InfoTable\">\n                <div className=\"InfoTable-row\">\n                    <div className=\"InfoTable-labelCol\">\n                        Job ID\n                    </div>\n                    <div className=\"InfoTable-dataCol\">\n                        {this.props.job.id}\n                    </div>\n                </div>\n                <div className=\"InfoTable-row\">\n                    <div className=\"InfoTable-labelCol\">\n                        Status\n                    </div>\n                    <div className=\"InfoTable-dataCol\">\n                        <JobStatusBadge jobStatus={this.props.job.status} />\n                    </div>\n                </div>\n                <div className=\"InfoTable-row\">\n                    <div className=\"InfoTable-labelCol\">\n                        Narrative\n                    </div>\n                    <div className=\"InfoTable-dataCol\">\n                        <a\n                            href={`/narrative/${this.props.job.narrativeID}`}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {this.props.job.narrativeTitle}\n                        </a>\n                    </div>\n                </div>\n                <div className=\"InfoTable-row\">\n                    <div className=\"InfoTable-labelCol\">\n                        App\n                    </div>\n                    <div className=\"InfoTable-dataCol\">\n                        <a href={`/#catalog/apps/${this.props.job.appID}`}>{this.props.job.appTitle}</a>\n                    </div>\n                </div>\n                <div className=\"InfoTable-row\">\n                    <div className=\"InfoTable-labelCol\">\n                        Submitted\n                    </div>\n                    <div className=\"InfoTable-dataCol\">\n                        {this.renderSubmitted()}\n                    </div>\n                </div>\n                <div className=\"InfoTable-row\">\n                    <div className=\"InfoTable-labelCol\">\n                        Queued For\n                    </div>\n                    <div className=\"InfoTable-dataCol\">\n                        {this.renderQueuedFor()}\n                        {this.renderStateSpinner(JobStatus.QUEUED)}\n                    </div>\n                </div>\n                <div className=\"InfoTable-row\">\n                    <div className=\"InfoTable-labelCol\">\n                        Run For\n                </div>\n                    <div className=\"InfoTable-dataCol\">\n                        {this.renderRunFor()}\n                        {this.renderStateSpinner(JobStatus.RUNNING)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport { Spin, Alert } from 'antd';\nimport FlexTabs from './FlexTabs';\nimport JobLog from '../JobLog/view';\nimport JobInfo from '../JobInfo';\nimport './style.css'\nimport { JobLogView, JobLogState, JobLogViewError } from './state';\n\nexport interface Props {\n    view: JobLogView\n}\n\ninterface State {\n}\n\nexport default class JobDetail extends React.Component<Props, State> {\n    renderLoading() {\n        return (\n            <div className=\"FullyCenteredBox\">\n                <span>Loading ... <Spin /></span>\n            </div>\n        );\n    }\n\n    renderQueued() {\n        return (\n            <div className=\"FullyCenteredBox\">\n                <span>\n                    The job is <i>queued</i>. The log will be displayed when the job starts running ... <Spin />\n                </span>\n            </div >\n        );\n    }\n\n    renderError(view: JobLogViewError) {\n        return (\n            <Alert type=\"error\" message={view.error} />\n        )\n    }\n\n    renderJobLog() {\n        switch (this.props.view.status) {\n            case JobLogState.NONE:\n            case JobLogState.JOB_QUEUED:\n                return this.renderQueued();\n            case JobLogState.INITIAL_LOADING:\n                return this.renderLoading();\n            case JobLogState.ERROR:\n                return this.renderError(this.props.view);\n            case JobLogState.ACTIVE_LOADED:\n            case JobLogState.ACTIVE_LOADING:\n                return <JobLog job={this.props.view.job} log={this.props.view.log} />;\n            case JobLogState.FINISHED_LOADED:\n                return <JobLog job={this.props.view.job} log={this.props.view.log} />;\n        }\n    }\n    renderJobInfo() {\n        switch (this.props.view.status) {\n            case JobLogState.NONE:\n                return this.renderLoading();\n            case JobLogState.JOB_QUEUED:\n                return <JobInfo job={this.props.view.job} />;\n            case JobLogState.INITIAL_LOADING:\n                return this.renderLoading();\n            case JobLogState.ERROR:\n                return this.renderError(this.props.view);\n            case JobLogState.ACTIVE_LOADED:\n            case JobLogState.ACTIVE_LOADING:\n                return <JobInfo job={this.props.view.job} />;\n            case JobLogState.FINISHED_LOADED:\n                return <JobInfo job={this.props.view.job} />;\n        }\n    }\n    renderTest() {\n        const content = Array.from(Array(100).keys()).map((i) => {\n            return <div style={{ flex: '0 0 auto', display: 'flex', flexDirection: 'row', borderBottom: '1px silver solid' }} key={String(i)}>\n                <div style={{ flex: '0 0 auto', padding: '4px', overflowWrap: 'break-word', wordWrap: 'break-word' }}>\n                    {i}\n                </div>\n            </div>\n        });\n        return (\n            <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'column', minHeight: 0 }}>\n                <div>Header Here</div>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'column', minHeight: 0, overflowY: 'auto' }}>\n                    {content}\n                </div>\n            </div>\n        )\n    }\n    renderTest2() {\n        const content = Array.from(Array(100).keys()).map((i) => {\n            return <div className=\"FlexTable-row\" key={String(i)}>\n                <div className=\"FlexTable-col\">{i}</div>\n                <div className=\"FlexTable-col\">This is row {i}</div>\n            </div>\n        });\n        return (\n            <div className=\"FlexTable\">\n                <div className=\"FlexTable-header\">\n                    <div className=\"FlexTable-row\">\n                        <div className=\"FlexTable-col\">#</div>\n                        <div className=\"FlexTable-col\">Data</div>\n                    </div>\n                </div>\n                <div className=\"FlexTable-body\">\n                    {content}\n                </div>\n            </div>\n        )\n    }\n    render() {\n        const tabs = [\n            {\n                tab: 'log',\n                title: 'Log',\n                component: this.renderJobLog()\n            },\n            {\n                tab: 'detail',\n                title: 'Detail',\n                component: this.renderJobInfo()\n            },\n            // {\n            //     tab: 'test',\n            //     title: 'Test',\n            //     component: this.renderTest()\n            // },\n            // {\n            //     tab: 'test2',\n            //     title: 'Test2',\n            //     component: this.renderTest2()\n            // }\n        ]\n        return (\n            <FlexTabs tabs={tabs} />\n        )\n    }\n    // render() {\n    //     return (\n    //         <Tabs className=\"FullHeightTabs\" defaultActiveKey=\"log\" animated={false} >\n    //             <Tabs.TabPane tab=\"log\" key=\"log\" forceRender={false}>\n    //                 {this.renderJobLog()}\n    //             </Tabs.TabPane>\n    //             <Tabs.TabPane tab=\"detail\" key=\"detail\" forceRender={false}>\n    //                 {this.renderJobInfo()}\n    //             </Tabs.TabPane>\n    //         </Tabs>\n    //     )\n    // }\n}","import { DynamicServiceClient, DynamicServiceClientParams } from '@kbase/ui-lib';\n\n// Metrics client --\n// TODO: move\n// TODO: use a more dynamic dynamic service client??\n\ninterface MetricsServiceParams extends DynamicServiceClientParams { }\n\n\nexport interface JobState {\n    app_id: string;\n    client_groups: Array<string>;\n    user?: string;\n\n    complete: boolean;\n    error: boolean;\n    status: string;\n    state: string;\n\n    creation_time: number;\n    exec_start_time?: number;\n    modification_time?: number;\n    finish_time?: number;\n\n    job_id: string;\n    method: string;\n\n    wsid: string;\n    narrative_objNo: number;\n\n    narrative_name: string;\n    workspace_name: string;\n}\n\n\ninterface GetAppMetricsParam {\n    epoch_range: [number, number];\n    user_ids: Array<string>;\n}\ninterface GetAppMetricsResult {\n    job_states: Array<JobState>;\n}\n\ninterface GetJobsParam {\n    epoch_range: [number, number];\n    user_ids: Array<string>;\n}\ninterface GetJobsResult {\n    job_states: Array<JobState>;\n    total_count: number;\n}\n\ninterface GetJobParam {\n    job_id: string;\n}\ninterface GetJobResult {\n    job_state: JobState;\n}\n\nexport default class MetricsServiceClient extends DynamicServiceClient {\n    static module: string = 'kb_Metrics';\n\n    async getJobs({ epoch_range, user_ids }: GetJobsParam): Promise<GetJobsResult> {\n        const result = await this.callFunc<[GetJobsParam], [GetJobsResult]>('get_jobs', [\n            {\n                epoch_range,\n                user_ids\n            }\n        ]);\n        return result[0];\n    }\n\n    async getJob({ job_id }: GetJobParam): Promise<GetJobResult> {\n        const result = await this.callFunc<[GetJobParam], [GetJobResult]>('get_job', [\n            {\n                job_id\n            }\n        ]);\n        return result[0];\n    }\n\n    async getAppMetrics({ epoch_range, user_ids }: GetAppMetricsParam): Promise<GetAppMetricsResult> {\n        const result = await this.callFunc<[GetAppMetricsParam], [GetAppMetricsResult]>('get_job', [\n            {\n                epoch_range,\n                user_ids\n            }\n        ]);\n        return result[0];\n    }\n}\n","import { JobStatus, Job, EpochTime, TimeRangePresets, TimeRange, JobQueued, JobRunning, JobFinished, JobCanceled, JobErrored } from '../store';\nimport { JobState } from '../../lib/MetricsServiceClient';\n\nfunction getJobStatus(job: JobState): JobStatus {\n    switch (job.state) {\n        case 'QUEUED': return JobStatus.QUEUED;\n        case 'RUNNING': return JobStatus.RUNNING;\n        case 'FINISHED': return JobStatus.FINISHED;\n        case 'CANCELED': return JobStatus.CANCELED;\n        case 'ERRORED': return JobStatus.ERRORED;\n        case 'QUEUE_ERRORED':\n            console.warn('QUEUE_ERRORED', job);\n            return JobStatus.ERRORED;\n        default:\n            throw new Error('Unknown job state: ' + job.state)\n    }\n    // Use most reliable fields first.\n    // if (job.complete) {\n    //     if (job.error) {\n    //         return JobStatus.ERRORED;\n    //     } else {\n    //         if (job.status === 'done') {\n    //             return JobStatus.FINISHED;\n    //         }\n    //         if (job.status.startsWith('canceled')) {\n    //             return JobStatus.CANCELED;\n    //         }\n    //         if (job.status === 'Unknown error') {\n    //             return JobStatus.ERRORED;\n    //         }\n    //         return JobStatus.ERRORED;\n    //         // TODO: handle this error by creating a new job state - UNKNOWN\n    //         // console.log('detection error', job);\n    //         // throw new Error('Cannot detect job state');\n    //     }\n    // } else {\n    //     if (!job.status || job.status === 'queued') {\n    //         return JobStatus.QUEUED;\n    //     }\n    //     // Various status values indicate the job is running, but\n    //     // we don't need any more evidence because that is the only possible\n    //     // other job state.\n    //     // E.g. 'in-progress', 'running', 'starting job so that it can be finished'\n\n    //     return JobStatus.RUNNING;\n    // }\n\n    // if (job.status === 'Unknown error') {\n    //     return JobStatus.ERRORED;\n    // }\n    // console.log('detection error', job);\n    // throw new Error('Cannot detect job state');\n}\n\nfunction makeJobQueued(job: JobState, username: string): JobQueued {\n    let narrativeID;\n    if (job.wsid) {\n        narrativeID = parseInt(job.wsid, 10);\n    } else {\n        narrativeID = null;\n    }\n    return {\n        key: job.job_id,\n        id: job.job_id,\n        status: JobStatus.QUEUED,\n        appID: job.app_id,\n        appTitle: job.app_id,\n        narrativeID,\n        narrativeTitle: job.narrative_name,\n        queuedAt: job.creation_time,\n        // runAt: job.exec_start_time! || null,\n        queuedElapsed: Date.now() - job.creation_time,\n        clientGroups: job.client_groups,\n        // TODO: a more affirmative method of providing current username\n        // for querying for own...?\n        username: job.user || username\n    };\n}\n\nfunction makeJobRunning(job: JobState, username: string): JobRunning {\n    let narrativeID;\n    if (job.wsid) {\n        narrativeID = parseInt(job.wsid, 10);\n    } else {\n        narrativeID = null;\n    }\n    if (!job.exec_start_time) {\n        throw new Error('Running job without exec_start_time!')\n    }\n    return {\n        key: job.job_id,\n        id: job.job_id,\n        status: JobStatus.RUNNING,\n        appID: job.app_id,\n        appTitle: job.app_id,\n        narrativeID,\n        narrativeTitle: job.narrative_name,\n        queuedAt: job.creation_time,\n        runAt: job.exec_start_time,\n        runElapsed: Date.now() - job.exec_start_time,\n        queuedElapsed: Date.now() - job.creation_time,\n        clientGroups: job.client_groups,\n        // TODO: a more affirmative method of providing current username\n        // for querying for own...?\n        username: job.user || username\n    };\n}\n\nfunction makeJobFinished(job: JobState, username: string): JobFinished {\n    let narrativeID;\n    if (job.wsid) {\n        narrativeID = parseInt(job.wsid, 10);\n    } else {\n        narrativeID = null;\n    }\n    if (!job.exec_start_time) {\n        throw new Error('Running job without exec_start_time!')\n    }\n    if (!job.finish_time) {\n        throw new Error('Running job without finish_time!')\n    }\n    return {\n        key: job.job_id,\n        id: job.job_id,\n        status: JobStatus.FINISHED,\n        appID: job.app_id,\n        appTitle: job.app_id,\n        narrativeID,\n        narrativeTitle: job.narrative_name,\n        queuedAt: job.creation_time,\n        runAt: job.exec_start_time,\n        runElapsed: job.finish_time - job.exec_start_time,\n        finishAt: job.finish_time,\n        queuedElapsed: Date.now() - job.creation_time,\n        clientGroups: job.client_groups,\n        // TODO: a more affirmative method of providing current username\n        // for querying for own...?\n        username: job.user || username\n    };\n}\n\nfunction makeJobCanceled(job: JobState, username: string): JobCanceled {\n    let narrativeID;\n    if (job.wsid) {\n        narrativeID = parseInt(job.wsid, 10);\n    } else {\n        narrativeID = null;\n    }\n    if (!job.exec_start_time) {\n        throw new Error('Canceled job without exec_start_time!')\n    }\n    if (!job.finish_time) {\n        throw new Error('Canceled job without finish_time!')\n    }\n    return {\n        key: job.job_id,\n        id: job.job_id,\n        status: JobStatus.CANCELED,\n        appID: job.app_id,\n        appTitle: job.app_id,\n        narrativeID,\n        narrativeTitle: job.narrative_name,\n        queuedAt: job.creation_time,\n        runAt: job.exec_start_time,\n        runElapsed: job.finish_time - job.exec_start_time,\n        finishAt: job.finish_time,\n        queuedElapsed: Date.now() - job.creation_time,\n        clientGroups: job.client_groups,\n        // TODO: a more affirmative method of providing current username\n        // for querying for own...?\n        username: job.user || username\n    };\n}\n\nfunction makeJobErrored(job: JobState, username: string): JobErrored {\n    let narrativeID;\n    if (job.wsid) {\n        narrativeID = parseInt(job.wsid, 10);\n    } else {\n        narrativeID = null;\n    }\n    if (!job.exec_start_time) {\n        throw new Error('Errored job without exec_start_time!')\n    }\n    if (!job.finish_time) {\n        throw new Error('Errored job without finish_time!')\n    }\n    return {\n        key: job.job_id,\n        id: job.job_id,\n        status: JobStatus.ERRORED,\n        appID: job.app_id,\n        appTitle: job.app_id,\n        narrativeID,\n        narrativeTitle: job.narrative_name,\n        queuedAt: job.creation_time,\n        runAt: job.exec_start_time,\n        runElapsed: job.finish_time - job.exec_start_time,\n        finishAt: job.finish_time,\n        queuedElapsed: Date.now() - job.creation_time,\n        clientGroups: job.client_groups,\n        message: job.status,\n        // TODO: a more affirmative method of providing current username\n        // for querying for own...?\n        username: job.user || username\n    };\n}\n\nexport function serviceJobToUIJob(job: JobState, username: string): Job {\n    const status = getJobStatus(job);\n    switch (status) {\n        case JobStatus.QUEUED:\n            return makeJobQueued(job, username);\n        case JobStatus.RUNNING:\n            return makeJobRunning(job, username);\n        case JobStatus.FINISHED:\n            return makeJobFinished(job, username);\n        case JobStatus.ERRORED:\n            return makeJobErrored(job, username);\n        case JobStatus.CANCELED:\n            return makeJobCanceled(job, username);\n        default:\n            throw new Error('Invalid job status: ' + job.status);\n    }\n}\n\nexport function compareTimeRange(job: Job, timeRangeStart: EpochTime, timeRangeEnd: EpochTime) {\n    // // if any of the timestamps fall within the time range, we are good\n    // if (\n    //     [job.queuedAt, job.runAt, job.finishAt].some((eventTime) => {\n    //         if (!eventTime) {\n    //             return false;\n    //         }\n    //         return eventTime > timeRangeStart && eventTime < timeRangeEnd;\n    //     })\n    // ) {\n    //     return true;\n    // }\n\n    // // If the timestamps span the time range, we are also good.\n    // if (!job.queuedAt) {\n    //     return false;\n    // }\n    // // if start past the end time, no match.\n    // if (job.queuedAt > timeRangeEnd) {\n    //     return false;\n    // }\n    // // If start after or on start time, then, we have a match.\n    // if (job.queuedAt >= timeRangeStart) {\n    //     return true;\n    // }\n\n    // // Otherwise, the job started (queued) before out time range, but\n    // // there is still hope, maybe it is still queued or started after the\n    // // start date.\n    // if (!job.runAt) {\n    //     // Not run yet, a match.\n    //     return true;\n    // }\n    // // Otherwise, if it starts after the range start, a match\n    // if (job.runAt >= timeRangeStart) {\n    //     return true;\n    // }\n\n    // // Otherwise, yes, there is still hope...\n\n    // // If not finished yet, a match.\n    // if (!job.finishAt) {\n    //     return true;\n    // }\n\n    // // Otherwise, if it finished after the range start, a match\n    // if (job.finishAt >= timeRangeStart) {\n    //     return true;\n    // }\n\n    // return false;\n    return true;\n}\n\nexport function compareStatus(job: Job, jobStatus?: Array<JobStatus>) {\n    if (!jobStatus) {\n        return true;\n    }\n    return jobStatus.some((status) => {\n        return job.status === status;\n    });\n}\n\nexport function calcAverage(total: number, count: number) {\n    if (total) {\n        if (count) {\n            return total / count;\n        } else {\n            return null;\n        }\n    } else {\n        if (count) {\n            return 0;\n        } else {\n            return null;\n        }\n    }\n}\n\nexport function calcRate(part: number, whole: number) {\n    if (part) {\n        if (whole) {\n            return part / whole;\n        } else {\n            return null;\n        }\n    } else {\n        if (whole) {\n            return 0;\n        } else {\n            return null;\n        }\n    }\n}\n\nexport function getTimeRange(preset: TimeRangePresets): [EpochTime, EpochTime] {\n    const hourInMilliseconds = 1000 * 60 * 60;\n    const endDate = new Date().getTime();\n    switch (preset) {\n        case 'lastHour':\n            return [endDate - hourInMilliseconds, endDate];\n        case 'last48Hours':\n            return [endDate - hourInMilliseconds * 24 * 2, endDate];\n        case 'lastWeek':\n            return [endDate - hourInMilliseconds * 24 * 7, endDate];\n        case 'lastMonth':\n            return [endDate - hourInMilliseconds * 24 * 30, endDate];\n    }\n}\n\nexport function extractTimeRange(timeRange: TimeRange): [EpochTime, EpochTime] {\n    switch (timeRange.kind) {\n        case 'preset':\n            return getTimeRange(timeRange.preset);\n        case 'literal':\n            return [timeRange.start, timeRange.end];\n        default:\n            throw new Error('Invalid time range kind value (should be impossible');\n    }\n}\n","import React from 'react';\nimport { Job, JobID, JobStatus } from '../../redux/store';\nimport JobDetailComponent from './view';\nimport { Spin, Alert } from 'antd';\nimport { NarrativeJobServiceClient } from '@kbase/ui-lib';\nimport MetricsServiceClient from '../../lib/MetricsServiceClient';\nimport { serviceJobToUIJob } from '../../redux/actions/utils';\n\nconst POLLING_INTERVAL = 5000;\n\n// A simple state wrapper for job logs.\n\nexport interface JobLogLine {\n    lineNumber: number;\n    line: string;\n    isError: boolean;\n}\nexport type JobLog = Array<JobLogLine>;\n\nexport enum JobLogState {\n    NONE,\n    JOB_QUEUED,\n    INITIAL_LOADING,\n    ACTIVE_LOADED,\n    ACTIVE_LOADING,\n    FINISHED_LOADED,\n    ERROR\n}\n\n// TODO: rename this and other things to JobDetailView...\nexport interface JobLogViewNone {\n    status: JobLogState.NONE\n}\n\nexport interface JobLogViewQueued {\n    status: JobLogState.JOB_QUEUED\n    job: Job\n}\n\nexport interface JobLogViewInitialLoading {\n    status: JobLogState.INITIAL_LOADING\n}\n\nexport interface JobLogViewActiveLoaded {\n    status: JobLogState.ACTIVE_LOADED,\n    log: Array<JobLogLine>;\n    job: Job\n}\n\nexport interface JobLogViewActiveLoading {\n    status: JobLogState.ACTIVE_LOADING,\n    log: Array<JobLogLine>;\n    job: Job\n}\n\nexport interface JobLogViewFinishedLoaded {\n    status: JobLogState.FINISHED_LOADED,\n    log: Array<JobLogLine>;\n    job: Job\n}\n\nexport interface JobLogViewError {\n    status: JobLogState.ERROR,\n    error: string\n}\n\nexport type JobLogView = JobLogViewNone | JobLogViewQueued | JobLogViewInitialLoading | JobLogViewActiveLoaded | JobLogViewActiveLoading | JobLogViewFinishedLoaded | JobLogViewError\n\nexport interface JobLogsStateProps {\n    jobID: JobID;\n    token: string;\n    njsURL: string;\n    serviceWizardURL: string;\n}\n\ntype JobLogsStateState = JobLogView;\n\nexport default class JobLogsState extends React.Component<JobLogsStateProps, JobLogsStateState> {\n    constructor(props: JobLogsStateProps) {\n        super(props);\n\n        this.state = {\n            status: JobLogState.NONE\n        };\n    }\n\n    async getJob(): Promise<Job> {\n        const metricsClient = new MetricsServiceClient({\n            token: this.props.token,\n            url: this.props.serviceWizardURL\n        });\n\n        const job_id = this.props.jobID;\n\n        const job = await metricsClient.getJob({ job_id });\n        return serviceJobToUIJob(job.job_state, 'UNKNOWN');\n    }\n\n    async getJobLog(skipLines: number): Promise<Array<JobLogLine>> {\n        const njsClient = new NarrativeJobServiceClient({\n            token: this.props.token,\n            url: this.props.njsURL,\n            module: 'NarrativeJobService'\n        });\n\n        const [jobLog] = await njsClient.getJobLogs({ job_id: this.props.jobID, skip_lines: skipLines });\n\n        return jobLog.lines.map((line, index) => {\n            return {\n                lineNumber: skipLines + index + 1,\n                line: line.line,\n                isError: line.is_error ? true : false\n            };\n        });\n    }\n\n    // async updateJobLog() {\n    //     const startingLines = this.state.log.length;\n    //     const lines = await this.getJobLog(startingLines);\n    //     this.setState({\n    //         log: {\n    //             isLoaded: this.state.log.isLoaded,\n    //             lines: this.state.log.lines.concat(lines)\n    //         }\n    //     })\n    // }\n\n    startPolling() {\n        const poller = async () => {\n            const state = this.state;\n            if (state.status !== JobLogState.ACTIVE_LOADED) {\n                this.setState({\n                    status: JobLogState.ERROR,\n                    error: 'Invalid state for polling: ' + state.status\n                });\n                return;\n            }\n            const { log } = state;\n            this.setState({\n                status: JobLogState.ACTIVE_LOADING,\n                log\n            });\n            const job = await this.getJob();\n            const startingLines = log.length;\n            const newLog = await this.getJobLog(startingLines);\n\n            switch (job.status) {\n                case JobStatus.QUEUED:\n                    // should not occur!\n                    this.startQueuedPolling();\n                    break;\n                case JobStatus.RUNNING:\n                    this.setState({\n                        status: JobLogState.ACTIVE_LOADED,\n                        log: log.concat(newLog),\n                        job\n                    });\n                    loop();\n                    break;\n                case JobStatus.FINISHED:\n                    this.setState({\n                        status: JobLogState.FINISHED_LOADED,\n                        log: log.concat(newLog),\n                        job\n                    });\n                    break;\n                case JobStatus.ERRORED:\n                    this.setState({\n                        status: JobLogState.FINISHED_LOADED,\n                        log: log.concat(newLog),\n                        job\n                    });\n                    break;\n                case JobStatus.CANCELED:\n                    this.setState({\n                        status: JobLogState.FINISHED_LOADED,\n                        log: log.concat(newLog),\n                        job\n                    });\n            }\n        }\n        const loop = () => {\n            setTimeout(poller, POLLING_INTERVAL);\n        }\n        loop();\n    }\n\n    startQueuedPolling() {\n        const poller = async () => {\n            const job = await this.getJob();\n            switch (job.status) {\n                case JobStatus.QUEUED:\n                    // still queued, eh?\n                    loop();\n                    return;\n                default:\n                    const log = await this.getJobLog(0);\n                    switch (job.status) {\n                        case JobStatus.RUNNING:\n                            this.setState({\n                                status: JobLogState.ACTIVE_LOADED,\n                                log,\n                                job\n                            });\n                            loop();\n                            break;\n                        case JobStatus.FINISHED:\n                            this.setState({\n                                status: JobLogState.FINISHED_LOADED,\n                                log,\n                                job\n                            });\n                            break;\n                        case JobStatus.ERRORED:\n                            this.setState({\n                                status: JobLogState.FINISHED_LOADED,\n                                log,\n                                job\n                            });\n                            break;\n                        case JobStatus.CANCELED:\n                            this.setState({\n                                status: JobLogState.FINISHED_LOADED,\n                                log,\n                                job\n                            });\n                            break;\n                    }\n            }\n        }\n\n        const loop = () => {\n            setTimeout(poller, POLLING_INTERVAL);\n        }\n\n        loop();\n    }\n\n    async getInitialJobLog() {\n        this.setState({\n            status: JobLogState.INITIAL_LOADING\n        });\n        const job = await this.getJob();\n        // const log = await this.getJobLog(0);\n\n        let log;\n        switch (job.status) {\n            case JobStatus.QUEUED:\n                // still queued, eh?\n                this.setState({\n                    status: JobLogState.JOB_QUEUED,\n                    job\n                });\n                this.startQueuedPolling();\n                return;\n            case JobStatus.RUNNING:\n                log = await this.getJobLog(0);\n                this.setState({\n                    status: JobLogState.ACTIVE_LOADED,\n                    log,\n                    job\n                });\n                return;\n            case JobStatus.FINISHED:\n                log = await this.getJobLog(0);\n                this.setState({\n                    status: JobLogState.FINISHED_LOADED,\n                    log,\n                    job\n                });\n                return;\n            case JobStatus.ERRORED:\n                log = await this.getJobLog(0);\n                this.setState({\n                    status: JobLogState.FINISHED_LOADED,\n                    log,\n                    job\n                });\n                return;\n            case JobStatus.CANCELED:\n                log = await this.getJobLog(0);\n                this.setState({\n                    status: JobLogState.FINISHED_LOADED,\n                    log,\n                    job\n                });\n                return;\n        }\n    }\n\n    componentDidMount() {\n        this.getInitialJobLog();\n    }\n\n    renderLoading() {\n        return (\n            <div>\n                Loading ... <Spin />\n            </div>\n        );\n    }\n\n    renderQueued() {\n        return (\n            <div>\n                Queued ... <Spin />\n            </div>\n        );\n    }\n\n    renderError(view: JobLogViewError) {\n        return (\n            <Alert type=\"error\" message={view.error} />\n        )\n    }\n\n    render() {\n        return <JobDetailComponent view={this.state} />;\n    }\n}\n","import { Dispatch, Action } from 'redux';\nimport { connect } from 'react-redux';\nimport JobLogState from './state';\nimport { StoreState } from '../../redux/store';\n\nexport interface OwnProps {\n}\n\ninterface StateProps {\n    token: string;\n    njsURL: string;\n    serviceWizardURL: string;\n}\n\ninterface DispatchProps { }\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const {\n        auth: { userAuthorization },\n        app: {\n            config: {\n                services: {\n                    NarrativeJobService: { url: njsURL },\n                    ServiceWizard: { url: serviceWizardURL }\n                }\n            }\n        }\n    } = state;\n\n    let token;\n    if (!userAuthorization) {\n        throw new Error('Invalid state: token required');\n    } else {\n        token = userAuthorization.token;\n    }\n\n    return { token, njsURL, serviceWizardURL };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>, ownProps: OwnProps): DispatchProps {\n    return {};\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(JobLogState);\n","import PubSub, { PubSubProxy } from \"./PubSub\";\n\n// const MONITORING_INTERVAL = 10000;\n// const MONITORING_FEEDBACK_STEPS = 100;\n// const WATCH_INTERVAL = 100;\n\nconst POLLING_TIMEOUT = 10000;\n\nexport interface PollerParams {\n    // callback to trigger a polling action, whatever that is.\n    onPoll: () => void,\n    // callback for progress\n    onProgress: (progress: number) => void,\n    pubsub: PubSub,\n    progressSteps: number,\n    pollInterval: number,\n    watchInterval: number\n}\n\nexport enum PollerState {\n    STARTED,\n    POLLING,\n    WAITING,\n    PAUSED,\n    STOPPED,\n    ERROR\n}\n\nexport class Poller {\n    params: PollerParams;\n\n    statusTimer: number | null;\n    statusCount: number;\n\n    watchStartAt: number;\n    status: PollerState;\n    // isPollerRunning: boolean;\n    // isPollerPaused: boolean;\n    error: string;\n\n    watcherTimer: number | null;\n    waitTimer: number | null;\n\n    pubsubProxy: PubSubProxy;\n\n    constructor(params: PollerParams) {\n        this.params = params;\n\n        this.statusTimer = null;\n        this.statusCount = 0;\n\n        this.watchStartAt = 0;\n        // this.isPollerRunning = false;\n        // this.isPollerPaused = true;\n        this.status = PollerState.STOPPED;\n\n        this.watcherTimer = null;\n\n        this.waitTimer = null\n\n        this.pubsubProxy = new PubSubProxy(this.params.pubsub);\n        this.error = '';\n\n    }\n\n    stop() {\n        this.pubsubProxy.off();\n    }\n\n    pause() {\n        this.status = PollerState.PAUSED;\n\n        if (this.waitTimer) {\n            window.clearInterval(this.waitTimer);\n        }\n        if (this.statusTimer) {\n            window.clearInterval(this.statusTimer);\n        }\n        if (this.watcherTimer) {\n            window.clearTimeout(this.watcherTimer);\n        }\n\n        this.statusCount = 0;\n        this.updateOnProgress();\n    }\n\n    play() {\n        this.startWaiting();\n    }\n\n    startWatching() {\n        this.watchStartAt = Date.now();\n        this.status = PollerState.STARTED;\n\n        const pollWatch = () => {\n            const elapsed = Date.now() - this.watchStartAt;\n            if (elapsed > POLLING_TIMEOUT) {\n                this.status = PollerState.ERROR;\n                this.error = `Polling took too long (${elapsed}ms)`\n                this.stopPolling();\n                return;\n            }\n\n            switch (this.status) {\n                // case PollerState.NONE:\n                //     console.error('Error: Invalid state NONE');\n                //     this.stopPolling();\n                //     break;\n                case PollerState.STARTED:\n                case PollerState.POLLING:\n                    pollWatcherLoop();\n                    return;\n                case PollerState.WAITING:\n                    if (this.watcherTimer) {\n                        window.clearTimeout(this.watcherTimer);\n                    }\n                    this.status = PollerState.WAITING;\n                    this.startWaiting();\n                    break;\n                case PollerState.STOPPED:\n                    pollWatcherLoop();\n                    break;\n                case PollerState.PAUSED:\n                    console.warn('unexpected state PAUSED');\n                    // nothing to do\n                    break;\n                case PollerState.ERROR:\n                    console.warn('unexpected state ERROR');\n                    break;\n            }\n        }\n        const pollWatcherLoop = () => {\n            this.watcherTimer = window.setTimeout(pollWatch, this.params.watchInterval);\n        }\n\n        pollWatcherLoop();\n    }\n\n    startWaiting() {\n        this.status = PollerState.WAITING;\n        // Here we enter a loop to pause until the next polling event.\n        const pollWaitLoop = () => {\n            // This will fire another polling request after the interval passes,\n            // via a timeout.\n            this.waitTimer = window.setTimeout(this.runPoll.bind(this), this.params.pollInterval);\n            this.statusCount = 0;\n            pollWaitProgressLoop();\n        }\n\n        // This interval timer is for animating the progress bar.\n        // It is an interval which should run for the same period that the poll\n        // waiter above does, but in steps defined by MONITORING_FEEDBACK_STEPS.\n        const pollWaitProgressLoop = () => {\n            this.statusTimer = window.setInterval(() => {\n                this.statusCount += 1;\n                this.updateOnProgress();\n            }, this.params.pollInterval / this.params.progressSteps);\n        }\n\n        pollWaitLoop()\n    }\n\n    runPoll() {\n        if (this.statusTimer) {\n            window.clearInterval(this.statusTimer);\n        }\n\n        this.params.onPoll();\n        this.statusCount = 0;\n        this.startWatching();\n    }\n\n    startListeningForPollingEvent() {\n        this.pubsubProxy.on('searching', ({ is }) => {\n            if (is) {\n                switch (this.status) {\n                    // case PollerState.NONE:\n                    //     // Should not occur, but move into polling state.\n                    //     this.status = PollerState.POLLING;\n                    case PollerState.STARTED:\n                        // this is where we move into the polling state!\n                        this.status = PollerState.POLLING;\n                        break;\n                    case PollerState.POLLING:\n                        // hmm, if a polling event ('searching' for now) comes in,\n                        // and we are already polling, this is weird, but lets stay\n                        // in the polling state.\n                        break;\n                    case PollerState.WAITING:\n                        this.pause();\n                        break;\n                    case PollerState.STOPPED:\n                        break;\n                    case PollerState.PAUSED:\n                        // nothing to do\n                        break;\n                    case PollerState.ERROR:\n                        break;\n                }\n            } else {\n                switch (this.status) {\n                    // case PollerState.NONE:\n                    //     break;\n                    case PollerState.STARTED:\n                        break;\n                    case PollerState.POLLING:\n                        this.status = PollerState.WAITING;\n                        break;\n                    case PollerState.WAITING:\n                        break;\n                    case PollerState.STOPPED:\n                        break;\n                    case PollerState.PAUSED:\n                        // this.status = this.play();;\n                        // nothing to do\n                        this.play();\n                        break;\n                    case PollerState.ERROR:\n                        break;\n                }\n            }\n        });\n    }\n\n    stopListeningForPollingEvent() {\n        this.pubsubProxy.off();\n    }\n\n    startPolling() {\n        this.startListeningForPollingEvent();\n        this.runPoll();\n    }\n\n    updateOnProgress() {\n        this.params.onProgress(100 * this.statusCount / this.params.progressSteps);\n    }\n\n    stopPolling() {\n        if (this.waitTimer) {\n            window.clearInterval(this.waitTimer);\n        }\n        if (this.statusTimer) {\n            window.clearInterval(this.statusTimer);\n        }\n        if (this.watcherTimer) {\n            window.clearTimeout(this.watcherTimer);\n        }\n\n        this.statusCount = 0;\n        this.updateOnProgress();\n        this.stopListeningForPollingEvent();\n    }\n\n}","import uuid from 'uuid';\n\nexport interface SubscriptionDefinition {\n    channel: string | null;\n    message: string;\n}\n\nexport interface Subscription {\n    id: string,\n    channelName: string,\n    messageName: string\n}\n\nexport interface Channel {\n    messages: Map<string, MessageListener>\n}\n\n// export interface Listener {\n\n// }\n\nexport interface PublishDefinition {\n    channel: string;\n    message: string;\n\n}\n\nexport interface Payload { }\n\nexport interface Message {\n    id: MessageID,\n    payload: any\n}\n\nconst SEND_WINDOW = 1000 / 60;\n\n// Listen for message T\nexport interface Listener {\n    id: string;\n    messageID: MessageID;\n    handler: (message: Message) => void\n}\n\nexport interface MessageListener {\n    listeners: Array<Listener>;\n}\n\nexport type MessageID = string;\n\nexport class PubSubProxy {\n    subscriptions: Array<string>;\n    pubsub: PubSub;\n\n    constructor(pubsub: PubSub) {\n        this.subscriptions = [];\n        this.pubsub = pubsub;\n    }\n\n    on(messageID: string, handler: (payload: any) => void) {\n        const id = this.pubsub.on(messageID, handler);\n        this.subscriptions.push(id);\n    }\n\n    off() {\n        this.subscriptions.forEach((id) => {\n            this.pubsub.off(id);\n        })\n    }\n}\n\nexport default class PubSub {\n    sendQueue: Array<Message>\n    messageListeners: Map<MessageID, MessageListener>\n    allListeners: Map<string, Listener>\n    constructor() {\n        this.sendQueue = [];\n        this.messageListeners = new Map<MessageID, MessageListener>();\n        this.allListeners = new Map<string, Listener>();\n    }\n\n    private sendMessages() {\n        const queue = this.sendQueue;\n        this.sendQueue = [];\n        queue.forEach((message: Message) => {\n            const messageListener = this.messageListeners.get(message.id);\n            if (!messageListener) {\n                return;\n            }\n            messageListener.listeners.forEach((listener: Listener) => {\n                try {\n                    listener.handler(message.payload);\n                } catch (ex) {\n                    console.error('ERROR', ex);\n                }\n            });\n        });\n    }\n\n    private processQueue() {\n        if (this.sendQueue.length === 0) {\n            return;\n        }\n        window.setTimeout(() => {\n            this.sendMessages();\n        }, SEND_WINDOW)\n    }\n\n    send<T>(messageID: string, payload: any) {\n        const message: Message = {\n            id: messageID,\n            payload\n        }\n        this.sendQueue.push(message);\n        this.processQueue();\n    }\n\n    on(messageID: string, handler: (m: Message) => void): string {\n        let messageListener = this.messageListeners.get(messageID);\n        if (!messageListener) {\n            messageListener = {\n                listeners: []\n            }\n            this.messageListeners.set(messageID, messageListener);\n        }\n        const id = uuid.v4();\n        const listener = {\n            id, messageID, handler\n        }\n        messageListener.listeners.push(listener);\n        this.allListeners.set(id, listener);\n        return id;\n    }\n\n    off(id: string) {\n        const listener = this.allListeners.get(id);\n        if (!listener) {\n            return;\n        }\n        const messageListener = this.messageListeners.get(listener.messageID);\n        if (!messageListener) {\n            return;\n        }\n        messageListener.listeners = messageListener.listeners.filter((l) => {\n            return l.id !== listener.id\n        })\n    }\n}","import * as React from 'react';\nimport { Progress, Button, Tooltip, Switch } from 'antd';\nimport PubSub, { PubSubProxy } from '../lib/PubSub';\nimport { Poller } from '../lib/Poller';\n\nconst MONITORING_INTERVAL = 10000;\nconst MONITORING_FEEDBACK_STEPS = 100;\nconst WATCH_INTERVAL = 100;\n\nexport interface MonitorProps {\n    showControls: boolean;\n    startPolling: boolean;\n    startOpen: boolean;\n    isPollerRunning: boolean;\n    pubsub: PubSub;\n    onPoll: () => void;\n}\n\nexport interface MonitorState {\n    /** Support for job monitoring */\n    isMonitoring: boolean;\n\n    /**  */\n    isPollingInitiated: boolean;\n    pollingStartedAt: number;\n\n    /** Monitoring progress */\n    // monitoringStatusCount: number;\n    pollWaitProgress: number;\n\n    isPolling: boolean;\n\n    isOpen: boolean;\n}\n\nexport default class Monitor extends React.Component<MonitorProps, MonitorState> {\n    monitoringTimer: number | null;\n    monitoringStatusTimer: number | null;\n    pollWatcherTimer: number | null;\n    searchListenerID: string | null;\n    pubsubProxy: PubSubProxy;\n\n    poller: Poller;\n\n    constructor(props: MonitorProps) {\n        super(props);\n\n        this.monitoringTimer = null;\n        this.monitoringStatusTimer = null;\n        this.pollWatcherTimer = null;\n        this.searchListenerID = null;\n        this.pubsubProxy = new PubSubProxy(this.props.pubsub);\n\n        this.poller = new Poller({\n            onPoll: this.props.onPoll,\n            onProgress: this.onProgress.bind(this),\n            pubsub: this.props.pubsub,\n            pollInterval: MONITORING_INTERVAL,\n            progressSteps: MONITORING_FEEDBACK_STEPS,\n            watchInterval: WATCH_INTERVAL\n        })\n\n        this.state = {\n            isMonitoring: false,\n            // monitoringStatusCount: 0,\n            pollWaitProgress: 0,\n            isPollingInitiated: false,\n            pollingStartedAt: 0,\n            isPolling: false,\n            isOpen: this.props.startOpen\n        };\n    }\n\n    onProgress(progress: number) {\n        this.setState({\n            pollWaitProgress: progress\n        })\n    }\n\n    componentDidMount() {\n        if (this.props.startPolling) {\n            this.startMonitoring();\n        }\n        this.pubsubProxy.on('searching', ({ is }) => {\n            if (is) {\n                this.setState({\n                    isPolling: true\n                });\n                // this.poller.stopPolling();\n            } else {\n                this.setState({\n                    isPolling: false\n                });\n                // this.poller.startPolling();\n            }\n        })\n        // this.searchListenerID = this.props.pubsub.on(\n        //     'search',\n        //     () => {\n        //         //this.resetMonitoring();\n        //         console.log('skipping the search reset...');\n        //     }\n        // )\n    }\n\n    componentWillUnmount() {\n        this.stopMonitoring();\n        this.poller.stop();\n        this.pubsubProxy.off();\n    }\n\n    componentDidUpdate() {\n\n    }\n\n    startMonitoring() {\n        this.setState({\n            isMonitoring: true\n        });\n        this.poller.startPolling();\n    }\n\n    // resetMonitoring() {\n    //     if (!this.state.isMonitoring) {\n    //         return;\n    //     }\n\n    //     // If waiting for a poll, do nothing.\n    //     if (!this.state.isPolling) {\n    //         return;\n    //     }\n\n    //     // If waiting to poll again, our only possible other state,\n    //     // restart the timers.\n    //     // clear the timers\n    //     this.poller.stopPolling();\n\n    //     // reset the count.\n    //     this.poller.startPolling();\n    // }\n\n    stopMonitoring() {\n        this.poller.stopPolling();\n        this.setState({\n            isMonitoring: false\n        });\n    }\n\n    toggleMonitoring() {\n        if (this.state.isMonitoring) {\n            this.stopMonitoring();\n        } else {\n            this.startMonitoring();\n        }\n    }\n\n    onToggleOpen(isOpen: boolean) {\n        this.setState({ isOpen });\n    }\n\n    render() {\n        if (!this.props.showControls) {\n            return null;\n        }\n        let monitoringStatus;\n        let label = 'Start Polling';\n        let buttonType: 'default' | 'danger' = 'default';\n        // let opener;\n        // let openerStyle: React.CSSProperties = {};\n        // if (this.state.isMonitoring) {\n        //     openerStyle.color = 'red';\n        // }\n        // if (!this.state.isOpen) {\n        //     opener = <Tooltip title=\"Open the monitor\">\n        //         <Button type=\"link\" icon=\"sync\" onClick={this.onToggleOpen.bind(this)} style={openerStyle} />\n        //     </Tooltip>\n        // } else {\n        //     openerStyle.backgroundColor = 'rgba(200, 200, 200, 0.3)';\n        //     opener = <Tooltip title=\"Close the monitor\">\n        //         <Button type=\"link\" icon=\"sync\" onClick={this.onToggleOpen.bind(this)} style={openerStyle} />\n        //     </Tooltip>\n        // }\n        const opener = (\n            <Switch\n                defaultChecked={this.state.isOpen}\n                checkedChildren=\"hide monitor\"\n                unCheckedChildren=\"show monitor\"\n                onChange={this.onToggleOpen.bind(this)} />\n        );\n\n        if (this.state.isMonitoring) {\n            label = 'Stop Polling';\n            buttonType = 'danger';\n            if (!this.state.isPolling) {\n                monitoringStatus = (\n                    <span>\n                        {' '}\n                        <Progress type=\"circle\" percent={this.state.pollWaitProgress} width={30} strokeWidth={30} showInfo={false} />\n                    </span>\n                );\n            } else {\n                monitoringStatus = (\n                    <span>\n                        {' '}<Progress type=\"circle\" percent={100} width={30} showInfo={false} strokeWidth={30} strokeColor={'orange'} />\n                    </span>\n                )\n            }\n            // } else {\n            //     const spinnerIcon = <Icon type=\"loading\" style={{ fontSize: '1em', color: 'orange' }} spin />;\n            //     monitoringStatus = (\n            //         <span>\n            //             {' '}<Spin size=\"small\" indicator={spinnerIcon} />\n            //         </span>\n            //     )\n            // }\n        }\n        let title;\n        if (this.state.isMonitoring) {\n            title = `Polling is running, with an interval of ${MONITORING_INTERVAL}ms and ${MONITORING_FEEDBACK_STEPS} update steps.`\n        } else {\n            title = 'Polling is currently stopped.';\n        }\n        let monitor;\n        if (this.state.isOpen) {\n            monitor = <Tooltip title={title}>\n                <Button onClick={this.toggleMonitoring.bind(this)} type={buttonType} size=\"small\" style={{ fontSize: \"80%\" }}>\n                    {label}\n                </Button>\n                {monitoringStatus}\n            </Tooltip>\n        }\n        return (\n            <span>\n                {opener}\n                {' '}\n                {monitor}\n            </span>\n        );\n    }\n}\n","/**\n * A component for browsing through (search, filter, sort) jobs submitted by\n * the current user.\n */\n\n// 3rd party imports\nimport React from 'react';\nimport { CheckboxValueType } from 'antd/lib/checkbox/Group';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\nimport { Table, Form, Input, Button, Checkbox, Select, DatePicker, Popconfirm, Tooltip, Modal, Switch } from 'antd';\nimport moment, { Moment } from 'moment';\nimport JobStatusBadge from '../JobStatus'\n\n// project imports (should be shared lib)\nimport { NiceRelativeTime, NiceElapsedTime } from '@kbase/ui-components';\n\n// project imports\nimport { Job, JobStatus, JobsSearchExpression, SearchState, TimeRange, TimeRangePresets } from '../../redux/store';\nimport JobDetail from '../JobDetail';\n\n// file imports\nimport './style.css';\nimport Monitor from '../Monitor';\nimport PubSub from '../../lib/PubSub';\n\n/*\n    Props and State\n*/\n\ntype JobStatusFilterKey = 'queued' | 'running' | 'canceled' | 'success' | 'error';\n\ninterface JobStatusFilterOption {\n    label: string;\n    value: JobStatusFilterKey;\n}\n\nconst jobStatusFilterOptions: Array<JobStatusFilterOption> = [\n    {\n        label: 'Queued',\n        value: 'queued'\n    },\n    {\n        label: 'Running',\n        value: 'running'\n    },\n    {\n        label: 'Canceled',\n        value: 'canceled'\n    },\n    {\n        label: 'Success',\n        value: 'success'\n    },\n    {\n        label: 'Error',\n        value: 'error'\n    }\n];\n\nfunction jobStatusFilterOptionsToJobStatus(filter: Array<JobStatusFilterKey>): Array<JobStatus> {\n    let jobStatuses: Array<JobStatus> = [];\n    filter.forEach((status) => {\n        switch (status) {\n            case 'queued':\n                jobStatuses.push(JobStatus.QUEUED);\n                break;\n            case 'running':\n                jobStatuses.push(JobStatus.RUNNING);\n                break;\n            case 'canceled':\n                jobStatuses.push(JobStatus.CANCELED);\n                break;\n            case 'success':\n                jobStatuses.push(JobStatus.FINISHED);\n                break;\n            case 'error':\n                jobStatuses.push(JobStatus.ERRORED);\n                break;\n        }\n    });\n    return jobStatuses;\n}\n\nexport interface UserJobsProps {\n    jobs: Array<Job>;\n    searchState: SearchState;\n    showMonitoringControls: boolean;\n    search: (searchExpression: JobsSearchExpression) => void;\n    cancelJob: (jobID: string) => void;\n}\n\ninterface UserJobsState {\n    showDates: boolean;\n    currentJobStatusFilter: Array<JobStatusFilterKey>;\n    timeRange: TimeRange;\n    isFilterOpen: boolean;\n    selectedJob: Job | null;\n}\n\nexport default class UserJobs extends React.Component<UserJobsProps, UserJobsState> {\n    currentQuery?: string;\n\n    static defaultTimeRange: TimeRangePresets = 'lastWeek';\n    pubsub: PubSub;\n\n    constructor(props: UserJobsProps) {\n        super(props);\n\n        this.currentQuery = '';\n        this.pubsub = new PubSub();\n\n        this.state = {\n            showDates: false,\n            currentJobStatusFilter: ['queued', 'running', 'canceled', 'success', 'error'],\n            timeRange: { kind: 'preset', preset: UserJobs.defaultTimeRange },\n            isFilterOpen: false,\n            selectedJob: null\n        };\n    }\n\n    componentDidMount() {\n        this.doSearch(true);\n    }\n\n    componentDidUpdate() {\n        if (this.props.searchState === SearchState.SEARCHING) {\n            this.pubsub.send('searching', { is: true })\n        } else {\n            this.pubsub.send('searching', { is: false })\n        }\n    }\n\n    onChangeTimeRange(value: string) {\n        // TODO: should narrow the string value\n        if (value === 'customRange') {\n            this.setState({\n                showDates: true,\n                timeRange: { kind: 'literal', start: Date.now(), end: Date.now() }\n            });\n            // nothing else to do.\n            return;\n        } else {\n            this.setState(\n                {\n                    showDates: false,\n                    timeRange: { kind: 'preset', preset: value as TimeRangePresets }\n                },\n                () => {\n                    this.doSearch(true);\n                }\n            );\n        }\n    }\n\n    onChangeQuery(event: React.ChangeEvent<HTMLInputElement>) {\n        this.currentQuery = event.target.value;\n    }\n\n    onSubmit(event: React.FormEvent) {\n        event.preventDefault();\n        this.doSearch(true);\n    }\n\n    doSearch(forceSearch: boolean) {\n        if (typeof this.currentQuery === 'undefined') {\n            return;\n        }\n\n        const jobStatusFilter = jobStatusFilterOptionsToJobStatus(this.state.currentJobStatusFilter);\n\n        const searchExpression: JobsSearchExpression = {\n            query: this.currentQuery,\n            timeRange: this.state.timeRange,\n            jobStatus: jobStatusFilter,\n            forceSearch\n        };\n\n        this.pubsub.send('search', {});\n\n        this.props.search(searchExpression);\n        return false;\n    }\n\n    onRangeFromChange(date: Moment | null, dateString: string) {\n        // TODO: if the range ends up null (how?), should it default\n        // to the previously selected preset? For now, just go back to lastHourl.\n        if (date === null) {\n            this.setState({\n                timeRange: {\n                    kind: 'preset',\n                    preset: 'lastHour'\n                }\n            });\n            return;\n        }\n\n        // handle logic of switching from 'preset' to 'literal'\n        let existingTimeRange = this.state.timeRange;\n        let timeRange: TimeRange;\n        switch (existingTimeRange.kind) {\n            case 'preset':\n                timeRange = {\n                    kind: 'literal',\n                    start: date.valueOf(),\n                    end: Infinity\n                };\n                break;\n            case 'literal':\n                timeRange = {\n                    kind: 'literal',\n                    start: date.valueOf(),\n                    end: existingTimeRange.end\n                };\n                break;\n            default:\n                return;\n        }\n\n        this.setState({\n            timeRange\n        });\n    }\n\n    onRangeToChange(date: Moment | null, dateString: string) {\n        // TODO: if the range ends up null (how?), should it default\n        // to the previously selected preset? For now, just go back to lastHourl.\n        if (date === null) {\n            this.setState({\n                timeRange: {\n                    kind: 'preset',\n                    preset: 'lastHour'\n                }\n            });\n            return;\n        }\n        let existingTimeRange = this.state.timeRange;\n        let timeRange: TimeRange;\n        switch (existingTimeRange.kind) {\n            case 'preset':\n                timeRange = {\n                    kind: 'literal',\n                    start: Infinity,\n                    end: date.valueOf()\n                };\n                break;\n            case 'literal':\n                timeRange = {\n                    kind: 'literal',\n                    start: existingTimeRange.start,\n                    end: date.valueOf()\n                };\n                break;\n            default:\n                return;\n        }\n\n        this.setState({\n            timeRange\n        });\n    }\n\n    renderJobAction(job: Job) {\n        switch (job.status) {\n            case JobStatus.QUEUED:\n            case JobStatus.RUNNING:\n                return (\n                    <Popconfirm\n                        title=\"Cancel this job?\"\n                        onConfirm={() => {\n                            this.props.cancelJob(job.id);\n                        }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button icon=\"close\" type=\"danger\" />\n                    </Popconfirm>\n                );\n            default:\n                return;\n        }\n    }\n\n    renderSearchInput() {\n        let dateControls;\n        if (this.state.showDates) {\n            const timeRange = this.state.timeRange;\n            if (timeRange.kind === 'literal') {\n                dateControls = (\n                    <React.Fragment>\n                        <Form.Item label=\"From\">\n                            <DatePicker\n                                showTime={true}\n                                allowClear={false}\n                                value={moment(timeRange.start)}\n                                onChange={this.onRangeFromChange.bind(this)}\n                            />\n                        </Form.Item>\n                        <Form.Item label=\"To\">\n                            <DatePicker\n                                showTime={true}\n                                allowClear={false}\n                                value={moment(timeRange.end)}\n                                onChange={this.onRangeToChange.bind(this)}\n                            />\n                        </Form.Item>\n                    </React.Fragment>\n                );\n            }\n        }\n        return (\n            <Form layout=\"inline\" onSubmit={this.onSubmit.bind(this)}>\n                <Form.Item>\n                    <Input\n                        defaultValue={this.currentQuery}\n                        placeholder=\"Search jobs\"\n                        style={{ width: '15em' }}\n                        onChange={this.onChangeQuery.bind(this)}\n                    />\n                </Form.Item>\n\n                <Form.Item label=\"TimeRange\" />\n                <Form.Item>\n                    <Select\n                        defaultValue={UserJobs.defaultTimeRange}\n                        onChange={this.onChangeTimeRange.bind(this)}\n                        dropdownMatchSelectWidth={true}\n                        style={{ width: '11em' }}\n                    >\n                        <Select.Option value=\"lastHour\">Previous Hour</Select.Option>\n                        <Select.Option value=\"last48Hours\">Previous 48 Hours</Select.Option>\n                        <Select.Option value=\"lastWeek\">Previous Week</Select.Option>\n                        <Select.Option value=\"lastMonth\">Previous Month</Select.Option>\n                        <Select.Option value=\"customRange\">Custom Range</Select.Option>\n                    </Select>\n                </Form.Item>\n                {dateControls}\n\n                <Form.Item>\n                    <Button icon=\"search\" type=\"primary\" htmlType=\"submit\" />\n                </Form.Item>\n\n                <Form.Item>\n                    <Switch checkedChildren=\"hide filters\" unCheckedChildren=\"show filters\" onChange={this.onToggleFilterArea.bind(this)} />\n                </Form.Item>\n\n                <Form.Item>\n                    <Monitor\n                        onPoll={() => {\n                            this.doSearch(true);\n                        }}\n                        pubsub={this.pubsub}\n                        startPolling={true}\n                        isPollerRunning={this.props.searchState === SearchState.SEARCHING}\n                        showControls={this.props.showMonitoringControls}\n                        startOpen={true}\n                    />\n                </Form.Item>\n            </Form>\n        );\n    }\n\n    onToggleFilterArea(isFilterOpen: boolean) {\n        this.setState({ isFilterOpen });\n    }\n\n    onFilterChange(filters: Array<CheckboxValueType>) {\n        const filter = filters as Array<JobStatusFilterKey>;\n\n        this.setState(\n            {\n                currentJobStatusFilter: filter\n            },\n            () => {\n                this.doSearch(false);\n            }\n        );\n    }\n\n    onChangeJobStatusAny(event: CheckboxChangeEvent) {\n        if (event.target.checked) {\n            this.setState(\n                {\n                    currentJobStatusFilter: ['queued', 'running', 'canceled', 'success', 'error']\n                },\n                () => {\n                    this.doSearch(false);\n                }\n            );\n        }\n    }\n\n    onClickAny() {\n        this.setState(\n            {\n                currentJobStatusFilter: ['queued', 'running', 'canceled', 'success', 'error']\n            },\n            () => {\n                this.doSearch(false);\n            }\n        );\n    }\n\n    onClickFinished() {\n        this.setState(\n            {\n                currentJobStatusFilter: ['canceled', 'success', 'error']\n            },\n            () => {\n                this.doSearch(false);\n            }\n        );\n    }\n\n    onClickActive() {\n        this.setState(\n            {\n                currentJobStatusFilter: ['queued', 'running']\n            },\n            () => {\n                this.doSearch(false);\n            }\n        );\n    }\n\n    renderFilterInput() {\n        const options = jobStatusFilterOptions;\n        return (\n            <div className=\"UserJobs-filterArea\">\n                <span style={{ color: 'gray', fontWeight: 'bold', marginRight: '10px' }}>Filter by Job Status</span>\n                <Button size=\"small\" onClick={this.onClickAny.bind(this)}>\n                    <i>Any</i>\n                </Button>{' '}\n                <Button size=\"small\" onClick={this.onClickActive.bind(this)}>\n                    <i>Active</i>\n                </Button>{' '}\n                <Button size=\"small\" onClick={this.onClickFinished.bind(this)} style={{ marginRight: '10px' }}>\n                    <i>Finished</i>\n                </Button>\n                <Checkbox.Group\n                    options={options}\n                    onChange={this.onFilterChange.bind(this)}\n                    value={this.state.currentJobStatusFilter}\n                />\n            </div>\n        );\n    }\n\n    renderControlBar() {\n        let filterRowStyle: React.CSSProperties = { margin: '10px 10px 10px 0' };\n        if (!this.state.isFilterOpen) {\n            filterRowStyle.display = 'none';\n        }\n        let filterRow;\n        if (this.state.isFilterOpen) {\n            filterRow = <div className=\"Row\" style={filterRowStyle}>\n                {this.renderFilterInput()}\n            </div>\n        }\n        return (\n            <div className=\"Col\">\n                <div className=\"Row\">{this.renderSearchInput()}</div>\n                {filterRow}\n            </div>\n        );\n    }\n\n    onClickDetail(job: Job) {\n        this.setState({\n            selectedJob: job\n        });\n    }\n\n    onCloseModal() {\n        this.setState({\n            selectedJob: null\n        });\n    }\n\n    renderJobDetail() {\n        if (!this.state.selectedJob) {\n            return;\n        }\n        const footer = (\n            <Button key=\"cancel\" onClick={this.onCloseModal.bind(this)}>\n                Close\n            </Button>\n        )\n        const title = (\n            <span>\n                Detail for Job <span style={{ fontFamily: 'monospace' }}>${this.state.selectedJob.id}</span>\n                {' '}\n                <JobStatusBadge jobStatus={this.state.selectedJob.status} />\n            </span>\n        )\n        return (\n            <Modal className=\"FullScreenModal\" title={title}\n                onCancel={this.onCloseModal.bind(this)} visible={true}\n                footer={footer}>\n                <JobDetail jobID={this.state.selectedJob.id} />\n            </Modal>\n        )\n    }\n\n    renderJobsTable() {\n        const loading = this.props.searchState === SearchState.SEARCHING;\n        return (\n            <Table\n                size=\"small\"\n                className=\"UserJobs-table\"\n                dataSource={this.props.jobs}\n                loading={loading}\n                rowKey={(job: Job) => {\n                    return job.id;\n                }}\n                pagination={{ position: 'bottom', showSizeChanger: true }}\n\n            >\n                <Table.Column\n                    title=\"Job ID\"\n                    dataIndex=\"id\"\n                    key=\"id\"\n                    width=\"5%\"\n                    render={(jobID: string, job: Job): any => {\n                        const title = jobID;\n                        return (\n                            <Tooltip title={title}>\n                                <a href=\"https://example.com\" onClick={(e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n                                    e.preventDefault();\n                                    this.onClickDetail(job)\n                                }}>{jobID}</a>\n                            </Tooltip>\n                        )\n                    }}\n                    sorter={(a: Job, b: Job) => {\n                        return a.id.localeCompare(b.id);\n                    }}\n                />\n                <Table.Column\n                    title=\"User\"\n                    dataIndex=\"username\"\n                    key=\"username\"\n                    width=\"10%\"\n                    render={(username: string) => {\n                        return (\n                            <a href={`#people/${username}`} target=\"_parent\">\n                                {username}\n                            </a>\n                        );\n                    }}\n                    sorter={(a: Job, b: Job) => {\n                        return a.username.localeCompare(b.username);\n                    }}\n                />\n                <Table.Column\n                    title=\"Narrative\"\n                    dataIndex=\"narrativeTitle\"\n                    key=\"narrativeTitle\"\n                    width=\"17%\"\n                    // style={cellStyle}\n                    render={(title: string, job: Job): any => {\n                        if (!title || !job.narrativeID) {\n                            return 'n/a';\n                        }\n                        const href = ['/narrative', job.narrativeID].join('/');\n                        return (\n                            <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {title}\n                            </a>\n                        );\n                    }}\n                    sorter={(a: Job, b: Job) => {\n                        if (!a.narrativeTitle) {\n                            if (!b.narrativeTitle) {\n                                return 0;\n                            }\n                            return -1;\n                        } else {\n                            if (!b.narrativeTitle) {\n                                return 1;\n                            }\n                            return a.narrativeTitle.localeCompare(b.narrativeTitle);\n                        }\n                    }}\n                />\n                <Table.Column\n                    title=\"App\"\n                    dataIndex=\"appTitle\"\n                    key=\"appTitle\"\n                    width=\"18%\"\n                    // style={cellStyle}\n                    render={(title: string, job: Job): any => {\n                        if (!title) {\n                            return 'n/a';\n                        }\n                        const href = '/#catalog/apps/' + job.appID;\n                        return (\n                            <Tooltip title={title}>\n                                <a href={href} target=\"_parent\">\n                                    {title}\n                                </a>\n                            </Tooltip>\n                        );\n                    }}\n                    sorter={(a: Job, b: Job) => {\n                        if (!a.appTitle) {\n                            if (!b.appTitle) {\n                                return 0;\n                            }\n                            return -1;\n                        } else {\n                            if (!b.appTitle) {\n                                return 1;\n                            }\n                            return a.appTitle.localeCompare(b.appTitle);\n                        }\n                    }}\n                />\n                <Table.Column\n                    title=\"Submitted\"\n                    dataIndex=\"queuedAt\"\n                    key=\"queuedAt\"\n                    width=\"8%\"\n                    render={(date: number, job: Job) => {\n                        if (!date) {\n                            return <span>** empty **</span>;\n                        }\n                        return <NiceRelativeTime time={new Date(date)} />;\n                    }}\n                    defaultSortOrder=\"descend\"\n                    sorter={(a: Job, b: Job) => {\n                        if (a.queuedAt === null) {\n                            if (b.queuedAt === null) {\n                                return 0;\n                            }\n                            return -1;\n                        } else {\n                            if (b.queuedAt === null) {\n                                return 1;\n                            }\n                            return a.queuedAt - b.queuedAt;\n                        }\n                    }}\n                />\n                <Table.Column\n                    title=\"Queued for\"\n                    dataIndex=\"queuedElapsed\"\n                    key=\"queuedElapsed\"\n                    width=\"8%\"\n                    render={(duration: number, job: Job) => {\n                        switch (job.status) {\n                            case JobStatus.QUEUED:\n                                return <NiceElapsedTime from={job.queuedAt} precision={2} useClock={true} />;\n                        }\n\n                    }}\n                // sorter={(a: Job, b: Job) => {\n                //     if (a.queuedElapsed === null) {\n                //         if (b.queuedElapsed === null) {\n                //             return 0;\n                //         }\n                //         return -1;\n                //     } else {\n                //         if (b.queuedElapsed === null) {\n                //             return 1;\n                //         }\n                //         return a.queuedElapsed - b.queuedElapsed;\n                //     }\n                // }}\n                />\n                <Table.Column\n                    title=\"Run for\"\n                    // dataIndex=\"runElapsed\"\n                    key=\"runElapsed\"\n                    width=\"10%\"\n                    render={(_, job: Job) => {\n                        switch (job.status) {\n                            case JobStatus.QUEUED:\n                                return '-';\n                            case JobStatus.RUNNING:\n                                return <NiceElapsedTime from={job.runAt} precision={2} useClock={true} />;\n                            case JobStatus.FINISHED:\n                            case JobStatus.CANCELED:\n                            case JobStatus.ERRORED:\n                                return <NiceElapsedTime from={job.runAt} to={job.finishAt} precision={2} />;\n                        }\n                    }}\n                // sorter={(a: Job, b: Job) => {\n                //     if (a.runElapsed === null) {\n                //         if (b.runElapsed === null) {\n                //             return 0;\n                //         }\n                //         return -1;\n                //     } else {\n                //         if (b.runElapsed === null) {\n                //             return 1;\n                //         }\n                //         return a.runElapsed - b.runElapsed;\n                //     }\n                // }}\n                />\n                <Table.Column\n                    title=\"Status\"\n                    dataIndex=\"status\"\n                    key=\"status\"\n                    width=\"8%\"\n                    render={(status: JobStatus) => {\n                        return <JobStatusBadge jobStatus={status} />\n                    }}\n                    sorter={(a: Job, b: Job) => {\n                        if (a.status === b.status) {\n                            return 0;\n                        }\n                        if (a.status === JobStatus.QUEUED) {\n                            return -1;\n                        }\n                        if (a.status === JobStatus.RUNNING) {\n                            if (b.status === JobStatus.QUEUED) {\n                                return 1;\n                            }\n                            return -1;\n                        }\n                        if (a.status === JobStatus.FINISHED) {\n                            if (b.status === JobStatus.QUEUED || b.status === JobStatus.RUNNING) {\n                                return 1;\n                            }\n                            return -1;\n                        }\n                        if (a.status === JobStatus.ERRORED) {\n                            if (b.status === JobStatus.CANCELED) {\n                                return -1;\n                            }\n                            return 1;\n                        }\n                        return 1;\n                    }}\n                />\n                <Table.Column\n                    title=\"Server Type\"\n                    dataIndex=\"clientGroups\"\n                    key=\"clientGroups\"\n                    width=\"8%\"\n                    render={(clientGroups: Array<string>) => {\n                        return clientGroups.join(',');\n                    }}\n                    sorter={(a: Job, b: Job) => {\n                        // TODO: sort client groups first...\n                        return a.clientGroups.join(',').localeCompare(b.clientGroups.join(','));\n                    }}\n                />\n                <Table.Column\n                    title=\"Cancel\"\n                    dataIndex=\"action\"\n                    key=\"action\"\n                    width=\"5%\"\n                    render={(status: JobStatus, job: Job) => {\n                        return this.renderJobAction(job);\n                    }}\n                />\n            </Table>\n        );\n    }\n\n    render() {\n        return (\n            <div data-k-b-testhook-component=\"MyJobs\">\n                <div>{this.renderControlBar()}</div>\n                <div>\n                    {this.renderJobsTable()}\n                </div>\n                {this.renderJobDetail()}\n            </div>\n        );\n    }\n}\n","import uuid from 'uuid';\n\nexport type TaskID = string;\n\nexport interface Task<ResultType> {\n    id: TaskID;\n    promise: Promise<ResultType>\n    isCanceled: boolean;\n}\n\n// type Request<ParamType, ResultType> = (param: ParamType) => Promise<ResultType>;\n\nexport default abstract class CancelableRequest<ParamType, ResultType> {\n    pendingTasks: Map<TaskID, Task<ResultType>>;\n    isCanceled: boolean;\n    constructor() {\n        this.pendingTasks = new Map<TaskID, Task<ResultType>>();\n        this.isCanceled = false;\n    }\n\n    newID() {\n        return uuid.v4();\n    }\n\n    cancel(task: Task<ResultType>) {\n        task.isCanceled = true;\n        this.pendingTasks.delete(task.id);\n    }\n\n    cancelPending() {\n        this.pendingTasks.forEach((task, key) => {\n            this.cancel(task);\n        });\n    }\n\n    done(task: Task<ResultType>) {\n        this.pendingTasks.delete(task.id);\n    }\n\n    spawn(param: ParamType): Task<ResultType> {\n        this.cancelPending();\n        return this.request(param);\n    }\n\n    abstract request(param: ParamType): Task<ResultType>;\n}","import { Job, JobsSearchExpression, EpochTime, StoreState } from '../store';\nimport MetricsServiceClient from '../../lib/MetricsServiceClient';\nimport { serviceJobToUIJob, compareTimeRange, compareStatus, extractTimeRange } from './utils';\nimport { Action } from 'redux';\nimport { ActionType } from '.';\nimport { NarrativeJobServiceClient } from '@kbase/ui-lib';\nimport { AppError } from '@kbase/ui-components';\nimport { ThunkDispatch } from 'redux-thunk';\nimport CancelableRequest, { Task } from '../../lib/CancelableRequest';\n\nexport interface UserJobsSearch extends Action<ActionType.USER_JOBS_SEARCH> {\n    type: ActionType.USER_JOBS_SEARCH;\n    searchExpression: JobsSearchExpression;\n}\n\nexport interface UserJobsSearchStart extends Action<ActionType.USER_JOBS_SEARCH_START> {\n    type: ActionType.USER_JOBS_SEARCH_START;\n}\n\nexport interface UserJobsSearchSuccess extends Action<ActionType.USER_JOBS_SEARCH_SUCCESS> {\n    type: ActionType.USER_JOBS_SEARCH_SUCCESS;\n    searchExpression: JobsSearchExpression;\n    rawJobs: Array<Job>;\n    jobs: Array<Job>;\n    jobsFetchedAt: EpochTime;\n}\n\nexport interface UserJobsSearchError extends Action<ActionType.USER_JOBS_SEARCH_ERROR> {\n    type: ActionType.USER_JOBS_SEARCH_ERROR;\n    error: AppError;\n}\n\nexport function userJobsSearchStart(): UserJobsSearchStart {\n    return {\n        type: ActionType.USER_JOBS_SEARCH_START\n    };\n}\n\nexport function userJobsSearchSuccess(\n    rawJobs: Array<Job>,\n    jobs: Array<Job>,\n    jobsFetchedAt: EpochTime,\n    searchExpression: JobsSearchExpression\n): UserJobsSearchSuccess {\n    return {\n        type: ActionType.USER_JOBS_SEARCH_SUCCESS,\n        searchExpression,\n        rawJobs,\n        jobs,\n        jobsFetchedAt\n    };\n}\n\nexport function userJobsSearchError(error: AppError): UserJobsSearchError {\n    return {\n        type: ActionType.USER_JOBS_SEARCH_ERROR,\n        error\n    };\n}\n\ninterface UserJobsParam {\n    token: string,\n    serviceWizardURL: string,\n    from: number,\n    to: number\n}\n\ntype UserJobsResult = Array<Job>;\n\nclass UserJobsRequest extends CancelableRequest<UserJobsParam, UserJobsResult> {\n    request({ token, serviceWizardURL, from, to }: UserJobsParam): Task<UserJobsResult> {\n        const client = new MetricsServiceClient({\n            url: serviceWizardURL,\n            token: token\n        });\n        const promise = client\n            .getJobs({\n                epoch_range: [from, to],\n                user_ids: []\n            })\n            .then((metrics) => {\n                const converted = metrics.job_states.map((jobState) => {\n                    return serviceJobToUIJob(jobState, 'UNKNOWN');\n                });\n                return converted;\n            })\n\n        const task: Task<UserJobsResult> = {\n            id: this.newID(),\n            promise,\n            isCanceled: false\n        }\n        this.pendingTasks.set(task.id, task);\n        return task;\n    }\n}\n\nconst userJobsSearchRequest = new UserJobsRequest();\n\nexport function userJobsSearch(searchExpression: JobsSearchExpression) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(userJobsSearchStart());\n\n        const {\n            auth: { userAuthorization },\n            app: {\n                config: {\n                    services: {\n                        ServiceWizard: { url: serviceWizardURL }\n                    }\n                }\n            }\n        } = getState();\n\n        if (!userAuthorization) {\n            dispatch(\n                userJobsSearchError({\n                    message: 'Not authorized',\n                    code: 'unauthorized'\n                })\n            );\n            return;\n        }\n\n        let {\n            views: {\n                userJobsView: { jobsFetchedAt, rawJobs }\n            }\n        } = getState();\n\n        const searchTerms = searchExpression.query.split(/\\s+/).map((term) => {\n            return new RegExp(term, 'i');\n        });\n\n        const [timeRangeStart, timeRangeEnd] = extractTimeRange(searchExpression.timeRange);\n\n        if (!jobsFetchedAt || searchExpression.forceSearch) {\n\n            const task = userJobsSearchRequest.spawn({\n                token: userAuthorization.token,\n                serviceWizardURL,\n                from: timeRangeStart,\n                to: timeRangeEnd\n            });\n\n            rawJobs = await task.promise;\n            if (task.isCanceled) {\n                // just do nothing\n                return;\n            }\n            jobsFetchedAt = new Date().getTime();\n            userJobsSearchRequest.done(task);\n\n            // rawJobs = await fetchAllUserJobs(userAuthorization.token, serviceWizardURL, timeRangeStart, timeRangeEnd);\n            jobsFetchedAt = new Date().getTime();\n            // UPDATE: update the raw jobs\n        }\n\n        const newJobs = rawJobs.filter((job) => {\n            return (\n                searchTerms.every((term) => {\n                    return term.test(job.appTitle) || term.test(job.narrativeTitle) || term.test(job.id);\n                }) &&\n                compareTimeRange(\n                    job,\n                    // searchExpression.timeRange,\n                    timeRangeStart,\n                    timeRangeEnd\n                ) &&\n                compareStatus(job, searchExpression.jobStatus)\n            );\n        });\n\n        dispatch(userJobsSearchSuccess(rawJobs, newJobs, jobsFetchedAt, searchExpression));\n    };\n}\n\nexport function userJobsRefreshSearch() {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(userJobsSearchStart());\n\n        const {\n            auth: { userAuthorization }\n        } = getState();\n\n        if (!userAuthorization) {\n            dispatch(\n                userJobsSearchError({\n                    message: 'Not authorized',\n                    code: 'unauthorized'\n                })\n            );\n            return;\n        }\n\n        const {\n            app: {\n                config: {\n                    services: {\n                        ServiceWizard: { url: serviceWizardURL }\n                    }\n                }\n            },\n            views: {\n                userJobsView: { searchExpression }\n            }\n        } = getState();\n\n        if (!searchExpression) {\n            userJobsSearchError({\n                message: 'No search expression',\n                code: 'nosearchexpression'\n            });\n            return;\n        }\n\n        const searchTerms = searchExpression.query.split(/\\s+/).map((term) => {\n            return new RegExp(term, 'i');\n        });\n\n        const [timeRangeStart, timeRangeEnd] = extractTimeRange(searchExpression.timeRange);\n\n\n        const task = userJobsSearchRequest.spawn({\n            token: userAuthorization.token,\n            serviceWizardURL,\n            from: timeRangeStart,\n            to: timeRangeEnd\n        });\n\n        const rawJobs = await task.promise;\n        if (task.isCanceled) {\n            // just do nothing\n            return;\n        }\n\n        userJobsSearchRequest.done(task);\n\n        const newJobs = rawJobs.filter((job) => {\n            return (\n                searchTerms.every((term) => {\n                    return term.test(job.appTitle) || term.test(job.narrativeTitle);\n                }) &&\n                compareTimeRange(\n                    job,\n                    // searchExpression.timeRange,\n                    timeRangeStart,\n                    timeRangeEnd\n                ) &&\n                compareStatus(job, searchExpression.jobStatus)\n            );\n        });\n\n        dispatch(userJobsSearchSuccess(rawJobs, newJobs, Date.now(), searchExpression));\n    };\n}\n\n// user job cancellation...\n// Job Cancelation\n\nexport interface UserJobsCancelJob {\n    type: ActionType.USER_JOBS_CANCEL;\n    jobID: string;\n}\n\nexport interface UserJobsCancelJobStart {\n    type: ActionType.USER_JOBS_CANCEL_START;\n}\n\nexport interface UserJobsCancelJobSuccess {\n    type: ActionType.USER_JOBS_CANCEL_SUCCESS;\n}\n\nexport interface UserJobsCancelJobError {\n    type: ActionType.USER_JOBS_CANCEL_ERROR;\n    error: AppError;\n}\n\nexport function userJobsCancelJobStart(): UserJobsCancelJobStart {\n    return {\n        type: ActionType.USER_JOBS_CANCEL_START\n    };\n}\n\nexport function userJobsCancelJobSuccess(): UserJobsCancelJobSuccess {\n    return {\n        type: ActionType.USER_JOBS_CANCEL_SUCCESS\n    };\n}\n\nexport function userJobsCancelJobError(error: AppError): UserJobsCancelJobError {\n    return {\n        type: ActionType.USER_JOBS_CANCEL_ERROR,\n        error\n    };\n}\n\nexport function userJobsCancelJob(jobID: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(userJobsCancelJobStart());\n\n        const {\n            auth: { userAuthorization },\n            app: {\n                config: {\n                    services: {\n                        NarrativeJobService: { url: njsURL }\n                    }\n                }\n            }\n        } = getState();\n\n        if (!userAuthorization) {\n            dispatch(\n                userJobsCancelJobError({\n                    message: 'no authorization',\n                    code: 'no-authorization'\n                })\n            );\n            return;\n        }\n\n        // do it\n        const njsClient = new NarrativeJobServiceClient({\n            url: njsURL,\n            token: userAuthorization.token,\n            module: 'NarrativeJobService'\n        });\n        njsClient\n            .cancelJob({ job_id: jobID })\n            .then(() => {\n                dispatch(userJobsCancelJobSuccess());\n                dispatch(userJobsRefreshSearch());\n            })\n            .catch((err) => {\n                console.error('error canceling job', err);\n                dispatch(\n                    userJobsCancelJobError({\n                        message: 'error canceling job: ' + err.message,\n                        code: 'error-canceling'\n                    })\n                );\n            });\n    };\n}\n","/**\n * A redux adapter container for the User Jobs view component.\n *\n * For those not familiar with redux-based apps: Redux exists as a parallel system to the react component hierarchy. The react \"store\" (database)\n * is established in the top level `App` component. A component can access the store data and the store actions through what is commonly\n * referred to as a \"container\" module. We prefer to call them \"redux adapters\", to be more specific.\n *\n * A redux adapter is a separate component file. It essentially creates a component (via the `connect` function) which \"wraps\" the underlying\n * view component. It extracts the data and action generators and supplies them to the view component.\n */\n\n/**\n * Imports, ignore\n */\n// 3rd party\nimport { Dispatch, Action } from 'redux';\nimport { connect } from 'react-redux';\n\n// project\nimport UserJobs from './view';\nimport { StoreState, Job, JobsSearchExpression, SearchState } from '../../redux/store';\nimport { userJobsSearch, userJobsCancelJob } from '../../redux/actions/userJobs';\n\n/**\n * The props which this redux adapter requires in it's invocation.\n *\n * Current empty\n */\nexport interface OwnProps { }\n\n/**\n * The props this redux adapter extracts from the store and injects in\n * its call to the child component, UserJobs.\n *\n * @note These properties must exist in UserJobs.\n */\ninterface StateProps {\n    jobs: Array<Job>;\n    searchState: SearchState;\n    showMonitoringControls: boolean;\n    // searchExpression: JobsSearchExpression;\n}\n\n/**\n * The props this redux adapter extracts from actions and injects into\n * its call to the child component, UserJobs.\n *\n * @note These properties must exist in UserJobs.\n */\ninterface DispatchProps {\n    search: (searchExpression: JobsSearchExpression) => void;\n    cancelJob: (jobID: string) => void;\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const {\n        auth: { userAuthorization },\n        views: {\n            userJobsView: { searchState, jobs }\n        }\n    } = state;\n\n    if (!userAuthorization) {\n        throw new Error('Not authorized!');\n    }\n\n    // const { roles } = userAuthorization\n    // const showMonitoringControls = roles.some((role) => {\n    //     return role === 'DevToken';\n    // })\n    const showMonitoringControls = true;\n    return { jobs, searchState, showMonitoringControls };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>, ownProps: OwnProps): DispatchProps {\n    return {\n        search: (searchExpression: JobsSearchExpression) => {\n            dispatch(userJobsSearch(searchExpression) as any);\n        },\n        cancelJob: (jobID: string) => {\n            dispatch(userJobsCancelJob(jobID) as any);\n        }\n    };\n}\n\nconst UserJobsReduxAdapter = connect<StateProps, DispatchProps, OwnProps, StoreState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserJobs);\n\nexport default UserJobsReduxAdapter;\n","/**\n * A component for browsing through (search, filter, sort) jobs submitted by\n * the current user.\n */\n\n/** imports */\n// 3rd party imports\nimport React from 'react';\nimport { Table, Form, Input, Button, Checkbox, Select, DatePicker, Popconfirm, Tooltip, Modal, Switch } from 'antd';\nimport { CheckboxValueType } from 'antd/lib/checkbox/Group';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\nimport moment, { Moment } from 'moment';\n\n// project imports\nimport { Job, JobStatus, JobsSearchExpression, SearchState, TimeRangePresets, TimeRange } from '../../redux/store';\n\n// kbase imports (or should be kbase imports)\nimport { NiceRelativeTime, NiceElapsedTime } from '@kbase/ui-components';\nimport JobStatusBadge from '../JobStatus'\n\n// project imoprts\nimport JobDetail from '../JobDetail';\n\n// file imports\nimport './style.css';\nimport Monitor from '../Monitor';\nimport PubSub from '../../lib/PubSub';\n\n/**\n * This version of the job status defines the set of strings that may be used\n * in the ui controls.\n *\n */\ntype JobStatusFilterKey = 'queued' | 'running' | 'canceled' | 'success' | 'error';\n\n/**\n * This interface describes a single option for the available job status filter options.\n *\n * Job status filter options are used to populate the checkboxgroup.\n * Note that the value of each option is a job status filter key.\n */\ninterface JobStatusFilterOption {\n    label: string;\n    value: JobStatusFilterKey;\n}\n\n/**\n * A set of job status filter options used to populate and control a set of checkboxes provided\n * for the user to be able to filter jobs according to their job status.\n *\n * Note that this is a set of options because the antd checkboxgroup simplifies a set of checkboxes\n * through sets of options.\n */\nconst jobStatusFilterOptions: Array<JobStatusFilterOption> = [\n    {\n        label: 'Queued',\n        value: 'queued'\n    },\n    {\n        label: 'Running',\n        value: 'running'\n    },\n    {\n        label: 'Canceled',\n        value: 'canceled'\n    },\n    {\n        label: 'Success',\n        value: 'success'\n    },\n    {\n        label: 'Error',\n        value: 'error'\n    }\n];\n\n// const jobStatusFilterOptionsActive: Array<JobStatusFilterOption> = [\n//     {\n//         label: 'Queued',\n//         value: 'queued'\n//     },\n//     {\n//         label: 'Running',\n//         value: 'running'\n//     }\n// ];\n\n/**\n * Translates an array of job status filter keys, as provided by the ui job status\n * filter checkboxes, to an array of job statuses suitable for passing to the job\n * status search.\n *\n * @param filter - an array of job status filter keys\n *\n * @note Since the switch is over an enum, we don't have to worry about the default case\n *\n * @returns an array of job statuses\n */\nfunction jobStatusFilterOptionsToJobStatus(filter: Array<JobStatusFilterKey>): Array<JobStatus> {\n    let jobStatuses: Array<JobStatus> = [];\n    filter.forEach((status) => {\n        switch (status) {\n            case 'queued':\n                jobStatuses.push(JobStatus.QUEUED);\n                break;\n            case 'running':\n                jobStatuses.push(JobStatus.RUNNING);\n                break;\n            case 'canceled':\n                jobStatuses.push(JobStatus.CANCELED);\n                break;\n            case 'success':\n                jobStatuses.push(JobStatus.FINISHED);\n                break;\n            case 'error':\n                jobStatuses.push(JobStatus.ERRORED);\n                break;\n        }\n    });\n    return jobStatuses;\n}\n\n/**\n * Semantic aliasing of for epoch time in milliseconds, as produced\n * by Date.now(), new Date().getTime(), etc.\n *\n * @todo move to a common location\n */\ntype EpochTime = number;\n\n/**\n * Props for the MyJobs component\n */\nexport interface MyJobsProps {\n    /** The list of jobs to display */\n    jobs: Array<Job>;\n    /** The current search state, used to control the primary display (none, searching, searched, error) */\n    searchState: SearchState;\n    showMonitoringControls: boolean\n    /** Triggers a redux action to search of the user's jobs according to the given search expression\n     * @remarks Since at present the service used to fetch the jobs can suffer performance issues, the\n     * default search action does not fetch search results each time (rather ??).\n     * @todo when job search is more performant, this function may be removed and redirected to the\n     * search function.\n     */\n    search: (searchExpression: JobsSearchExpression) => void;\n    /** Triggers a redux action to cancel the indicated job */\n    cancelJob: (jobID: string) => void;\n}\n\n/**\n * State for the MyJobs component\n */\ninterface MyJobsState {\n    /** Flag to show the date controls */\n    showDates: boolean;\n    /** Contains the current selection of job statuses in the checkbox control */\n    currentJobStatusFilter: Array<JobStatusFilterKey>;\n    /** Contains the initial timestamp (ms epoch time) for time range */\n    // rangeFrom: EpochTime;\n    // /** The ending timestamp (ms epoch time) for the time range */\n    // rangeTo: EpochTime;\n    timeRange: TimeRange;\n\n    isFilterOpen: boolean;\n\n    selectedJob: Job | null;\n}\n\n/**\n * A View Component for browsing through the current user's jobs.\n *\n * @remarks\n * This component is really just a tabular view into a user's jobs. It provides\n * support for free text searching, filtering by job state, and date ranges.\n *\n */\nexport default class MyJobs extends React.Component<MyJobsProps, MyJobsState> {\n    currentQuery?: string;\n\n    static defaultTimeRangePreset: TimeRangePresets = 'lastWeek';\n\n    pubsub: PubSub;\n\n    constructor(props: MyJobsProps) {\n        super(props);\n\n        this.currentQuery = '';\n        this.pubsub = new PubSub();\n\n        this.state = {\n            showDates: false,\n            currentJobStatusFilter: ['queued', 'running', 'canceled', 'success', 'error'],\n            timeRange: { kind: 'preset', preset: MyJobs.defaultTimeRangePreset },\n            isFilterOpen: false,\n            selectedJob: null\n        };\n    }\n\n    componentDidMount() {\n        this.doSearch(true);\n    }\n\n    componentDidUpdate() {\n        if (this.props.searchState === SearchState.SEARCHING) {\n            this.pubsub.send('searching', { is: true })\n        } else {\n            this.pubsub.send('searching', { is: false })\n        }\n    }\n\n    onChangeTimeRange(value: string) {\n        // TODO: should narrow the string value\n        if (value === 'customRange') {\n            this.setState({\n                showDates: true,\n                timeRange: { kind: 'literal', start: Date.now(), end: Date.now() }\n            });\n            // nothing else to do.\n            return;\n        } else {\n            this.setState(\n                {\n                    showDates: false,\n                    timeRange: { kind: 'preset', preset: value as TimeRangePresets }\n                },\n                () => {\n                    this.doSearch(true);\n                }\n            );\n        }\n    }\n\n    onChangeQuery(event: React.ChangeEvent<HTMLInputElement>) {\n        this.currentQuery = event.target.value;\n    }\n\n    onSubmit(event: React.FormEvent) {\n        event.preventDefault();\n        this.doSearch(true);\n    }\n\n    doSearch(forceSearch: boolean) {\n        if (typeof this.currentQuery === 'undefined') {\n            return;\n        }\n\n        const jobStatusFilter = jobStatusFilterOptionsToJobStatus(this.state.currentJobStatusFilter);\n\n        const searchExpression: JobsSearchExpression = {\n            query: this.currentQuery,\n            timeRange: this.state.timeRange,\n            jobStatus: jobStatusFilter,\n            forceSearch\n        };\n\n        this.pubsub.send('search', {});\n\n        this.props.search(searchExpression);\n        return false;\n    }\n\n    onRangeFromChange(date: Moment | null, dateString: string) {\n        // TODO: if the range ends up null (how?), should it default\n        // to the previously selected preset? For now, just go back to lastHourl.\n        if (date === null) {\n            this.setState({\n                timeRange: {\n                    kind: 'preset',\n                    preset: 'lastHour'\n                }\n            });\n            return;\n        }\n\n        // handle logic of switching from 'preset' to 'literal'\n        let existingTimeRange = this.state.timeRange;\n        let timeRange: TimeRange;\n        switch (existingTimeRange.kind) {\n            case 'preset':\n                timeRange = {\n                    kind: 'literal',\n                    start: date.valueOf(),\n                    end: Infinity\n                };\n                break;\n            case 'literal':\n                timeRange = {\n                    kind: 'literal',\n                    start: date.valueOf(),\n                    end: existingTimeRange.end\n                };\n                break;\n            default:\n                return;\n        }\n\n        this.setState({\n            timeRange\n        });\n    }\n\n    onRangeToChange(date: Moment | null, dateString: string) {\n        // TODO: if the range ends up null (how?), should it default\n        // to the previously selected preset? For now, just go back to lastHourl.\n        if (date === null) {\n            this.setState({\n                timeRange: {\n                    kind: 'preset',\n                    preset: 'lastHour'\n                }\n            });\n            return;\n        }\n\n        let existingTimeRange = this.state.timeRange;\n        let timeRange: TimeRange;\n        switch (existingTimeRange.kind) {\n            case 'preset':\n                timeRange = {\n                    kind: 'literal',\n                    start: Infinity,\n                    end: date.valueOf()\n                };\n                break;\n            case 'literal':\n                timeRange = {\n                    kind: 'literal',\n                    start: existingTimeRange.start,\n                    end: date.valueOf()\n                };\n                break;\n            default:\n                return;\n        }\n\n        this.setState({\n            timeRange\n        });\n    }\n\n    renderSearchInput() {\n        let dateControls;\n        if (this.state.showDates) {\n            const timeRange = this.state.timeRange;\n            if (timeRange.kind === 'literal') {\n                dateControls = (\n                    <React.Fragment>\n                        <Form.Item label=\"From\">\n                            <DatePicker\n                                showTime={true}\n                                allowClear={false}\n                                value={moment(timeRange.start)}\n                                onChange={this.onRangeFromChange.bind(this)}\n                            />\n                        </Form.Item>\n                        <Form.Item label=\"To\">\n                            <DatePicker\n                                showTime={true}\n                                allowClear={false}\n                                value={moment(timeRange.end)}\n                                onChange={this.onRangeToChange.bind(this)}\n                            />\n                        </Form.Item>\n                    </React.Fragment>\n                );\n            }\n        }\n        return (\n            <Form layout=\"inline\" onSubmit={this.onSubmit.bind(this)}>\n                <Form.Item>\n                    <Input\n                        defaultValue={this.currentQuery}\n                        placeholder=\"Search jobs\"\n                        style={{ width: '15em' }}\n                        onChange={this.onChangeQuery.bind(this)}\n                    />\n                </Form.Item>\n\n                <Form.Item label=\"TimeRange\" />\n                <Form.Item>\n                    <Select\n                        defaultValue={MyJobs.defaultTimeRangePreset}\n                        onChange={this.onChangeTimeRange.bind(this)}\n                        dropdownMatchSelectWidth={true}\n                        style={{ width: '11em' }}\n                    >\n                        <Select.Option value=\"lastHour\">Previous Hour</Select.Option>\n                        <Select.Option value=\"last48Hours\">Previous 48 Hours</Select.Option>\n                        <Select.Option value=\"lastWeek\">Previous Week</Select.Option>\n                        <Select.Option value=\"lastMonth\">Previous Month</Select.Option>\n                        <Select.Option value=\"customRange\">Custom Range</Select.Option>\n                    </Select>\n                </Form.Item>\n                {dateControls}\n\n                <Form.Item>\n                    <Button icon=\"search\" type=\"primary\" htmlType=\"submit\" />\n                </Form.Item>\n\n                <Form.Item>\n                    <Switch checkedChildren=\"hide filters\" unCheckedChildren=\"show filters\" onChange={this.onToggleFilterArea.bind(this)} />\n                </Form.Item>\n\n                <Form.Item>\n                    <Monitor\n                        onPoll={() => {\n                            this.doSearch(true);\n                        }}\n                        pubsub={this.pubsub}\n                        isPollerRunning={this.props.searchState === SearchState.SEARCHING}\n                        startPolling={false}\n                        showControls={this.props.showMonitoringControls}\n                        startOpen={false}\n                    />\n                </Form.Item>\n            </Form>\n        );\n    }\n\n    onToggleFilterArea(isFilterOpen: boolean) {\n        this.setState({ isFilterOpen })\n        // this.setState({ isFilterOpen: !this.state.isFilterOpen });\n    }\n\n    onFilterChange(filters: Array<CheckboxValueType>) {\n        const filter = filters as Array<JobStatusFilterKey>;\n        this.setState(\n            {\n                currentJobStatusFilter: filter\n            },\n            () => {\n                this.doSearch(false);\n            }\n        );\n    }\n\n    onChangeJobStatusAny(event: CheckboxChangeEvent) {\n        if (event.target.checked) {\n            this.setState(\n                {\n                    currentJobStatusFilter: ['queued', 'running', 'canceled', 'success', 'error']\n                },\n                () => {\n                    this.doSearch(false);\n                }\n            );\n        }\n    }\n\n    onClickAny() {\n        this.setState(\n            {\n                currentJobStatusFilter: ['queued', 'running', 'canceled', 'success', 'error']\n            },\n            () => {\n                this.doSearch(false);\n            }\n        );\n    }\n\n    onClickFinished() {\n        this.setState(\n            {\n                currentJobStatusFilter: ['canceled', 'success', 'error']\n            },\n            () => {\n                this.doSearch(false);\n            }\n        );\n    }\n\n    onClickActive() {\n        this.setState(\n            {\n                currentJobStatusFilter: ['queued', 'running']\n            },\n            () => {\n                this.doSearch(false);\n            }\n        );\n    }\n\n    renderFilterInput() {\n        const options = jobStatusFilterOptions;\n        return (\n            <div className=\"MyJobs-filterArea\">\n                <span style={{ color: 'gray', fontWeight: 'bold', marginRight: '10px' }}>Filter by Job Status</span>\n                <Button size=\"small\" type=\"link\" onClick={this.onClickAny.bind(this)} data-k-b-testhook-button=\"any\">\n                    <i>Any</i>\n                </Button>{' '}\n                <Button size=\"small\" type=\"link\" onClick={this.onClickActive.bind(this)} data-k-b-testhook-button=\"active\">\n                    <i>Active</i>\n                </Button>{' '}\n                <Button\n                    size=\"small\" type=\"link\"\n                    onClick={this.onClickFinished.bind(this)}\n                    style={{ marginRight: '10px' }}\n                    data-k-b-testhook-button=\"finished\"\n                >\n                    <i>Finished</i>\n                </Button>\n                <Checkbox.Group\n                    options={options}\n                    onChange={this.onFilterChange.bind(this)}\n                    value={this.state.currentJobStatusFilter}\n                />\n            </div>\n        );\n    }\n\n    renderControlBar() {\n        let filterRowStyle: React.CSSProperties = { margin: '10px 10px 10px 0' };\n        if (!this.state.isFilterOpen) {\n            filterRowStyle.display = 'none';\n        }\n        let filterRow;\n        if (this.state.isFilterOpen) {\n            filterRow = <div className=\"Row\" style={filterRowStyle}>\n                {this.renderFilterInput()}\n            </div>\n        }\n        return (\n            <div className=\"Col\">\n                <div className=\"Row\">{this.renderSearchInput()}</div>\n                {filterRow}\n            </div>\n        );\n    }\n\n    onJobCancel(job: Job) {\n        this.props.cancelJob(job.id);\n    }\n\n    renderJobAction(job: Job) {\n        switch (job.status) {\n            case JobStatus.QUEUED:\n            case JobStatus.RUNNING:\n                return (\n                    <Popconfirm\n                        title=\"Cancel this job?\"\n                        onConfirm={() => {\n                            this.onJobCancel(job);\n                        }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button\n                            icon=\"close\"\n                            type=\"danger\"\n                            // onClick={() => {\n                            //     this.onJobCancel(job);\n                            // }}\n                            data-k-b-testhook-button=\"cancel\"\n                        />\n                    </Popconfirm>\n                );\n            default:\n                return;\n        }\n    }\n\n    onClickDetail(job: Job) {\n        this.setState({\n            selectedJob: job\n        });\n    }\n\n    onCloseModal() {\n        this.setState({\n            selectedJob: null\n        });\n    }\n\n    renderJobsTable() {\n        const loading = this.props.searchState === SearchState.SEARCHING;\n        return (\n            <Table\n                size=\"small\"\n                className=\"MyJobs-table\"\n                dataSource={this.props.jobs}\n                loading={loading}\n                rowKey={(job: Job) => {\n                    return job.id;\n                }}\n                pagination={{ position: 'bottom', showSizeChanger: true }}\n\n            >\n                <Table.Column\n                    title=\"Job ID\"\n                    dataIndex=\"id\"\n                    key=\"id\"\n                    width=\"5%\"\n                    render={(jobID: string, job: Job): any => {\n                        const title = jobID;\n                        return (\n                            <Tooltip title={title}>\n                                <a href=\"https://example.com\" onClick={(e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n                                    e.preventDefault();\n                                    this.onClickDetail(job)\n                                }}>{jobID}</a>\n                            </Tooltip>\n                        )\n                    }}\n                    sorter={(a: Job, b: Job) => {\n                        return a.id.localeCompare(b.id);\n                    }}\n                />\n                <Table.Column\n                    title=\"Narrative\"\n                    dataIndex=\"narrativeTitle\"\n                    key=\"narrativeTitle\"\n                    width=\"17%\"\n                    render={(title: string, job: Job): any => {\n                        if (!title || !job.narrativeID) {\n                            return 'n/a';\n                        }\n                        return (\n                            <Tooltip title={title}>\n                                <a\n                                    href={`/narrative/${job.narrativeID}`}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    {title}\n                                </a>\n                            </Tooltip>\n                        );\n                    }}\n                    sorter={(a: Job, b: Job) => {\n                        return a.narrativeTitle.localeCompare(b.narrativeTitle);\n                    }}\n                />\n                <Table.Column\n                    title=\"App\"\n                    dataIndex=\"appTitle\"\n                    key=\"appTitle\"\n                    width=\"18%\"\n                    render={(title: string, job: Job): any => {\n                        if (!title) {\n                            return 'n/a';\n                        }\n                        const href = '/#catalog/apps/' + job.appID;\n                        return (\n                            <Tooltip title={title}>\n                                <a href={href}>{title}</a>\n                            </Tooltip>\n                        );\n                    }}\n                    sorter={(a: Job, b: Job) => {\n                        return a.appTitle.localeCompare(b.appTitle);\n                    }}\n                />\n                <Table.Column\n                    title=\"Submitted\"\n                    dataIndex=\"queuedAt\"\n                    key=\"queuedAt\"\n                    width=\"10%\"\n                    render={(date: number, job: Job) => {\n                        if (!date) {\n                            return <span>** empty **</span>;\n                        }\n                        return <NiceRelativeTime time={new Date(date)} />;\n                    }}\n                    defaultSortOrder=\"descend\"\n                    sorter={(a: Job, b: Job) => {\n                        if (a.queuedAt === null) {\n                            if (b.queuedAt === null) {\n                                return 0;\n                            }\n                            return -1;\n                        } else {\n                            if (b.queuedAt === null) {\n                                return 1;\n                            }\n                            return a.queuedAt - b.queuedAt;\n                        }\n                    }}\n                />\n                <Table.Column\n                    title=\"Queued for\"\n                    dataIndex=\"queuedElapsed\"\n                    key=\"queuedElapsed\"\n                    width=\"10%\"\n                    render={(_, job: Job) => {\n                        switch (job.status) {\n                            case JobStatus.QUEUED:\n                                return <NiceElapsedTime from={job.queuedAt} precision={2} useClock={true} />;\n                            default:\n                                return <NiceElapsedTime from={job.queuedAt} to={job.runAt} precision={2} />;\n                        }\n\n                    }}\n                // sorter={(a: Job, b: Job) => {\n                //     if (a.queuedElapsed === null) {\n                //         if (b.queuedElapsed === null) {\n                //             return 0;\n                //         }\n                //         return -1;\n                //     } else {\n                //         if (b.queuedElapsed === null) {\n                //             return 1;\n                //         }\n                //         return a.queuedElapsed - b.queuedElapsed;\n                //     }\n                // }}\n                />\n                <Table.Column\n                    title=\"Run for\"\n                    // dataIndex=\"runElapsed\"\n                    key=\"runElapsed\"\n                    width=\"10%\"\n                    render={(_, job: Job) => {\n                        switch (job.status) {\n                            case JobStatus.QUEUED:\n                                return '-';\n                            case JobStatus.RUNNING:\n                                return <NiceElapsedTime from={job.runAt} precision={2} useClock={true} />;\n                            case JobStatus.FINISHED:\n                            case JobStatus.CANCELED:\n                            case JobStatus.ERRORED:\n                                return <NiceElapsedTime from={job.runAt} to={job.finishAt} precision={2} />;\n                        }\n                    }}\n                // sorter={(a: Job, b: Job) => {\n                //     if (a.runElapsed === null) {\n                //         if (b.runElapsed === null) {\n                //             return 0;\n                //         }\n                //         return -1;\n                //     } else {\n                //         if (b.runElapsed === null) {\n                //             return 1;\n                //         }\n                //         return a.runElapsed - b.runElapsed;\n                //     }\n                // }}\n                />\n                <Table.Column\n                    title=\"Status\"\n                    dataIndex=\"status\"\n                    key=\"status\"\n                    width=\"10%\"\n                    render={(status: JobStatus) => {\n                        return <JobStatusBadge jobStatus={status} />;\n                    }}\n                    sorter={(a: Job, b: Job) => {\n                        if (a.status === b.status) {\n                            return 0;\n                        }\n                        if (a.status === JobStatus.QUEUED) {\n                            return -1;\n                        }\n                        if (a.status === JobStatus.RUNNING) {\n                            if (b.status === JobStatus.QUEUED) {\n                                return 1;\n                            }\n                            return -1;\n                        }\n                        if (a.status === JobStatus.FINISHED) {\n                            if (b.status === JobStatus.QUEUED || b.status === JobStatus.RUNNING) {\n                                return 1;\n                            }\n                            return -1;\n                        }\n                        if (a.status === JobStatus.ERRORED) {\n                            if (b.status === JobStatus.CANCELED) {\n                                return -1;\n                            }\n                            return 1;\n                        }\n                        return 1;\n                    }}\n                />\n                <Table.Column\n                    title=\"Server Type\"\n                    dataIndex=\"clientGroups\"\n                    key=\"clientGroups\"\n                    width=\"10%\"\n                    render={(clientGroups: Array<string>) => {\n                        return clientGroups.join(',');\n                    }}\n                    sorter={(a: Job, b: Job) => {\n                        // TODO: sort client groups first...\n                        return a.clientGroups.join(',').localeCompare(b.clientGroups.join(','));\n                    }}\n                />\n                <Table.Column\n                    title=\"Cancel\"\n                    dataIndex=\"action\"\n                    key=\"action\"\n                    width=\"5%\"\n                    render={(status: JobStatus, job: Job) => {\n                        return this.renderJobAction(job);\n                    }}\n                />\n            </Table>\n        )\n    }\n\n    renderJobDetail() {\n        if (!this.state.selectedJob) {\n            return;\n        }\n        const footer = (\n            <Button key=\"cancel\" onClick={this.onCloseModal.bind(this)}>\n                Close\n            </Button>\n        )\n        const title = (\n            <span>\n                Detail for Job <span style={{ fontFamily: 'monospace' }}>${this.state.selectedJob.id}</span>\n                {' '}\n                <JobStatusBadge jobStatus={this.state.selectedJob.status} />\n            </span>\n        )\n        return (\n            <Modal className=\"FullScreenModal\" title={title}\n                onCancel={this.onCloseModal.bind(this)} visible={true}\n                footer={footer}>\n                <JobDetail jobID={this.state.selectedJob.id} />\n            </Modal>\n        )\n    }\n\n    render() {\n        return (\n            <div data-k-b-testhook-component=\"MyJobs\">\n                <div>{this.renderControlBar()}</div>\n                <div>\n                    {this.renderJobsTable()}\n                </div>\n                {this.renderJobDetail()}\n            </div>\n        );\n    }\n}\n","import { Action } from 'redux';\nimport { ActionType } from '.';\nimport { JobsSearchExpression, Job, EpochTime, StoreState } from '../store';\nimport { NarrativeJobServiceClient } from '@kbase/ui-lib';\nimport { AppError } from '@kbase/ui-components';\nimport MetricsServiceClient from '../../lib/MetricsServiceClient';\nimport { serviceJobToUIJob, compareTimeRange, compareStatus, extractTimeRange } from './utils';\nimport { ThunkDispatch } from 'redux-thunk';\nimport CancelableRequest, { Task } from '../../lib/CancelableRequest';\n\n// MY JOBS TAB\n\nexport interface MyJobsSearch extends Action<ActionType.MY_JOBS_SEARCH> {\n    type: ActionType.MY_JOBS_SEARCH;\n    searchExpression: JobsSearchExpression;\n}\n\nexport interface MyJobsSearchStart extends Action<ActionType.MY_JOBS_SEARCH_START> {\n    type: ActionType.MY_JOBS_SEARCH_START;\n}\n\nexport interface MyJobsSearchSuccess extends Action<ActionType.MY_JOBS_SEARCH_SUCCESS> {\n    type: ActionType.MY_JOBS_SEARCH_SUCCESS;\n    searchExpression: JobsSearchExpression;\n    rawJobs: Array<Job>;\n    jobs: Array<Job>;\n    jobsFetchedAt: EpochTime;\n}\n\nexport interface MyJobsSearchError extends Action<ActionType.MY_JOBS_SEARCH_ERROR> {\n    type: ActionType.MY_JOBS_SEARCH_ERROR;\n    error: AppError;\n}\n\nexport function myJobsSearchStart() {\n    return {\n        type: ActionType.MY_JOBS_SEARCH_START\n    };\n}\n\nexport function myJobsSearchSuccess(\n    rawJobs: Array<Job>,\n    jobs: Array<Job>,\n    jobsFetchedAt: EpochTime,\n    searchExpression: JobsSearchExpression\n): MyJobsSearchSuccess {\n    return {\n        type: ActionType.MY_JOBS_SEARCH_SUCCESS,\n        searchExpression,\n        rawJobs,\n        jobs,\n        jobsFetchedAt\n    };\n}\n\nexport function myJobsSearchError(error: AppError) {\n    return {\n        type: ActionType.MY_JOBS_SEARCH_ERROR,\n        error\n    };\n}\n\ninterface MyJobsParam {\n    token: string,\n    username: string,\n    serviceWizardURL: string,\n    from: number,\n    to: number\n}\n\ntype MyJobsResult = Array<Job>;\n\nclass MyJobsRequests extends CancelableRequest<MyJobsParam, MyJobsResult> {\n    request({ token, username, serviceWizardURL, from, to }: MyJobsParam): Task<MyJobsResult> {\n        const client = new MetricsServiceClient({\n            url: serviceWizardURL,\n            token: token\n        });\n        const promise = client\n            .getJobs({\n                epoch_range: [from, to],\n                user_ids: [username]\n            })\n            .then((metrics) => {\n                const converted = metrics.job_states.map((jobState) => {\n                    return serviceJobToUIJob(jobState, username);\n                });\n                return converted;\n            })\n\n        const task: Task<MyJobsResult> = {\n            id: this.newID(),\n            promise,\n            isCanceled: false\n        }\n        this.pendingTasks.set(task.id, task);\n        return task;\n    }\n}\n\n\nconst myJobsSearchRequests = new MyJobsRequests();\n\nexport function myJobsSearch(searchExpression: JobsSearchExpression) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(myJobsSearchStart());\n\n        const {\n            auth: { userAuthorization }\n        } = getState();\n\n        if (!userAuthorization) {\n            dispatch(\n                myJobsSearchError({\n                    message: 'Not authorized',\n                    code: 'unauthorized'\n                })\n            );\n            return;\n        }\n\n        let {\n            app: {\n                config: {\n                    services: {\n                        ServiceWizard: { url: serviceWizardURL }\n                    }\n                }\n            },\n            views: {\n                myJobsView: { jobsFetchedAt, rawJobs }\n            }\n        } = getState();\n\n        const searchTerms = searchExpression.query.split(/\\s+/).map((term) => {\n            return new RegExp(term, 'i');\n        });\n\n        const [timeRangeStart, timeRangeEnd] = extractTimeRange(searchExpression.timeRange);\n\n        // Umm, there must be other conditions which make a real search happen, or is \n        // forceSearch now the way to do this? ...\n        if (!jobsFetchedAt || searchExpression.forceSearch) {\n            const task = myJobsSearchRequests.spawn({\n                token: userAuthorization.token,\n                username: userAuthorization.username,\n                serviceWizardURL,\n                from: timeRangeStart,\n                to: timeRangeEnd\n            });\n\n            rawJobs = await task.promise;\n            if (task.isCanceled) {\n                // just do nothing\n                return;\n            }\n            jobsFetchedAt = new Date().getTime();\n            myJobsSearchRequests.done(task);\n            // UPDATE: update the raw jobs\n        }\n\n        const newJobs = rawJobs.filter((job) => {\n            return (\n                searchTerms.every((term) => {\n                    return term.test(job.appTitle) || term.test(job.narrativeTitle);\n                }) &&\n                compareTimeRange(job, timeRangeStart, timeRangeEnd) &&\n                compareStatus(job, searchExpression.jobStatus)\n            );\n        });\n\n        dispatch(myJobsSearchSuccess(rawJobs, newJobs, jobsFetchedAt, searchExpression));\n    };\n}\n\n// Jobs refetch\n\nexport function myJobsRefreshSearch() {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(myJobsSearchStart());\n\n        const {\n            auth: { userAuthorization }\n        } = getState();\n\n        if (!userAuthorization) {\n            dispatch(\n                myJobsSearchError({\n                    message: 'Not authorized',\n                    code: 'unauthorized'\n                })\n            );\n            return;\n        }\n\n        const {\n            app: {\n                config: {\n                    services: {\n                        ServiceWizard: { url: serviceWizardURL }\n                    }\n                }\n            },\n            views: {\n                myJobsView: { searchExpression }\n            }\n        } = getState();\n\n        if (!searchExpression) {\n            myJobsSearchError({\n                message: 'No search expression',\n                code: 'nosearchexpression'\n            });\n            return;\n        }\n\n        const [timeRangeStart, timeRangeEnd] = extractTimeRange(searchExpression.timeRange);\n\n        const searchTerms = searchExpression.query.split(/\\s+/).map((term) => {\n            return new RegExp(term, 'i');\n        });\n\n        const task = myJobsSearchRequests.spawn({\n            token: userAuthorization.token,\n            username: userAuthorization.username,\n            serviceWizardURL,\n            from: timeRangeStart,\n            to: timeRangeEnd\n        });\n\n        const rawJobs = await task.promise;\n        if (task.isCanceled) {\n            // just do nothing\n            return;\n        }\n        // jobsFetchedAt = new Date().getTime();\n        myJobsSearchRequests.done(task);\n\n        // const rawJobs = await fetchMyJobs(\n        //     userAuthorization.token,\n        //     userAuthorization.username,\n        //     serviceWizardURL,\n        //     timeRangeStart,\n        //     timeRangeEnd\n        // );\n\n        const newJobs = rawJobs.filter((job) => {\n            return (\n                searchTerms.every((term) => {\n                    return term.test(job.appTitle) || term.test(job.narrativeTitle);\n                }) &&\n                compareTimeRange(\n                    job,\n                    // searchExpression.timeRange,\n                    timeRangeStart,\n                    timeRangeEnd\n                ) &&\n                compareStatus(job, searchExpression.jobStatus)\n            );\n        });\n\n        dispatch(myJobsSearchSuccess(rawJobs, newJobs, Date.now(), searchExpression));\n    };\n}\n\n// JOB CANCELATION\n\n// Job Cancelation\n\nexport interface MyJobsCancelJob {\n    type: ActionType.MY_JOBS_CANCEL;\n    jobID: string;\n}\n\nexport interface MyJobsCancelJobStart {\n    type: ActionType.MY_JOBS_CANCEL_START;\n}\n\nexport interface MyJobsCancelJobSuccess {\n    type: ActionType.MY_JOBS_CANCEL_SUCCESS;\n}\n\nexport interface MyJobsCancelJobError {\n    type: ActionType.MY_JOBS_CANCEL_ERROR;\n    error: AppError;\n}\n\nexport function myJobsCancelJobStart(): MyJobsCancelJobStart {\n    return {\n        type: ActionType.MY_JOBS_CANCEL_START\n    };\n}\n\nexport function myJobsCancelJobSuccess(): MyJobsCancelJobSuccess {\n    return {\n        type: ActionType.MY_JOBS_CANCEL_SUCCESS\n    };\n}\n\nexport function myJobsCancelJobError(error: AppError): MyJobsCancelJobError {\n    return {\n        type: ActionType.MY_JOBS_CANCEL_ERROR,\n        error\n    };\n}\n\nexport function myJobsCancelJob(jobID: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(myJobsCancelJobStart());\n\n        const {\n            auth: { userAuthorization },\n            app: {\n                config: {\n                    services: {\n                        NarrativeJobService: { url: njsURL }\n                    }\n                }\n            }\n        } = getState();\n\n        if (!userAuthorization) {\n            dispatch(\n                myJobsCancelJobError({\n                    message: 'no authorization',\n                    code: 'no-authorization'\n                })\n            );\n            return;\n        }\n\n        // do it\n        const njsClient = new NarrativeJobServiceClient({\n            url: njsURL,\n            token: userAuthorization.token,\n            module: 'NarrativeJobService'\n        });\n        njsClient\n            .cancelJob({ job_id: jobID })\n            .then(() => {\n                dispatch(myJobsCancelJobSuccess());\n                dispatch(myJobsRefreshSearch());\n            })\n            .catch((err) => {\n                console.error('error canceling job', err);\n                dispatch(\n                    myJobsCancelJobError({\n                        message: 'error canceling job: ' + err.message,\n                        code: 'error-canceling'\n                    })\n                );\n            });\n    };\n}\n","import { Dispatch, Action } from 'redux';\nimport { connect } from 'react-redux';\nimport MyJobs from './view';\n\nimport { StoreState, Job, JobsSearchExpression, SearchState } from '../../redux/store';\nimport { myJobsSearch, myJobsRefreshSearch, myJobsCancelJob } from '../../redux/actions/myJobs';\n\nexport interface OwnProps { }\n\ninterface StateProps {\n    jobs: Array<Job>;\n    searchState: SearchState;\n    showMonitoringControls: boolean;\n}\n\ninterface DispatchProps {\n    search: (searchExpression: JobsSearchExpression) => void;\n    cancelJob: (jobID: string) => void;\n    refreshSearch: () => void;\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const {\n        auth: { userAuthorization },\n        views: {\n            myJobsView: { searchState, jobs }\n        }\n    } = state;\n\n    if (!userAuthorization) {\n        throw new Error('Not authorized!');\n    }\n\n    // const { roles } = userAuthorization\n    // console.log('roles?', roles);\n    // const showMonitoringControls = roles.some((role) => {\n    //     return role === 'DevToken';\n    // })\n    const showMonitoringControls = true;\n\n    return { jobs, searchState, showMonitoringControls };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>, ownProps: OwnProps): DispatchProps {\n    return {\n        search: (searchExpression: JobsSearchExpression) => {\n            dispatch(myJobsSearch(searchExpression) as any);\n        },\n        cancelJob: (jobID: string) => {\n            dispatch(myJobsCancelJob(jobID) as any);\n        },\n        refreshSearch: () => {\n            dispatch(myJobsRefreshSearch() as any);\n        }\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(MyJobs);\n","import React from 'react';\nimport { AppStat, PublicAppStatsQuery, SearchState } from '../../redux/store';\nimport { Table, Form, Progress, Input, Button, Tooltip } from 'antd';\nimport { NiceTimeDuration } from '@kbase/ui-components';\nimport { PaginationConfig, SorterResult } from 'antd/lib/table';\n\nexport interface PublicAppStatsProps {\n    searchState: SearchState;\n    appStats: Array<AppStat>;\n    onSearch: (query: PublicAppStatsQuery) => void;\n}\n\ninterface PublicAppStatsState {\n    appStats: Array<AppStat>;\n}\n\nexport default class PublicAppStats extends React.Component<PublicAppStatsProps, PublicAppStatsState> {\n    currentQuery: string;\n    constructor(props: PublicAppStatsProps) {\n        super(props);\n        this.currentQuery = '';\n    }\n    componentDidMount() {\n        this.props.onSearch({\n            query: this.currentQuery\n        });\n    }\n    onSubmitSearch(event: React.FormEvent) {\n        event.preventDefault();\n        this.props.onSearch({\n            query: this.currentQuery\n        });\n    }\n    onChangeQuery(event: React.ChangeEvent<HTMLInputElement>) {\n        this.currentQuery = event.target.value;\n    }\n    renderControlBar() {\n        return (\n            <Form layout=\"inline\" onSubmit={this.onSubmitSearch.bind(this)}>\n                <Form.Item>\n                    <Input\n                        defaultValue={this.currentQuery}\n                        placeholder=\"Search App Stats (leave empty for all)\"\n                        style={{ width: '20em' }}\n                        onChange={this.onChangeQuery.bind(this)}\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button icon=\"search\" type=\"primary\" htmlType=\"submit\" />\n                </Form.Item>\n            </Form>\n        );\n    }\n    onTableChange(pagination: PaginationConfig, filters: any, sorter: SorterResult<AppStat>) { }\n    renderAppStatsTable() {\n        return (\n            <div>\n                <div>{this.renderControlBar()}</div>\n                <div>\n                    <Table<AppStat>\n                        dataSource={this.props.appStats}\n                        loading={this.props.searchState === SearchState.SEARCHING}\n                        rowKey={(stat: AppStat) => {\n                            return stat.appId;\n                        }}\n                        pagination={{ position: 'bottom', showSizeChanger: true }}\n                        size=\"small\"\n                        className=\"PreciseTable\"\n                        onChange={this.onTableChange}\n                    >\n                        <Table.Column\n                            title=\"Module\"\n                            dataIndex=\"moduleId\"\n                            key=\"moduleId\"\n                            width=\"25%\"\n                            render={(moduleId: string, stat: AppStat) => {\n                                return (\n                                    <Tooltip title={stat.moduleTitle}>\n                                        <a href={`#catalog/module/${moduleId}`}>{stat.moduleTitle}</a>\n                                    </Tooltip>\n                                );\n                            }}\n                            sorter={(a: AppStat, b: AppStat) => {\n                                return a.moduleTitle.localeCompare(b.moduleTitle);\n                            }}\n                            defaultSortOrder=\"ascend\"\n                        />\n                        <Table.Column\n                            title=\"Function\"\n                            dataIndex=\"functionId\"\n                            key=\"functionId\"\n                            width=\"25%\"\n                            render={(functionId: string, stat: AppStat) => {\n                                return (\n                                    <Tooltip title={stat.functionTitle}>\n                                        <a href={`#catalog/apps/${stat.moduleId}/${stat.functionId}`}>\n                                            {stat.functionTitle}\n                                        </a>\n                                    </Tooltip>\n                                );\n                            }}\n                            sorter={(a: AppStat, b: AppStat) => {\n                                return a.functionTitle.localeCompare(b.functionTitle);\n                            }}\n                        />\n                        <Table.Column\n                            title=\"Runs\"\n                            dataIndex=\"runCount\"\n                            key=\"runCount\"\n                            width=\"5%\"\n                            align=\"right\"\n                            render={(runCount: number) => {\n                                return (\n                                    <div className=\"NumericColumn\">\n                                        {new Intl.NumberFormat('en-US', {\n                                            useGrouping: true\n                                        }).format(runCount)}\n                                    </div>\n                                );\n                            }}\n                            sorter={(a: AppStat, b: AppStat) => {\n                                return a.runCount - b.runCount;\n                            }}\n                        />\n                        <Table.Column\n                            title=\"Errors\"\n                            dataIndex=\"errorCount\"\n                            key=\"errorCount\"\n                            width=\"5%\"\n                            align=\"right\"\n                            render={(errorCount: number) => {\n                                return (\n                                    <div className=\"NumericColumn\">\n                                        {new Intl.NumberFormat('en-US', {\n                                            useGrouping: true\n                                        }).format(errorCount)}\n                                    </div>\n                                );\n                            }}\n                            sorter={(a: AppStat, b: AppStat) => {\n                                return a.errorCount - b.errorCount;\n                            }}\n                        />\n                        <Table.Column\n                            title=\"Success Rate\"\n                            dataIndex=\"successRate\"\n                            key=\"successRate\"\n                            width=\"10%\"\n                            render={(successRate: number) => {\n                                return (\n                                    <Progress\n                                        percent={successRate * 100}\n                                        format={(percent: number | undefined) => {\n                                            return new Intl.NumberFormat('en-US', {\n                                                style: 'percent'\n                                            }).format(successRate);\n                                        }}\n                                    />\n                                );\n                            }}\n                            sorter={(a: AppStat, b: AppStat) => {\n                                return a.successRate - b.successRate;\n                            }}\n                        />\n                        <Table.Column\n                            title=\"Avg Run Time\"\n                            dataIndex=\"averageRunTime\"\n                            key=\"averageRunTime\"\n                            width=\"10%\"\n                            render={(averageRunTime: number) => {\n                                return <NiceTimeDuration precision={2} duration={averageRunTime * 1000} />;\n                            }}\n                            sorter={(a: AppStat, b: AppStat) => {\n                                return a.averageRunTime - b.averageRunTime;\n                            }}\n                        />\n                        <Table.Column\n                            title=\"Avg Queue Time\"\n                            dataIndex=\"averageQueueTime\"\n                            key=\"averageQueueTime\"\n                            width=\"10%\"\n                            render={(averageQueueTime: number) => {\n                                return <NiceTimeDuration precision={2} duration={averageQueueTime * 1000} />;\n                            }}\n                            sorter={(a: AppStat, b: AppStat) => {\n                                return a.averageQueueTime - b.averageQueueTime;\n                            }}\n                        />\n                        <Table.Column\n                            title=\"Total Run Time\"\n                            dataIndex=\"totalRunTime\"\n                            key=\"totalRunTime\"\n                            width=\"10%\"\n                            render={(totalRunTime: number) => {\n                                return <NiceTimeDuration precision={2} duration={totalRunTime * 1000} />;\n                            }}\n                            sorter={(a: AppStat, b: AppStat) => {\n                                return a.totalRunTime - b.totalRunTime;\n                            }}\n                        />\n                    </Table>\n                </div>\n            </div>\n        );\n    }\n    render() {\n        return <div>{this.renderAppStatsTable()}</div>;\n    }\n}\n","import { Action } from 'redux';\nimport { ActionType } from '.';\nimport { StoreState, AppStat, PublicAppStatsQuery } from '../store';\nimport { CatalogClient } from '@kbase/ui-lib';\nimport { AppError } from '@kbase/ui-components';\n\nimport { ThunkDispatch } from 'redux-thunk';\n\nfunction calcAverage(total: number, count: number) {\n    if (total) {\n        if (count) {\n            return total / count;\n        } else {\n            return null;\n        }\n    } else {\n        if (count) {\n            return 0;\n        } else {\n            return null;\n        }\n    }\n}\n\nfunction calcRate(part: number, whole: number) {\n    if (part) {\n        if (whole) {\n            return part / whole;\n        } else {\n            return null;\n        }\n    } else {\n        if (whole) {\n            return 0;\n        } else {\n            return null;\n        }\n    }\n}\n\n// Search\n\nexport interface Search extends Action<ActionType.PUBLIC_APP_STATS_SEARCH> {\n    type: ActionType.PUBLIC_APP_STATS_SEARCH;\n    query: PublicAppStatsQuery;\n}\n\nexport interface SearchStart extends Action<ActionType.PUBLIC_APP_STATS_SEARCH_START> {\n    type: ActionType.PUBLIC_APP_STATS_SEARCH_START;\n}\n\nexport interface SearchError extends Action<ActionType.PUBLIC_APP_STATS_SEARCH_ERROR> {\n    type: ActionType.PUBLIC_APP_STATS_SEARCH_ERROR;\n    error: AppError;\n}\n\nexport interface SearchSuccess extends Action<ActionType.PUBLIC_APP_STATS_SEARCH_SUCCESS> {\n    type: ActionType.PUBLIC_APP_STATS_SEARCH_SUCCESS;\n    appStats: Array<AppStat>;\n}\n\nfunction searchStart(): SearchStart {\n    return {\n        type: ActionType.PUBLIC_APP_STATS_SEARCH_START\n    };\n}\n\nfunction searchError(error: AppError): SearchError {\n    return {\n        type: ActionType.PUBLIC_APP_STATS_SEARCH_ERROR,\n        error\n    };\n}\n\nfunction searchSuccess(appStats: Array<AppStat>): SearchSuccess {\n    return {\n        type: ActionType.PUBLIC_APP_STATS_SEARCH_SUCCESS,\n        appStats\n    };\n}\n\nexport function search(query: PublicAppStatsQuery) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(searchStart());\n\n        const {\n            auth: { userAuthorization },\n            app: {\n                config: {\n                    services: {\n                        Catalog: { url: catalogUrl }\n                    }\n                }\n            }\n        } = getState();\n\n        if (!userAuthorization) {\n            dispatch(\n                searchError({\n                    message: 'Not authorized',\n                    code: 'unauthorized'\n                })\n            );\n            return;\n        }\n\n        if (!userAuthorization) {\n            dispatch(\n                searchError({\n                    message: 'Not authorized',\n                    code: 'unauthorized'\n                })\n            );\n            return;\n        }\n\n        const catalogClient = new CatalogClient({\n            module: 'Catalog',\n            token: userAuthorization.token,\n            url: catalogUrl\n        });\n        const rawStats = await catalogClient.getExecAggrStats({});\n        const stats = rawStats.map((stat) => {\n            const [moduleId, functionId] = stat.full_app_id.split('/');\n            if (!moduleId || !functionId) {\n                console.warn('bad app!', stat);\n            }\n            const successRate = calcRate(stat.number_of_calls - stat.number_of_errors, stat.number_of_calls);\n            const averageRunTime = calcAverage(stat.total_exec_time, stat.number_of_calls);\n            const averageQueueTime = calcAverage(stat.total_queue_time, stat.number_of_calls);\n            return {\n                appId: stat.full_app_id,\n                moduleId,\n                functionId: functionId || '',\n                moduleTitle: moduleId,\n                functionTitle: functionId || '',\n                runCount: stat.number_of_calls,\n                errorCount: stat.number_of_errors,\n                successRate,\n                averageRunTime,\n                averageQueueTime,\n                totalRunTime: stat.total_queue_time\n            } as AppStat;\n        });\n\n        const expression = query.query.split(/\\s+/).map((term) => {\n            return new RegExp(term, 'i');\n        });\n        const filtered = stats.filter((stat) => {\n            return expression.every((term) => {\n                return (\n                    term.test(stat.moduleTitle) ||\n                    term.test(stat.moduleId) ||\n                    term.test(stat.functionTitle) ||\n                    term.test(stat.functionId)\n                );\n            });\n        });\n\n        dispatch(searchSuccess(filtered));\n    };\n}\n","import { StoreState, AppStat, PublicAppStatsQuery, SearchState } from '../../redux/store';\nimport { Action, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport Component from './view';\nimport { search } from '../../redux/actions/publicAppStats';\n\nexport interface OwnProps {}\n\ninterface StateProps {\n    searchState: SearchState;\n    appStats: Array<AppStat>;\n}\n\ninterface DispatchProps {\n    onSearch: (query: PublicAppStatsQuery) => void;\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const {\n        views: {\n            publicAppStatsView: { appStats, searchState }\n        }\n    } = state;\n    return {\n        searchState,\n        appStats\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>, ownProps: OwnProps): DispatchProps {\n    return {\n        onSearch: (query: PublicAppStatsQuery) => {\n            dispatch(search(query) as any);\n        }\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(Component);\n","import React from 'react';\n\nimport { UserRunSummaryStat, SearchState, UserRunSummaryQuery } from '../../redux/store';\nimport { Table, Form, Input, Button, Tooltip } from 'antd';\n\nexport interface UserRunSummaryProps {\n    searchState: SearchState;\n    userRunSummary: Array<UserRunSummaryStat>;\n    search: (query: UserRunSummaryQuery) => void;\n}\n\ninterface UserRunSummaryState {}\n\nexport default class UserRunSummary extends React.Component<UserRunSummaryProps, UserRunSummaryState> {\n    currentQuery: UserRunSummaryQuery;\n    constructor(props: UserRunSummaryProps) {\n        super(props);\n        this.currentQuery = {\n            query: ''\n        };\n    }\n    componentDidMount() {\n        this.props.search(this.currentQuery);\n    }\n    onSubmitSearch(event: React.FormEvent) {\n        event.preventDefault();\n        this.props.search(this.currentQuery);\n    }\n    onChangeQuery(event: React.ChangeEvent<HTMLInputElement>) {\n        this.currentQuery.query = event.target.value;\n    }\n    renderControlBar() {\n        return (\n            <Form layout=\"inline\" onSubmit={this.onSubmitSearch.bind(this)}>\n                <Form.Item>\n                    <Input\n                        defaultValue={this.currentQuery.query}\n                        placeholder=\"Search (leave empty for all)\"\n                        style={{ width: '20em' }}\n                        onChange={this.onChangeQuery.bind(this)}\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button icon=\"search\" type=\"primary\" htmlType=\"submit\" />\n                </Form.Item>\n            </Form>\n        );\n    }\n    renderTable() {\n        return (\n            <Table<UserRunSummaryStat>\n                dataSource={this.props.userRunSummary}\n                loading={this.props.searchState === SearchState.SEARCHING}\n                rowKey={(stat: UserRunSummaryStat) => {\n                    return stat.username + '.' + stat.appId;\n                }}\n                pagination={{ position: 'bottom', showSizeChanger: true }}\n                size=\"small\"\n                className=\"PreciseTable\"\n            >\n                <Table.Column\n                    title=\"User\"\n                    dataIndex=\"username\"\n                    key=\"username\"\n                    width=\"30%\"\n                    render={(username: string, stat: UserRunSummaryStat) => {\n                        return (\n                            <Tooltip title={username}>\n                                <a href={`#people/${username}`} target=\"_parent\">\n                                    {username}\n                                </a>\n                            </Tooltip>\n                        );\n                    }}\n                    sorter={(a: UserRunSummaryStat, b: UserRunSummaryStat) => {\n                        return a.username.localeCompare(b.username);\n                    }}\n                />\n                <Table.Column\n                    title=\"Module\"\n                    dataIndex=\"moduleId\"\n                    key=\"moduleId\"\n                    width=\"30%\"\n                    render={(moduleId: string) => {\n                        return (\n                            <Tooltip title={moduleId}>\n                                <a href={`#catalog/module/${moduleId}`} target=\"_parent\">\n                                    {moduleId}\n                                </a>\n                            </Tooltip>\n                        );\n                    }}\n                    sorter={(a: UserRunSummaryStat, b: UserRunSummaryStat) => {\n                        return a.moduleId.localeCompare(b.moduleId);\n                    }}\n                />\n                <Table.Column\n                    title=\"Function\"\n                    dataIndex=\"functionId\"\n                    key=\"functionId\"\n                    width=\"30%\"\n                    render={(functionId: string, stat: UserRunSummaryStat) => {\n                        return (\n                            <Tooltip title={functionId}>\n                                <a href={`#catalog/apps/${stat.appId}`} target=\"_parent\">\n                                    {functionId}\n                                </a>\n                            </Tooltip>\n                        );\n                    }}\n                    sorter={(a: UserRunSummaryStat, b: UserRunSummaryStat) => {\n                        return a.functionId.localeCompare(b.functionId);\n                    }}\n                />\n                <Table.Column\n                    title=\"Runs\"\n                    dataIndex=\"runCount\"\n                    key=\"runCount\"\n                    width=\"10%\"\n                    align=\"right\"\n                    render={(runCount: number, stat: UserRunSummaryStat) => {\n                        return (\n                            <div className=\"NumericColumn\">\n                                {Intl.NumberFormat('en-US', {\n                                    useGrouping: true\n                                }).format(runCount)}\n                            </div>\n                        );\n                    }}\n                    sorter={(a: UserRunSummaryStat, b: UserRunSummaryStat) => {\n                        return a.runCount - b.runCount;\n                    }}\n                    defaultSortOrder=\"descend\"\n                />\n            </Table>\n        );\n    }\n    render() {\n        return (\n            <div>\n                <div>{this.renderControlBar()}</div>\n                <div> {this.renderTable()}</div>\n            </div>\n        );\n    }\n}\n","import { Action } from 'redux';\nimport { ActionType } from '.';\nimport { StoreState, UserRunSummaryQuery, UserRunSummaryStat } from '../store';\nimport { CatalogClient } from '@kbase/ui-lib';\nimport { AppError } from '@kbase/ui-components';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { } from './utils';\n\n// Search\n\nexport interface Search extends Action<ActionType.USER_RUN_SUMMARY_SEARCH> {\n    type: ActionType.USER_RUN_SUMMARY_SEARCH;\n    query: UserRunSummaryQuery;\n}\n\nexport interface SearchStart extends Action<ActionType.USER_RUN_SUMMARY_SEARCH_START> {\n    type: ActionType.USER_RUN_SUMMARY_SEARCH_START;\n}\n\nexport interface SearchError extends Action<ActionType.USER_RUN_SUMMARY_SEARCH_ERROR> {\n    type: ActionType.USER_RUN_SUMMARY_SEARCH_ERROR;\n    error: AppError;\n}\n\nexport interface SearchSuccess extends Action<ActionType.USER_RUN_SUMMARY_SEARCH_SUCCESS> {\n    type: ActionType.USER_RUN_SUMMARY_SEARCH_SUCCESS;\n    userRunSummary: Array<UserRunSummaryStat>;\n}\n\nfunction searchStart(): SearchStart {\n    return {\n        type: ActionType.USER_RUN_SUMMARY_SEARCH_START\n    };\n}\n\nfunction searchError(error: AppError): SearchError {\n    return {\n        type: ActionType.USER_RUN_SUMMARY_SEARCH_ERROR,\n        error\n    };\n}\n\nfunction searchSuccess(userRunSummary: Array<UserRunSummaryStat>): SearchSuccess {\n    return {\n        type: ActionType.USER_RUN_SUMMARY_SEARCH_SUCCESS,\n        userRunSummary\n    };\n}\n\nexport function search(query: UserRunSummaryQuery) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(searchStart());\n\n        const {\n            auth: { userAuthorization },\n            app: {\n                config: {\n                    services: {\n                        Catalog: { url: catalogUrl }\n                    }\n                }\n            }\n        } = getState();\n\n        if (!userAuthorization) {\n            dispatch(\n                searchError({\n                    message: 'Not authorized',\n                    code: 'unauthorized'\n                })\n            );\n            return;\n        }\n\n        if (!userAuthorization) {\n            dispatch(\n                searchError({\n                    message: 'Not authorized',\n                    code: 'unauthorized'\n                })\n            );\n            return;\n        }\n\n        const catalogClient = new CatalogClient({\n            module: 'Catalog',\n            token: userAuthorization.token,\n            url: catalogUrl\n        });\n        const params = {\n            begin: 0,\n            end: Date.now()\n        };\n        const rawStats = await catalogClient.getExecAggrTable(params);\n        const stats = rawStats.map((stat) => {\n            let appId, moduleId, functionId;\n            if (!stat.app) {\n                moduleId = stat.func_mod;\n                functionId = stat.func;\n                appId = [moduleId, functionId].join('/');\n            } else {\n                [moduleId, functionId] = stat.app.split('/');\n                appId = stat.app;\n            }\n\n            if (!moduleId || !functionId) {\n                console.warn('bad app!', stat);\n            }\n\n            return {\n                username: stat.user,\n                appId: appId,\n                moduleId: moduleId,\n                functionId: functionId,\n                runCount: stat.n\n            } as UserRunSummaryStat;\n        });\n\n        const expression = query.query.split(/\\s+/).map((term) => {\n            return new RegExp(term, 'i');\n        });\n        const filtered = stats.filter((stat) => {\n            return expression.every((term) => {\n                return (\n                    term.test(stat.appId) ||\n                    term.test(stat.moduleId) ||\n                    term.test(stat.functionId) ||\n                    term.test(stat.username)\n                );\n            });\n        });\n\n        dispatch(searchSuccess(filtered));\n    };\n}\n","import { StoreState, SearchState, UserRunSummaryStat, UserRunSummaryQuery } from '../../redux/store';\nimport { Action, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport Component from './view';\nimport { search } from '../../redux/actions/userRunSummary';\n\nexport interface OwnProps {}\n\ninterface StateProps {\n    searchState: SearchState;\n    userRunSummary: Array<UserRunSummaryStat>;\n}\n\ninterface DispatchProps {\n    search: (query: UserRunSummaryQuery) => void;\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const {\n        views: {\n            userRunSummaryView: { searchState, userRunSummary }\n        }\n    } = state;\n    return { searchState, userRunSummary };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>, ownProps: OwnProps): DispatchProps {\n    return {\n        search: (query: UserRunSummaryQuery) => {\n            dispatch(search(query) as any);\n        }\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(Component);\n","import React from 'react';\nimport { Tabs, Icon } from 'antd';\nimport './style.css';\nimport UserJobs from '../UserJobs';\nimport MyJobs from '../MyJobs';\nimport PublicAppStats from '../PublicAppStats';\nimport UserRunSummary from '../UserRunSummary';\nimport { MainParams } from './state';\n\nexport interface MainProps {\n    isAdmin: boolean;\n    params: MainParams;\n    view: string;\n    setTitle: (title: string) => void;\n    setView: (view: string) => void;\n    setParams: (params: MainParams) => void;\n}\n\ninterface MainState {\n    activeTabKey: string | null;\n    defaultActiveTabKey: string | null;\n}\n\nexport default class Main extends React.Component<MainProps, MainState> {\n    defaultTabKey: string;\n    constructor(props: MainProps) {\n        super(props);\n        this.defaultTabKey = 'myJobs';\n        this.state = {\n            activeTabKey: this.defaultTabKey,\n            defaultActiveTabKey: this.defaultTabKey\n        };\n    }\n\n    componentDidMount() {\n        this.props.setTitle('Job Browser');\n\n        // window.setTimeout(() => {\n        //     this.props.setParams({ tab: 'userJobs' });\n        // }, 1000);\n    }\n\n    componentWillUnmount() {\n        this.setState({\n            activeTabKey: null\n            // defaultActiveTabKey: null\n        });\n    }\n\n    onTabsChange(activeKey: string) {\n        // console.log('tabs changed', activeKey, this.activeTabKey);\n        this.setState({ activeTabKey: activeKey });\n        // this.state.activeTabKey = activeKey;\n    }\n\n    renderJobsTab() { }\n\n    renderAdminJobsTab() { }\n\n    renderTabs() {\n        let userRunTab;\n        let userJobsTab;\n        // console.log('rendering, admin?', this.props.isAdmin);\n        if (this.props.isAdmin) {\n            const tabLabel = (\n                <span>\n                    User Run Summary <Icon type=\"unlock\" />\n                </span>\n            );\n            userRunTab = (\n                <Tabs.TabPane tab={tabLabel} key=\"userRunSummary\">\n                    <UserRunSummary />\n                </Tabs.TabPane>\n            );\n            const userJobsTabLabel = (\n                <span>\n                    User Jobs <Icon type=\"unlock\" />\n                </span>\n            );\n            userJobsTab = (\n                <Tabs.TabPane tab={userJobsTabLabel} key=\"userJobs\">\n                    <UserJobs />\n                </Tabs.TabPane>\n            );\n        }\n\n        // FIXME: The animated flag is set to false below because for some reason antd (on safari at least) is not\n        // correctly rendering any tab other than the first one with animation enabled (which is default).\n        // Please investigate and either find what we have done wrong or antd has.\n        // console.log('default active tab key?', this.state.defaultActiveTabKey);\n        return (\n            <Tabs\n                animated={false}\n                // defaultActiveKey={this.state.activeTabKey || undefined}\n                activeKey={this.props.params.tab || this.state.activeTabKey || undefined}\n                // className=\"FlexTabs\"\n                onChange={this.onTabsChange.bind(this)}\n                destroyInactiveTabPane={true}\n            >\n                <Tabs.TabPane tab=\"My Jobs\" key=\"myJobs\">\n                    <MyJobs />\n                </Tabs.TabPane>\n\n                <Tabs.TabPane tab=\"Public App Stats\" key=\"publicAppStats\">\n                    <PublicAppStats />\n                </Tabs.TabPane>\n\n                {userJobsTab}\n                {userRunTab}\n            </Tabs>\n        );\n    }\n\n    render() {\n        return <div className=\"Col Col-scrollable\">{this.renderTabs()}</div>;\n    }\n}\n","import { Dispatch, Action } from 'redux';\nimport { connect } from 'react-redux';\nimport Main from './view';\nimport { StoreState } from '../../redux/store';\nimport { sendTitle, setView, setParams } from '@kbase/ui-components';\nimport { Params } from '@kbase/ui-lib/lib/redux/integration/store';\n\nexport interface OwnProps { }\n\nexport type MainParams = Params<'tab'>;\n\ninterface StateProps {\n    isAdmin: boolean;\n    params: MainParams;\n    view: string;\n}\n\ninterface DispatchProps {\n    setTitle: (title: string) => void;\n    setView: (view: string) => void;\n    setParams: (params: MainParams) => void;\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const {\n        views: {\n            mainView: { isAdmin }\n        },\n        app: {\n            runtime: {\n                navigation: { view, params: rawParams }\n            }\n        }\n    } = state;\n    // TODO: call function to coerce raw params into typed params...\n    const params: MainParams = (rawParams as unknown) as MainParams;\n    return { isAdmin, view, params };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>, ownProps: OwnProps): DispatchProps {\n    return {\n        setTitle: (title: string) => {\n            dispatch(sendTitle(title) as any);\n        },\n        setView: (view: string) => {\n            dispatch(setView(view) as any);\n        },\n        setParams: (params: MainParams) => {\n            dispatch(setParams(params) as any);\n        }\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(Main);\n","import { Action } from 'redux';\nimport { ActionType } from '.';\nimport { CatalogClient } from '@kbase/ui-lib';\nimport { AppError } from '@kbase/ui-components';\n\nimport { ThunkDispatch } from 'redux-thunk';\nimport { StoreState } from '../store';\n\n// MAIN Loading\n\nexport interface MainLoad extends Action<ActionType.MAIN_LOAD> {\n    type: ActionType.MAIN_LOAD;\n}\n\nexport interface MainLoadStart extends Action<ActionType.MAIN_LOAD_START> {\n    type: ActionType.MAIN_LOAD_START;\n}\n\nexport interface MainLoadSuccess extends Action<ActionType.MAIN_LOAD_SUCCESS> {\n    type: ActionType.MAIN_LOAD_SUCCESS;\n    isAdmin: boolean;\n}\n\nexport interface MainLoadError extends Action<ActionType.MAIN_LOAD_ERROR> {\n    type: ActionType.MAIN_LOAD_ERROR;\n    error: AppError;\n}\n\nexport interface Unload extends Action<ActionType.MAIN_UNLOAD> {\n    type: ActionType.MAIN_UNLOAD;\n}\n\nexport function mainLoadStart(): MainLoadStart {\n    return {\n        type: ActionType.MAIN_LOAD_START\n    };\n}\n\nexport function mainLoadSuccess(isAdmin: boolean): MainLoadSuccess {\n    return {\n        type: ActionType.MAIN_LOAD_SUCCESS,\n        isAdmin\n    };\n}\n\nexport function mainLoadError(error: AppError): MainLoadError {\n    return {\n        type: ActionType.MAIN_LOAD_ERROR,\n        error\n    };\n}\n\nexport function mainLoad() {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(mainLoadStart());\n        const {\n            auth: { userAuthorization },\n            app: {\n                config: {\n                    services: {\n                        Catalog: { url: catalogURL }\n                    }\n                }\n            }\n        } = getState();\n\n        if (!userAuthorization) {\n            dispatch(\n                mainLoadError({\n                    message: 'Not authorized',\n                    code: 'unauthorized'\n                })\n            );\n            return;\n        }\n\n        // determine auth\n        // TODO: we need a model object for interacting with the outside world\n        const catalogClient = new CatalogClient({\n            token: userAuthorization.token,\n            url: catalogURL,\n            module: 'Catalog'\n        });\n\n        try {\n            const isAdmin = await catalogClient.isAdmin();\n            dispatch(mainLoadSuccess(isAdmin ? true : false));\n        } catch (ex) {\n            dispatch(\n                mainLoadError({\n                    message: ex.message,\n                    code: 'error-checking-admin-status'\n                })\n            );\n        }\n    };\n}\n\nexport function unload() {\n    return {\n        type: ActionType.MAIN_UNLOAD\n    };\n}\n","/**\n * This is a \"loader\" component. It is solely responsible for\n */\nimport * as React from 'react';\nimport { ComponentLoadingState, StoreState, MainView } from '../../redux/store';\nimport Container from './state';\n\n// The redux connection\n\nimport { Dispatch, Action } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Spin, Alert } from 'antd';\nimport { mainLoad, unload } from '../../redux/actions/app';\n\n// First the loader component, which takes care of a loading view, error view, and the\n// container.\n\nexport interface LoaderProps {\n    view: MainView;\n    onLoad: () => void;\n    unload: () => void;\n}\n\ninterface LoaderState { }\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    renderLoading() {\n        const message = (\n            <div>\n                Loading Main ... <Spin />\n            </div>\n        );\n        return (\n            <Alert\n                type=\"info\"\n                message={message}\n                style={{\n                    width: '20em',\n                    padding: '20px',\n                    margin: '20px auto'\n                }}\n            />\n        );\n    }\n\n    renderError() {\n        if (!this.props.view.error) {\n            return;\n        }\n        return <Alert type=\"error\" message={this.props.view.error.message} />;\n    }\n\n    render() {\n        switch (this.props.view.loadingState) {\n            case ComponentLoadingState.NONE:\n                return this.renderLoading();\n            case ComponentLoadingState.LOADING:\n                return this.renderLoading();\n            case ComponentLoadingState.ERROR:\n                return this.renderError();\n            case ComponentLoadingState.SUCCESS:\n                return <Container />;\n        }\n    }\n\n    componentDidMount() {\n        // console.log('did mount?', this.props.view.loadingState);\n        // this.props.onLoad();\n        switch (this.props.view.loadingState) {\n            case ComponentLoadingState.NONE:\n                // should only appear briefly as the LOAD event is processed.\n                this.props.onLoad();\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.unload();\n    }\n}\n\n/**\n * This is the redux interface -- the main entry point for the Main Component.\n */\n\nexport interface OwnProps { }\n\ninterface StateProps {\n    view: MainView;\n    token: string;\n}\n\ninterface DispatchProps {\n    onLoad: () => void;\n    unload: () => void;\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const {\n        auth: { userAuthorization },\n        views: { mainView }\n    } = state;\n    return {\n        view: mainView,\n        token: userAuthorization!.token\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>, props: OwnProps): DispatchProps {\n    return {\n        onLoad: () => {\n            dispatch(mainLoad() as any);\n        },\n        unload: () => {\n            dispatch(unload() as any);\n        }\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(Loader);\n","/**\n * The top component of the App, named appropriately App.\n *\n * As the top level component of the app, it is responsible for the setting up\n * any top level support such as the KBase integration (kbase-ui's AppBase) and\n * the redux store.\n */\n\n// 3rd party\nimport React from 'react';\nimport { createReduxStore } from './redux/store';\nimport { Provider } from 'react-redux';\n\n// KBase external\nimport { AppBase } from '@kbase/ui-components';\n\nimport { AuthGate } from '@kbase/ui-components';\n\n// project\nimport Main from './components/Main';\n\n// file\nimport './App.css';\n\n/**\n * The app currently has no props, but we establish\n * a props interface as a placeholder.\n */\nexport interface AppProps { }\n\n/**\n * The app currently has no state, but we establish\n * a state interface as a placeholder.\n */\ninterface AppState { }\n\n// Redux setup\nconst store = createReduxStore();\n\n/**\n * The top level component for the entire web app.\n *\n * @remarks\n * Also see the [kbase-ui] support library, which provides AppBase\n *\n * @public\n */\nexport default class App extends React.Component<AppProps, AppState> {\n    constructor(props: AppProps) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <Provider store={store}>\n                <AppBase>\n                    <AuthGate required={true}>\n                        <Main />\n                    </AuthGate>\n                </AppBase>\n            </Provider>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * index.tsx\n * This is the root code run from the index.html, and is thus the entry point to the\n * app.\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}